# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["nvme" "xhci_pci" "thunderbolt" "usbhid" "uas" "sd_mod"];
  boot.initrd.kernelModules = ["dm-snapshot" "amdgpu"];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;
  services.xserver.enable = true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  hardware.graphics = {
    enable = true;
    extraPackages = with pkgs; [
      amdvlk
      rocmPackages.clr.icd
      libva
      libvdpau-va-gl
    ];
  };

  services.xserver.videoDrivers = [
    "amdgpu"
    "displaylink"
    "modesetting"
  ];

  #fileSystems."/mnt/video-assets" = {
  #device = "truenas:/mnt/main/enc/video-assets";
  #fsType = "nfs";
  #options = ["x-systemd.automount" "noauto"];
  #};

  environment.systemPackages = with pkgs; [
    pkgs.clinfo
    pkgs.displaylink
    pkgs.rocmPackages.rocminfo
    pkgs.davinci-resolve
    mesa
    libva
    libvdpau-va-gl

    vulkan-loader
    vulkan-validation-layers
    vulkan-headers
    vulkan-tools

    amdvlk
    rocmPackages.clr.icd
    rocmPackages.clr
    rocmPackages.rocm-runtime
    mesa.opencl # Enables Rusticl (OpenCL) support

    # For building applications that need Vulkan
    shaderc # Contains glslc compiler
  ];
}
