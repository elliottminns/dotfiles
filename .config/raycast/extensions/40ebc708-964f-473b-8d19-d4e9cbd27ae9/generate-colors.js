"use strict";var t8=Object.create;var Ka=Object.defineProperty;var d8=Object.getOwnPropertyDescriptor;var r8=Object.getOwnPropertyNames;var i8=Object.getPrototypeOf,s8=Object.prototype.hasOwnProperty;var u=(e,a)=>()=>(a||e((a={exports:{}}).exports,a),a.exports),n8=(e,a)=>{for(var p in a)Ka(e,p,{get:a[p],enumerable:!0})},ut=(e,a,p,t)=>{if(a&&typeof a=="object"||typeof a=="function")for(let d of r8(a))!s8.call(e,d)&&d!==p&&Ka(e,d,{get:()=>a[d],enumerable:!(t=d8(a,d))||t.enumerable});return e};var pp=(e,a,p)=>(p=e!=null?t8(i8(e)):{},ut(a||!e||!e.__esModule?Ka(p,"default",{value:e,enumerable:!0}):p,e)),l8=e=>ut(Ka({},"__esModule",{value:!0}),e);var ht=u(ft=>{var ct=Object.prototype.hasOwnProperty;function tp(e,a){var p,t;if(e===a)return!0;if(e&&a&&(p=e.constructor)===a.constructor){if(p===Date)return e.getTime()===a.getTime();if(p===RegExp)return e.toString()===a.toString();if(p===Array){if((t=e.length)===a.length)for(;t--&&tp(e[t],a[t]););return t===-1}if(!p||typeof e=="object"){t=0;for(p in e)if(ct.call(e,p)&&++t&&!ct.call(a,p)||!(p in a)||!tp(e[p],a[p]))return!1;return Object.keys(a).length===t}}return e!==e&&a!==a}ft.dequal=tp});var vt=u(Ja=>{"use strict";Object.defineProperty(Ja,"__esModule",{value:!0});Ja.useDeepMemo=void 0;var dp=require("react"),m8=ht();function o8(e){let a=(0,dp.useRef)(e),p=(0,dp.useRef)(0);return(0,m8.dequal)(e,a.current)||(a.current=e,p.current+=1),(0,dp.useMemo)(()=>a.current,[p.current])}Ja.useDeepMemo=o8});var I1=u(Za=>{"use strict";Object.defineProperty(Za,"__esModule",{value:!0});Za.useLatest=void 0;var u8=require("react");function c8(e){let a=(0,u8.useRef)(e);return a.current=e,a}Za.useLatest=c8});var ma=u(x1=>{"use strict";var f8=x1&&x1.__createBinding||(Object.create?function(e,a,p,t){t===void 0&&(t=p);var d=Object.getOwnPropertyDescriptor(a,p);(!d||("get"in d?!a.__esModule:d.writable||d.configurable))&&(d={enumerable:!0,get:function(){return a[p]}}),Object.defineProperty(e,t,d)}:function(e,a,p,t){t===void 0&&(t=p),e[t]=a[p]}),h8=x1&&x1.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),wt=x1&&x1.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var p in e)p!=="default"&&Object.prototype.hasOwnProperty.call(e,p)&&f8(a,e,p);return h8(a,e),a};Object.defineProperty(x1,"__esModule",{value:!0});x1.showFailureToast=void 0;var v8=wt(require("fs")),g8=wt(require("path")),De=require("@raycast/api");function w8(e,a){let p=e instanceof Error?e.message:String(e);return(0,De.showToast)({style:De.Toast.Style.Failure,title:a?.title??"Something went wrong",message:a?.message??p,primaryAction:a?.primaryAction??gt(e),secondaryAction:a?.primaryAction?gt(e):void 0})}x1.showFailureToast=w8;var gt=e=>{let a=!0,p="[Extension Name]...",t="";try{let i=JSON.parse(v8.readFileSync(g8.join(De.environment.assetsPath,"..","package.json"),"utf8"));p=`[${i.title}]...`,t=`https://raycast.com/${i.owner||i.author}/${i.name}`,(!i.owner||i.access==="public")&&(a=!1)}catch{}let d=De.environment.isDevelopment||a,r=e instanceof Error?e?.stack||e?.message||"":String(e);return{title:d?"Copy Logs":"Report Error",onAction(i){i.hide(),d?De.Clipboard.copy(r):(0,De.open)(`https://github.com/raycast/extensions/issues/new?&labels=extension%2Cbug&template=extension_bug_report.yml&title=${encodeURIComponent(p)}&extension-url=${encodeURI(t)}&description=${encodeURIComponent(`#### Error:
\`\`\`
${r}
\`\`\`
`)}`)}}}});var Ce=u(Wa=>{"use strict";Object.defineProperty(Wa,"__esModule",{value:!0});Wa.usePromise=void 0;var o1=require("react"),oa=require("@raycast/api"),_8=vt(),K1=I1(),b8=ma();function y8(e,a,p){let t=(0,o1.useRef)(0),[d,r]=(0,o1.useState)({isLoading:!0}),i=(0,K1.useLatest)(e),n=(0,K1.useLatest)(p?.abortable),s=(0,K1.useLatest)(a||[]),l=(0,K1.useLatest)(p?.onError),o=(0,K1.useLatest)(p?.onData),m=(0,K1.useLatest)(p?.onWillExecute),c=(0,K1.useLatest)(p?.failureToastOptions),v=(0,K1.useLatest)(d.data),f=(0,o1.useRef)(),h=(0,o1.useRef)({page:0}),g=(0,o1.useRef)(!1),_=(0,o1.useRef)(!0),w=(0,o1.useRef)(50),b=(0,o1.useCallback)((...K)=>{let M=++t.current;n.current&&(n.current.current?.abort(),n.current.current=new AbortController),m.current?.(K),r(C=>({...C,isLoading:!0}));let m1=S8(i.current)(...K);function v1(C){return C.name=="AbortError"||M===t.current&&(l.current?l.current(C):oa.environment.launchType!==oa.LaunchType.Background&&(0,b8.showFailureToast)(C,{title:"Failed to fetch latest data",primaryAction:{title:"Retry",onAction(a1){a1.hide(),f.current?.(...s.current||[])}},...c.current}),r({error:C,isLoading:!1})),C}return typeof m1=="function"?(g.current=!0,m1(h.current).then(({data:C,hasMore:a1,cursor:r1})=>(M===t.current&&(h.current&&(h.current.cursor=r1,h.current.lastItem=C?.[C.length-1]),o.current&&o.current(C,h.current),a1&&(w.current=C.length),_.current=a1,r(xe=>h.current.page===0?{data:C,isLoading:!1}:{data:(xe.data||[])?.concat(C),isLoading:!1})),C),C=>(_.current=!1,v1(C)))):(g.current=!1,m1.then(C=>(M===t.current&&(o.current&&o.current(C),r({data:C,isLoading:!1})),C),v1))},[n,o,l,s,i,r,f,m,h,c]);f.current=b;let y=(0,o1.useCallback)(()=>{h.current={page:0};let K=s.current||[];return b(...K)},[b,s]),N=(0,o1.useCallback)(async(K,M)=>{let m1;try{if(M?.optimisticUpdate){typeof M?.rollbackOnError!="function"&&M?.rollbackOnError!==!1&&(m1=structuredClone(v.current?.value));let v1=M.optimisticUpdate;r(C=>({...C,data:v1(C.data)}))}return await K}catch(v1){if(typeof M?.rollbackOnError=="function"){let C=M.rollbackOnError;r(a1=>({...a1,data:C(a1.data)}))}else M?.optimisticUpdate&&M?.rollbackOnError!==!1&&r(C=>({...C,data:m1}));throw v1}finally{M?.shouldRevalidateAfter!==!1&&(oa.environment.launchType===oa.LaunchType.Background||oa.environment.commandMode==="menu-bar"?await y():y())}},[y,v,r]),D=(0,o1.useCallback)(()=>{h.current.page+=1;let K=s.current||[];b(...K)},[h,s,b]);(0,o1.useEffect)(()=>{h.current={page:0},p?.execute!==!1?b(...a||[]):n.current&&n.current.current?.abort()},[(0,_8.useDeepMemo)([a,p?.execute,b]),n,h]),(0,o1.useEffect)(()=>()=>{n.current&&n.current.current?.abort()},[n]);let R=p?.execute!==!1?d.isLoading:!1,V={...d,isLoading:R},X=g.current?{pageSize:w.current,hasMore:_.current,onLoadMore:D}:void 0;return{...V,revalidate:y,mutate:N,pagination:X}}Wa.usePromise=y8;function S8(e){return e===Promise.all||e===Promise.race||e===Promise.resolve||e===Promise.reject?e.bind(Promise):e}});var Tt=u((ne,Nt)=>{"use strict";var rp=require("crypto");ne=Nt.exports=ua;function ua(e,a){return a=yt(e,a),N8(e,a)}ne.sha1=function(e){return ua(e)};ne.keys=function(e){return ua(e,{excludeValues:!0,algorithm:"sha1",encoding:"hex"})};ne.MD5=function(e){return ua(e,{algorithm:"md5",encoding:"hex"})};ne.keysMD5=function(e){return ua(e,{algorithm:"md5",encoding:"hex",excludeValues:!0})};var Ae=rp.getHashes?rp.getHashes().slice():["sha1","md5"];Ae.push("passthrough");var _t=["buffer","hex","binary","base64"];function yt(e,a){a=a||{};var p={};if(p.algorithm=a.algorithm||"sha1",p.encoding=a.encoding||"hex",p.excludeValues=!!a.excludeValues,p.algorithm=p.algorithm.toLowerCase(),p.encoding=p.encoding.toLowerCase(),p.ignoreUnknown=a.ignoreUnknown===!0,p.respectType=a.respectType!==!1,p.respectFunctionNames=a.respectFunctionNames!==!1,p.respectFunctionProperties=a.respectFunctionProperties!==!1,p.unorderedArrays=a.unorderedArrays===!0,p.unorderedSets=a.unorderedSets!==!1,p.unorderedObjects=a.unorderedObjects!==!1,p.replacer=a.replacer||void 0,p.excludeKeys=a.excludeKeys||void 0,typeof e>"u")throw new Error("Object argument required.");for(var t=0;t<Ae.length;++t)Ae[t].toLowerCase()===p.algorithm.toLowerCase()&&(p.algorithm=Ae[t]);if(Ae.indexOf(p.algorithm)===-1)throw new Error('Algorithm "'+p.algorithm+'"  not supported. supported values: '+Ae.join(", "));if(_t.indexOf(p.encoding)===-1&&p.algorithm!=="passthrough")throw new Error('Encoding "'+p.encoding+'"  not supported. supported values: '+_t.join(", "));return p}function bt(e){if(typeof e!="function")return!1;var a=/^function\s+\w*\s*\(\s*\)\s*{\s+\[native code\]\s+}$/i;return a.exec(Function.prototype.toString.call(e))!=null}function N8(e,a){var p;a.algorithm!=="passthrough"?p=rp.createHash(a.algorithm):p=new St,typeof p.write>"u"&&(p.write=p.update,p.end=p.update);var t=ip(a,p);if(t.dispatch(e),p.update||p.end(""),p.digest)return p.digest(a.encoding==="buffer"?void 0:a.encoding);var d=p.read();return a.encoding==="buffer"?d:d.toString(a.encoding)}ne.writeToStream=function(e,a,p){return typeof p>"u"&&(p=a,a={}),a=yt(e,a),ip(a,p).dispatch(e)};function ip(e,a,p){p=p||[];var t=function(d){return a.update?a.update(d,"utf8"):a.write(d,"utf8")};return{dispatch:function(d){e.replacer&&(d=e.replacer(d));var r=typeof d;return d===null&&(r="null"),this["_"+r](d)},_object:function(d){var r=/\[object (.*)\]/i,i=Object.prototype.toString.call(d),n=r.exec(i);n?n=n[1]:n="unknown:["+i+"]",n=n.toLowerCase();var s=null;if((s=p.indexOf(d))>=0)return this.dispatch("[CIRCULAR:"+s+"]");if(p.push(d),typeof Buffer<"u"&&Buffer.isBuffer&&Buffer.isBuffer(d))return t("buffer:"),t(d);if(n!=="object"&&n!=="function"&&n!=="asyncfunction")if(this["_"+n])this["_"+n](d);else{if(e.ignoreUnknown)return t("["+n+"]");throw new Error('Unknown object type "'+n+'"')}else{var l=Object.keys(d);e.unorderedObjects&&(l=l.sort()),e.respectType!==!1&&!bt(d)&&l.splice(0,0,"prototype","__proto__","constructor"),e.excludeKeys&&(l=l.filter(function(m){return!e.excludeKeys(m)})),t("object:"+l.length+":");var o=this;return l.forEach(function(m){o.dispatch(m),t(":"),e.excludeValues||o.dispatch(d[m]),t(",")})}},_array:function(d,r){r=typeof r<"u"?r:e.unorderedArrays!==!1;var i=this;if(t("array:"+d.length+":"),!r||d.length<=1)return d.forEach(function(l){return i.dispatch(l)});var n=[],s=d.map(function(l){var o=new St,m=p.slice(),c=ip(e,o,m);return c.dispatch(l),n=n.concat(m.slice(p.length)),o.read().toString()});return p=p.concat(n),s.sort(),this._array(s,!1)},_date:function(d){return t("date:"+d.toJSON())},_symbol:function(d){return t("symbol:"+d.toString())},_error:function(d){return t("error:"+d.toString())},_boolean:function(d){return t("bool:"+d.toString())},_string:function(d){t("string:"+d.length+":"),t(d.toString())},_function:function(d){t("fn:"),bt(d)?this.dispatch("[native]"):this.dispatch(d.toString()),e.respectFunctionNames!==!1&&this.dispatch("function-name:"+String(d.name)),e.respectFunctionProperties&&this._object(d)},_number:function(d){return t("number:"+d.toString())},_xml:function(d){return t("xml:"+d.toString())},_null:function(){return t("Null")},_undefined:function(){return t("Undefined")},_regexp:function(d){return t("regex:"+d.toString())},_uint8array:function(d){return t("uint8array:"),this.dispatch(Array.prototype.slice.call(d))},_uint8clampedarray:function(d){return t("uint8clampedarray:"),this.dispatch(Array.prototype.slice.call(d))},_int8array:function(d){return t("int8array:"),this.dispatch(Array.prototype.slice.call(d))},_uint16array:function(d){return t("uint16array:"),this.dispatch(Array.prototype.slice.call(d))},_int16array:function(d){return t("int16array:"),this.dispatch(Array.prototype.slice.call(d))},_uint32array:function(d){return t("uint32array:"),this.dispatch(Array.prototype.slice.call(d))},_int32array:function(d){return t("int32array:"),this.dispatch(Array.prototype.slice.call(d))},_float32array:function(d){return t("float32array:"),this.dispatch(Array.prototype.slice.call(d))},_float64array:function(d){return t("float64array:"),this.dispatch(Array.prototype.slice.call(d))},_arraybuffer:function(d){return t("arraybuffer:"),this.dispatch(new Uint8Array(d))},_url:function(d){return t("url:"+d.toString(),"utf8")},_map:function(d){t("map:");var r=Array.from(d);return this._array(r,e.unorderedSets!==!1)},_set:function(d){t("set:");var r=Array.from(d);return this._array(r,e.unorderedSets!==!1)},_file:function(d){return t("file:"),this.dispatch([d.name,d.size,d.type,d.lastModfied])},_blob:function(){if(e.ignoreUnknown)return t("[blob]");throw Error(`Hashing Blob objects is currently not supported
(see https://github.com/puleos/object-hash/issues/26)
Use "options.replacer" or "options.ignoreUnknown"
`)},_domwindow:function(){return t("domwindow")},_bigint:function(d){return t("bigint:"+d.toString())},_process:function(){return t("process")},_timer:function(){return t("timer")},_pipe:function(){return t("pipe")},_tcp:function(){return t("tcp")},_udp:function(){return t("udp")},_tty:function(){return t("tty")},_statwatcher:function(){return t("statwatcher")},_securecontext:function(){return t("securecontext")},_connection:function(){return t("connection")},_zlib:function(){return t("zlib")},_context:function(){return t("context")},_nodescript:function(){return t("nodescript")},_httpparser:function(){return t("httpparser")},_dataview:function(){return t("dataview")},_signal:function(){return t("signal")},_fsevent:function(){return t("fsevent")},_tlswrap:function(){return t("tlswrap")}}}function St(){return{buf:"",write:function(e){this.buf+=e},end:function(e){this.buf+=e},read:function(){return this.buf}}}});var le=u(D1=>{"use strict";var T8=D1&&D1.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(D1,"__esModule",{value:!0});D1.hash=D1.reviver=D1.replacer=void 0;var x8=T8(Tt());function D8(e,a){let p=this[e];return p instanceof Date?`__raycast_cached_date__${p.toString()}`:Buffer.isBuffer(p)?`__raycast_cached_buffer__${p.toString("base64")}`:a}D1.replacer=D8;function C8(e,a){return typeof a=="string"&&a.startsWith("__raycast_cached_date__")?new Date(a.replace("__raycast_cached_date__","")):typeof a=="string"&&a.startsWith("__raycast_cached_buffer__")?Buffer.from(a.replace("__raycast_cached_buffer__",""),"base64"):a}D1.reviver=C8;function A8(e,a){return(0,x8.default)(e,{replacer:p=>p instanceof URLSearchParams?p.toString():p,...a})}D1.hash=A8});var Xa=u(Ya=>{"use strict";Object.defineProperty(Ya,"__esModule",{value:!0});Ya.useCachedState=void 0;var sp=require("react"),V8=require("@raycast/api"),np=I1(),xt=le(),E8=Symbol("cache without namespace"),Dt=new Map;function P8(e,a,p){let t=p?.cacheNamespace||E8,d=Dt.get(t)||Dt.set(t,new V8.Cache({namespace:p?.cacheNamespace})).get(t);if(!d)throw new Error("Missing cache");let r=(0,np.useLatest)(e),i=(0,np.useLatest)(a),n=(0,sp.useSyncExternalStore)(d.subscribe,()=>{try{return d.get(r.current)}catch(m){console.error("Could not get Cache data:",m);return}}),s=(0,sp.useMemo)(()=>{if(typeof n<"u"){if(n==="undefined")return;try{return JSON.parse(n,xt.reviver)}catch(m){return console.warn("The cached data is corrupted",m),i.current}}else return i.current},[n,i]),l=(0,np.useLatest)(s),o=(0,sp.useCallback)(m=>{let c=typeof m=="function"?m(l.current):m;if(typeof c>"u")d.set(r.current,"undefined");else{let v=JSON.stringify(c,xt.replacer);d.set(r.current,v)}return c},[d,r,l]);return[s,o]}Ya.useCachedState=P8});var fa=u(Qa=>{"use strict";Object.defineProperty(Qa,"__esModule",{value:!0});Qa.useCachedPromise=void 0;var ca=require("react"),M8=Xa(),k8=Ce(),O8=I1(),Ct=le(),Ve=Symbol();function R8(e,a,p){let{initialData:t,keepPreviousData:d,internal_cacheKeySuffix:r,...i}=p||{},n=(0,ca.useRef)(),[s,l]=(0,M8.useCachedState)((0,Ct.hash)(a||[])+r,Ve,{cacheNamespace:(0,Ct.hash)(e)}),o=(0,ca.useRef)(s!==Ve?s:t),m=(0,ca.useRef)(void 0),{mutate:c,revalidate:v,...f}=(0,k8.usePromise)(e,a||[],{...i,onData(b,y){m.current=y,i.onData&&i.onData(b,y),!(y&&y.page>0)&&(n.current="promise",o.current=b,l(b))}}),h,g=f.pagination;m.current&&m.current.page>0&&f.data?h=f.data:n.current==="promise"?h=o.current:d&&s!==Ve?(h=s,g&&(g.hasMore=!0,g.pageSize=s.length)):d&&s===Ve?h=o.current:s!==Ve?(h=s,g&&(g.hasMore=!0,g.pageSize=s.length)):h=t;let _=(0,O8.useLatest)(h),w=(0,ca.useCallback)(async(b,y)=>{let N;try{if(y?.optimisticUpdate){typeof y?.rollbackOnError!="function"&&y?.rollbackOnError!==!1&&(N=structuredClone(_.current));let D=y.optimisticUpdate(_.current);n.current="cache",o.current=D,l(D)}return await c(b,{shouldRevalidateAfter:y?.shouldRevalidateAfter})}catch(D){if(typeof y?.rollbackOnError=="function"){let R=y.rollbackOnError(_.current);n.current="cache",o.current=R,l(R)}else y?.optimisticUpdate&&y?.rollbackOnError!==!1&&(n.current="cache",o.current=N,l(N));throw D}},[l,c,_,o,n]);return(0,ca.useEffect)(()=>{s!==Ve&&(n.current="cache",o.current=s)},[s]),{data:h,isLoading:f.isLoading,error:f.error,mutate:m.current&&m.current.page>0?c:w,pagination:g,revalidate:v}}Qa.useCachedPromise=R8});var Et=u((qw,Vt)=>{"use strict";var q={};Vt.exports=q;function At(e){return e<0?-1:1}function q8(e){return e%1===.5&&(e&1)===0?Math.floor(e):Math.round(e)}function J1(e,a){a.unsigned||--e;let p=a.unsigned?0:-Math.pow(2,e),t=Math.pow(2,e)-1,d=a.moduloBitLength?Math.pow(2,a.moduloBitLength):Math.pow(2,e),r=a.moduloBitLength?Math.pow(2,a.moduloBitLength-1):Math.pow(2,e-1);return function(i,n){n||(n={});let s=+i;if(n.enforceRange){if(!Number.isFinite(s))throw new TypeError("Argument is not a finite number");if(s=At(s)*Math.floor(Math.abs(s)),s<p||s>t)throw new TypeError("Argument is not in byte range");return s}if(!isNaN(s)&&n.clamp)return s=q8(s),s<p&&(s=p),s>t&&(s=t),s;if(!Number.isFinite(s)||s===0)return 0;if(s=At(s)*Math.floor(Math.abs(s)),s=s%d,!a.unsigned&&s>=r)return s-d;if(a.unsigned){if(s<0)s+=d;else if(s===-0)return 0}return s}}q.void=function(){};q.boolean=function(e){return!!e};q.byte=J1(8,{unsigned:!1});q.octet=J1(8,{unsigned:!0});q.short=J1(16,{unsigned:!1});q["unsigned short"]=J1(16,{unsigned:!0});q.long=J1(32,{unsigned:!1});q["unsigned long"]=J1(32,{unsigned:!0});q["long long"]=J1(32,{unsigned:!1,moduloBitLength:64});q["unsigned long long"]=J1(32,{unsigned:!0,moduloBitLength:64});q.double=function(e){let a=+e;if(!Number.isFinite(a))throw new TypeError("Argument is not a finite floating-point value");return a};q["unrestricted double"]=function(e){let a=+e;if(isNaN(a))throw new TypeError("Argument is NaN");return a};q.float=q.double;q["unrestricted float"]=q["unrestricted double"];q.DOMString=function(e,a){return a||(a={}),a.treatNullAsEmptyString&&e===null?"":String(e)};q.ByteString=function(e,a){let p=String(e),t;for(let d=0;(t=p.codePointAt(d))!==void 0;++d)if(t>255)throw new TypeError("Argument is not a valid bytestring");return p};q.USVString=function(e){let a=String(e),p=a.length,t=[];for(let d=0;d<p;++d){let r=a.charCodeAt(d);if(r<55296||r>57343)t.push(String.fromCodePoint(r));else if(56320<=r&&r<=57343)t.push(String.fromCodePoint(65533));else if(d===p-1)t.push(String.fromCodePoint(65533));else{let i=a.charCodeAt(d+1);if(56320<=i&&i<=57343){let n=r&1023,s=i&1023;t.push(String.fromCodePoint(65536+1024*n+s)),++d}else t.push(String.fromCodePoint(65533))}}return t.join("")};q.Date=function(e,a){if(!(e instanceof Date))throw new TypeError("Argument is not a Date object");if(!isNaN(e))return e};q.RegExp=function(e,a){return e instanceof RegExp||(e=new RegExp(e)),e}});var Pt=u((Lw,Z1)=>{"use strict";Z1.exports.mixin=function(a,p){let t=Object.getOwnPropertyNames(p);for(let d=0;d<t.length;++d)Object.defineProperty(a,t[d],Object.getOwnPropertyDescriptor(p,t[d]))};Z1.exports.wrapperSymbol=Symbol("wrapper");Z1.exports.implSymbol=Symbol("impl");Z1.exports.wrapperForImpl=function(e){return e[Z1.exports.wrapperSymbol]};Z1.exports.implForWrapper=function(e){return e[Z1.exports.implSymbol]}});var Mt=u((Iw,L8)=>{L8.exports=[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1e3,1e3],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6e3],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8e3,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8e3]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9e3],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[3e4]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13e3,13e3],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43e3,43e3],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64e3,64e3],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66e3,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[12e4,12e4],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128e3,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23e3]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149e3]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32e3]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195e3,195e3],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[4e4]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918e3,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]});var It=u((Fw,a2)=>{"use strict";var Ot=require("punycode"),kt=Mt(),Ee={TRANSITIONAL:0,NONTRANSITIONAL:1};function Rt(e){return e.split("\0").map(function(a){return a.normalize("NFC")}).join("\0")}function qt(e){for(var a=0,p=kt.length-1;a<=p;){var t=Math.floor((a+p)/2),d=kt[t];if(d[0][0]<=e&&d[0][1]>=e)return d;d[0][0]>e?p=t-1:a=t+1}return null}var I8=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function Lt(e){return e.replace(I8,"_").length}function F8(e,a,p){for(var t=!1,d="",r=Lt(e),i=0;i<r;++i){var n=e.codePointAt(i),s=qt(n);switch(s[1]){case"disallowed":t=!0,d+=String.fromCodePoint(n);break;case"ignored":break;case"mapped":d+=String.fromCodePoint.apply(String,s[2]);break;case"deviation":p===Ee.TRANSITIONAL?d+=String.fromCodePoint.apply(String,s[2]):d+=String.fromCodePoint(n);break;case"valid":d+=String.fromCodePoint(n);break;case"disallowed_STD3_mapped":a?(t=!0,d+=String.fromCodePoint(n)):d+=String.fromCodePoint.apply(String,s[2]);break;case"disallowed_STD3_valid":a&&(t=!0),d+=String.fromCodePoint(n);break}}return{string:d,error:t}}var B8=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function j8(e,a){e.substr(0,4)==="xn--"&&(e=Ot.toUnicode(e),a=Ee.NONTRANSITIONAL);var p=!1;(Rt(e)!==e||e[3]==="-"&&e[4]==="-"||e[0]==="-"||e[e.length-1]==="-"||e.indexOf(".")!==-1||e.search(B8)===0)&&(p=!0);for(var t=Lt(e),d=0;d<t;++d){var r=qt(e.codePointAt(d));if(e2===Ee.TRANSITIONAL&&r[1]!=="valid"||e2===Ee.NONTRANSITIONAL&&r[1]!=="valid"&&r[1]!=="deviation"){p=!0;break}}return{label:e,error:p}}function e2(e,a,p){var t=F8(e,a,p);t.string=Rt(t.string);for(var d=t.string.split("."),r=0;r<d.length;++r)try{var i=j8(d[r]);d[r]=i.label,t.error=t.error||i.error}catch{t.error=!0}return{string:d.join("."),error:t.error}}a2.exports.toASCII=function(e,a,p,t){var d=e2(e,a,p),r=d.string.split(".");if(r=r.map(function(s){try{return Ot.toASCII(s)}catch{return d.error=!0,s}}),t){var i=r.slice(0,r.length-1).join(".").length;(i.length>253||i.length===0)&&(d.error=!0);for(var n=0;n<r.length;++n)if(r.length>63||r.length===0){d.error=!0;break}}return d.error?null:r.join(".")};a2.exports.toUnicode=function(e,a){var p=e2(e,a,Ee.NONTRANSITIONAL);return{domain:p.string,error:p.error}};a2.exports.PROCESSING_OPTIONS=Ee});var C1=u((Bw,u1)=>{"use strict";var Pe=require("punycode"),Ft=It(),Ut={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},A=Symbol("failure");function Bt(e){return Pe.ucs2.decode(e).length}function jt(e,a){let p=e[a];return isNaN(p)?void 0:String.fromCodePoint(p)}function ha(e){return e>=48&&e<=57}function va(e){return e>=65&&e<=90||e>=97&&e<=122}function z8(e){return va(e)||ha(e)}function S1(e){return ha(e)||e>=65&&e<=70||e>=97&&e<=102}function zt(e){return e==="."||e.toLowerCase()==="%2e"}function U8(e){return e=e.toLowerCase(),e===".."||e==="%2e."||e===".%2e"||e==="%2e%2e"}function $8(e,a){return va(e)&&(a===58||a===124)}function $t(e){return e.length===2&&va(e.codePointAt(0))&&(e[1]===":"||e[1]==="|")}function H8(e){return e.length===2&&va(e.codePointAt(0))&&e[1]===":"}function G8(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/)!==-1}function K8(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/)!==-1}function lp(e){return Ut[e]!==void 0}function U(e){return lp(e.scheme)}function J8(e){return Ut[e]}function Ht(e){let a=e.toString(16).toUpperCase();return a.length===1&&(a="0"+a),"%"+a}function Z8(e){let a=new Buffer(e),p="";for(let t=0;t<a.length;++t)p+=Ht(a[t]);return p}function W8(e){let a=new Buffer(e),p=[];for(let t=0;t<a.length;++t)a[t]!==37?p.push(a[t]):a[t]===37&&S1(a[t+1])&&S1(a[t+2])?(p.push(parseInt(a.slice(t+1,t+3).toString(),16)),t+=2):p.push(a[t]);return new Buffer(p).toString()}function p2(e){return e<=31||e>126}var Y8=new Set([32,34,35,60,62,63,96,123,125]);function Gt(e){return p2(e)||Y8.has(e)}var X8=new Set([47,58,59,61,64,91,92,93,94,124]);function op(e){return Gt(e)||X8.has(e)}function me(e,a){let p=String.fromCodePoint(e);return a(e)?Z8(p):p}function Q8(e){let a=10;return e.length>=2&&e.charAt(0)==="0"&&e.charAt(1).toLowerCase()==="x"?(e=e.substring(2),a=16):e.length>=2&&e.charAt(0)==="0"&&(e=e.substring(1),a=8),e===""?0:(a===10?/[^0-9]/:a===16?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?A:parseInt(e,a)}function es(e){let a=e.split(".");if(a[a.length-1]===""&&a.length>1&&a.pop(),a.length>4)return e;let p=[];for(let r of a){if(r==="")return e;let i=Q8(r);if(i===A)return e;p.push(i)}for(let r=0;r<p.length-1;++r)if(p[r]>255)return A;if(p[p.length-1]>=Math.pow(256,5-p.length))return A;let t=p.pop(),d=0;for(let r of p)t+=r*Math.pow(256,3-d),++d;return t}function as(e){let a="",p=e;for(let t=1;t<=4;++t)a=String(p%256)+a,t!==4&&(a="."+a),p=Math.floor(p/256);return a}function ps(e){let a=[0,0,0,0,0,0,0,0],p=0,t=null,d=0;if(e=Pe.ucs2.decode(e),e[d]===58){if(e[d+1]!==58)return A;d+=2,++p,t=p}for(;d<e.length;){if(p===8)return A;if(e[d]===58){if(t!==null)return A;++d,++p,t=p;continue}let r=0,i=0;for(;i<4&&S1(e[d]);)r=r*16+parseInt(jt(e,d),16),++d,++i;if(e[d]===46){if(i===0||(d-=i,p>6))return A;let n=0;for(;e[d]!==void 0;){let s=null;if(n>0)if(e[d]===46&&n<4)++d;else return A;if(!ha(e[d]))return A;for(;ha(e[d]);){let l=parseInt(jt(e,d));if(s===null)s=l;else{if(s===0)return A;s=s*10+l}if(s>255)return A;++d}a[p]=a[p]*256+s,++n,(n===2||n===4)&&++p}if(n!==4)return A;break}else if(e[d]===58){if(++d,e[d]===void 0)return A}else if(e[d]!==void 0)return A;a[p]=r,++p}if(t!==null){let r=p-t;for(p=7;p!==0&&r>0;){let i=a[t+r-1];a[t+r-1]=a[p],a[p]=i,--p,--r}}else if(t===null&&p!==8)return A;return a}function ts(e){let a="",t=rs(e).idx,d=!1;for(let r=0;r<=7;++r)if(!(d&&e[r]===0)){if(d&&(d=!1),t===r){a+=r===0?"::":":",d=!0;continue}a+=e[r].toString(16),r!==7&&(a+=":")}return a}function mp(e,a){if(e[0]==="[")return e[e.length-1]!=="]"?A:ps(e.substring(1,e.length-1));if(!a)return ds(e);let p=W8(e),t=Ft.toASCII(p,!1,Ft.PROCESSING_OPTIONS.NONTRANSITIONAL,!1);if(t===null||G8(t))return A;let d=es(t);return typeof d=="number"||d===A?d:t}function ds(e){if(K8(e))return A;let a="",p=Pe.ucs2.decode(e);for(let t=0;t<p.length;++t)a+=me(p[t],p2);return a}function rs(e){let a=null,p=1,t=null,d=0;for(let r=0;r<e.length;++r)e[r]!==0?(d>p&&(a=t,p=d),t=null,d=0):(t===null&&(t=r),++d);return d>p&&(a=t,p=d),{idx:a,len:p}}function up(e){return typeof e=="number"?as(e):e instanceof Array?"["+ts(e)+"]":e}function is(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}function ss(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}function Kt(e){let a=e.path;a.length!==0&&(e.scheme==="file"&&a.length===1&&ls(a[0])||a.pop())}function Jt(e){return e.username!==""||e.password!==""}function ns(e){return e.host===null||e.host===""||e.cannotBeABaseURL||e.scheme==="file"}function ls(e){return/^[A-Za-z]:$/.test(e)}function L(e,a,p,t,d){if(this.pointer=0,this.input=e,this.base=a||null,this.encodingOverride=p||"utf-8",this.stateOverride=d,this.url=t,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};let i=is(this.input);i!==this.input&&(this.parseError=!0),this.input=i}let r=ss(this.input);for(r!==this.input&&(this.parseError=!0),this.input=r,this.state=d||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=Pe.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){let i=this.input[this.pointer],n=isNaN(i)?void 0:String.fromCodePoint(i),s=this["parse "+this.state](i,n);if(s){if(s===A){this.failure=!0;break}}else break}}L.prototype["parse scheme start"]=function(a,p){if(va(a))this.buffer+=p.toLowerCase(),this.state="scheme";else if(!this.stateOverride)this.state="no scheme",--this.pointer;else return this.parseError=!0,A;return!0};L.prototype["parse scheme"]=function(a,p){if(z8(a)||a===43||a===45||a===46)this.buffer+=p.toLowerCase();else if(a===58){if(this.stateOverride&&(U(this.url)&&!lp(this.buffer)||!U(this.url)&&lp(this.buffer)||(Jt(this.url)||this.url.port!==null)&&this.buffer==="file"||this.url.scheme==="file"&&(this.url.host===""||this.url.host===null))||(this.url.scheme=this.buffer,this.buffer="",this.stateOverride))return!1;this.url.scheme==="file"?((this.input[this.pointer+1]!==47||this.input[this.pointer+2]!==47)&&(this.parseError=!0),this.state="file"):U(this.url)&&this.base!==null&&this.base.scheme===this.url.scheme?this.state="special relative or authority":U(this.url)?this.state="special authority slashes":this.input[this.pointer+1]===47?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else if(!this.stateOverride)this.buffer="",this.state="no scheme",this.pointer=-1;else return this.parseError=!0,A;return!0};L.prototype["parse no scheme"]=function(a){return this.base===null||this.base.cannotBeABaseURL&&a!==35?A:(this.base.cannotBeABaseURL&&a===35?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):this.base.scheme==="file"?(this.state="file",--this.pointer):(this.state="relative",--this.pointer),!0)};L.prototype["parse special relative or authority"]=function(a){return a===47&&this.input[this.pointer+1]===47?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0};L.prototype["parse path or authority"]=function(a){return a===47?this.state="authority":(this.state="path",--this.pointer),!0};L.prototype["parse relative"]=function(a){return this.url.scheme=this.base.scheme,isNaN(a)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):a===47?this.state="relative slash":a===63?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):a===35?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):U(this.url)&&a===92?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0};L.prototype["parse relative slash"]=function(a){return U(this.url)&&(a===47||a===92)?(a===92&&(this.parseError=!0),this.state="special authority ignore slashes"):a===47?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer),!0};L.prototype["parse special authority slashes"]=function(a){return a===47&&this.input[this.pointer+1]===47?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0};L.prototype["parse special authority ignore slashes"]=function(a){return a!==47&&a!==92?(this.state="authority",--this.pointer):this.parseError=!0,!0};L.prototype["parse authority"]=function(a,p){if(a===64){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;let t=Bt(this.buffer);for(let d=0;d<t;++d){let r=this.buffer.codePointAt(d);if(r===58&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}let i=me(r,op);this.passwordTokenSeenFlag?this.url.password+=i:this.url.username+=i}this.buffer=""}else if(isNaN(a)||a===47||a===63||a===35||U(this.url)&&a===92){if(this.atFlag&&this.buffer==="")return this.parseError=!0,A;this.pointer-=Bt(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=p;return!0};L.prototype["parse hostname"]=L.prototype["parse host"]=function(a,p){if(this.stateOverride&&this.url.scheme==="file")--this.pointer,this.state="file host";else if(a===58&&!this.arrFlag){if(this.buffer==="")return this.parseError=!0,A;let t=mp(this.buffer,U(this.url));if(t===A)return A;if(this.url.host=t,this.buffer="",this.state="port",this.stateOverride==="hostname")return!1}else if(isNaN(a)||a===47||a===63||a===35||U(this.url)&&a===92){if(--this.pointer,U(this.url)&&this.buffer==="")return this.parseError=!0,A;if(this.stateOverride&&this.buffer===""&&(Jt(this.url)||this.url.port!==null))return this.parseError=!0,!1;let t=mp(this.buffer,U(this.url));if(t===A)return A;if(this.url.host=t,this.buffer="",this.state="path start",this.stateOverride)return!1}else a===91?this.arrFlag=!0:a===93&&(this.arrFlag=!1),this.buffer+=p;return!0};L.prototype["parse port"]=function(a,p){if(ha(a))this.buffer+=p;else if(isNaN(a)||a===47||a===63||a===35||U(this.url)&&a===92||this.stateOverride){if(this.buffer!==""){let t=parseInt(this.buffer);if(t>Math.pow(2,16)-1)return this.parseError=!0,A;this.url.port=t===J8(this.url.scheme)?null:t,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}else return this.parseError=!0,A;return!0};var ms=new Set([47,92,63,35]);L.prototype["parse file"]=function(a){return this.url.scheme="file",a===47||a===92?(a===92&&(this.parseError=!0),this.state="file slash"):this.base!==null&&this.base.scheme==="file"?isNaN(a)?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query):a===63?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):a===35?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):(this.input.length-this.pointer-1===0||!$8(a,this.input[this.pointer+1])||this.input.length-this.pointer-1>=2&&!ms.has(this.input[this.pointer+2])?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),Kt(this.url)):this.parseError=!0,this.state="path",--this.pointer):(this.state="path",--this.pointer),!0};L.prototype["parse file slash"]=function(a){return a===47||a===92?(a===92&&(this.parseError=!0),this.state="file host"):(this.base!==null&&this.base.scheme==="file"&&(H8(this.base.path[0])?this.url.path.push(this.base.path[0]):this.url.host=this.base.host),this.state="path",--this.pointer),!0};L.prototype["parse file host"]=function(a,p){if(isNaN(a)||a===47||a===92||a===63||a===35)if(--this.pointer,!this.stateOverride&&$t(this.buffer))this.parseError=!0,this.state="path";else if(this.buffer===""){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let t=mp(this.buffer,U(this.url));if(t===A)return A;if(t==="localhost"&&(t=""),this.url.host=t,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=p;return!0};L.prototype["parse path start"]=function(a){return U(this.url)?(a===92&&(this.parseError=!0),this.state="path",a!==47&&a!==92&&--this.pointer):!this.stateOverride&&a===63?(this.url.query="",this.state="query"):!this.stateOverride&&a===35?(this.url.fragment="",this.state="fragment"):a!==void 0&&(this.state="path",a!==47&&--this.pointer),!0};L.prototype["parse path"]=function(a){if(isNaN(a)||a===47||U(this.url)&&a===92||!this.stateOverride&&(a===63||a===35)){if(U(this.url)&&a===92&&(this.parseError=!0),U8(this.buffer)?(Kt(this.url),a!==47&&!(U(this.url)&&a===92)&&this.url.path.push("")):zt(this.buffer)&&a!==47&&!(U(this.url)&&a===92)?this.url.path.push(""):zt(this.buffer)||(this.url.scheme==="file"&&this.url.path.length===0&&$t(this.buffer)&&(this.url.host!==""&&this.url.host!==null&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)),this.buffer="",this.url.scheme==="file"&&(a===void 0||a===63||a===35))for(;this.url.path.length>1&&this.url.path[0]==="";)this.parseError=!0,this.url.path.shift();a===63&&(this.url.query="",this.state="query"),a===35&&(this.url.fragment="",this.state="fragment")}else a===37&&(!S1(this.input[this.pointer+1])||!S1(this.input[this.pointer+2]))&&(this.parseError=!0),this.buffer+=me(a,Gt);return!0};L.prototype["parse cannot-be-a-base-URL path"]=function(a){return a===63?(this.url.query="",this.state="query"):a===35?(this.url.fragment="",this.state="fragment"):(!isNaN(a)&&a!==37&&(this.parseError=!0),a===37&&(!S1(this.input[this.pointer+1])||!S1(this.input[this.pointer+2]))&&(this.parseError=!0),isNaN(a)||(this.url.path[0]=this.url.path[0]+me(a,p2))),!0};L.prototype["parse query"]=function(a,p){if(isNaN(a)||!this.stateOverride&&a===35){(!U(this.url)||this.url.scheme==="ws"||this.url.scheme==="wss")&&(this.encodingOverride="utf-8");let t=new Buffer(this.buffer);for(let d=0;d<t.length;++d)t[d]<33||t[d]>126||t[d]===34||t[d]===35||t[d]===60||t[d]===62?this.url.query+=Ht(t[d]):this.url.query+=String.fromCodePoint(t[d]);this.buffer="",a===35&&(this.url.fragment="",this.state="fragment")}else a===37&&(!S1(this.input[this.pointer+1])||!S1(this.input[this.pointer+2]))&&(this.parseError=!0),this.buffer+=p;return!0};L.prototype["parse fragment"]=function(a){return isNaN(a)||(a===0?this.parseError=!0:(a===37&&(!S1(this.input[this.pointer+1])||!S1(this.input[this.pointer+2]))&&(this.parseError=!0),this.url.fragment+=me(a,p2))),!0};function os(e,a){let p=e.scheme+":";if(e.host!==null?(p+="//",(e.username!==""||e.password!=="")&&(p+=e.username,e.password!==""&&(p+=":"+e.password),p+="@"),p+=up(e.host),e.port!==null&&(p+=":"+e.port)):e.host===null&&e.scheme==="file"&&(p+="//"),e.cannotBeABaseURL)p+=e.path[0];else for(let t of e.path)p+="/"+t;return e.query!==null&&(p+="?"+e.query),!a&&e.fragment!==null&&(p+="#"+e.fragment),p}function us(e){let a=e.scheme+"://";return a+=up(e.host),e.port!==null&&(a+=":"+e.port),a}u1.exports.serializeURL=os;u1.exports.serializeURLOrigin=function(e){switch(e.scheme){case"blob":try{return u1.exports.serializeURLOrigin(u1.exports.parseURL(e.path[0]))}catch{return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return us({scheme:e.scheme,host:e.host,port:e.port});case"file":return"file://";default:return"null"}};u1.exports.basicURLParse=function(e,a){a===void 0&&(a={});let p=new L(e,a.baseURL,a.encodingOverride,a.url,a.stateOverride);return p.failure?"failure":p.url};u1.exports.setTheUsername=function(e,a){e.username="";let p=Pe.ucs2.decode(a);for(let t=0;t<p.length;++t)e.username+=me(p[t],op)};u1.exports.setThePassword=function(e,a){e.password="";let p=Pe.ucs2.decode(a);for(let t=0;t<p.length;++t)e.password+=me(p[t],op)};u1.exports.serializeHost=up;u1.exports.cannotHaveAUsernamePasswordPort=ns;u1.exports.serializeInteger=function(e){return String(e)};u1.exports.parseURL=function(e,a){return a===void 0&&(a={}),u1.exports.basicURLParse(e,{baseURL:a.baseURL,encodingOverride:a.encodingOverride})}});var Wt=u(Zt=>{"use strict";var I=C1();Zt.implementation=class{constructor(a){let p=a[0],t=a[1],d=null;if(t!==void 0&&(d=I.basicURLParse(t),d==="failure"))throw new TypeError("Invalid base URL");let r=I.basicURLParse(p,{baseURL:d});if(r==="failure")throw new TypeError("Invalid URL");this._url=r}get href(){return I.serializeURL(this._url)}set href(a){let p=I.basicURLParse(a);if(p==="failure")throw new TypeError("Invalid URL");this._url=p}get origin(){return I.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(a){I.basicURLParse(a+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(a){I.cannotHaveAUsernamePasswordPort(this._url)||I.setTheUsername(this._url,a)}get password(){return this._url.password}set password(a){I.cannotHaveAUsernamePasswordPort(this._url)||I.setThePassword(this._url,a)}get host(){let a=this._url;return a.host===null?"":a.port===null?I.serializeHost(a.host):I.serializeHost(a.host)+":"+I.serializeInteger(a.port)}set host(a){this._url.cannotBeABaseURL||I.basicURLParse(a,{url:this._url,stateOverride:"host"})}get hostname(){return this._url.host===null?"":I.serializeHost(this._url.host)}set hostname(a){this._url.cannotBeABaseURL||I.basicURLParse(a,{url:this._url,stateOverride:"hostname"})}get port(){return this._url.port===null?"":I.serializeInteger(this._url.port)}set port(a){I.cannotHaveAUsernamePasswordPort(this._url)||(a===""?this._url.port=null:I.basicURLParse(a,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:this._url.path.length===0?"":"/"+this._url.path.join("/")}set pathname(a){this._url.cannotBeABaseURL||(this._url.path=[],I.basicURLParse(a,{url:this._url,stateOverride:"path start"}))}get search(){return this._url.query===null||this._url.query===""?"":"?"+this._url.query}set search(a){let p=this._url;if(a===""){p.query=null;return}let t=a[0]==="?"?a.substring(1):a;p.query="",I.basicURLParse(t,{url:p,stateOverride:"query"})}get hash(){return this._url.fragment===null||this._url.fragment===""?"":"#"+this._url.fragment}set hash(a){if(a===""){this._url.fragment=null;return}let p=a[0]==="#"?a.substring(1):a;this._url.fragment="",I.basicURLParse(p,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}});var Qt=u((Uw,ga)=>{"use strict";var g1=Et(),Xt=Pt(),Yt=Wt(),E=Xt.implSymbol;function J(e){if(!this||this[E]||!(this instanceof J))throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");let a=[];for(let p=0;p<arguments.length&&p<2;++p)a[p]=arguments[p];a[0]=g1.USVString(a[0]),a[1]!==void 0&&(a[1]=g1.USVString(a[1])),ga.exports.setup(this,a)}J.prototype.toJSON=function(){if(!this||!ga.exports.is(this))throw new TypeError("Illegal invocation");let a=[];for(let p=0;p<arguments.length&&p<0;++p)a[p]=arguments[p];return this[E].toJSON.apply(this[E],a)};Object.defineProperty(J.prototype,"href",{get(){return this[E].href},set(e){e=g1.USVString(e),this[E].href=e},enumerable:!0,configurable:!0});J.prototype.toString=function(){if(!this||!ga.exports.is(this))throw new TypeError("Illegal invocation");return this.href};Object.defineProperty(J.prototype,"origin",{get(){return this[E].origin},enumerable:!0,configurable:!0});Object.defineProperty(J.prototype,"protocol",{get(){return this[E].protocol},set(e){e=g1.USVString(e),this[E].protocol=e},enumerable:!0,configurable:!0});Object.defineProperty(J.prototype,"username",{get(){return this[E].username},set(e){e=g1.USVString(e),this[E].username=e},enumerable:!0,configurable:!0});Object.defineProperty(J.prototype,"password",{get(){return this[E].password},set(e){e=g1.USVString(e),this[E].password=e},enumerable:!0,configurable:!0});Object.defineProperty(J.prototype,"host",{get(){return this[E].host},set(e){e=g1.USVString(e),this[E].host=e},enumerable:!0,configurable:!0});Object.defineProperty(J.prototype,"hostname",{get(){return this[E].hostname},set(e){e=g1.USVString(e),this[E].hostname=e},enumerable:!0,configurable:!0});Object.defineProperty(J.prototype,"port",{get(){return this[E].port},set(e){e=g1.USVString(e),this[E].port=e},enumerable:!0,configurable:!0});Object.defineProperty(J.prototype,"pathname",{get(){return this[E].pathname},set(e){e=g1.USVString(e),this[E].pathname=e},enumerable:!0,configurable:!0});Object.defineProperty(J.prototype,"search",{get(){return this[E].search},set(e){e=g1.USVString(e),this[E].search=e},enumerable:!0,configurable:!0});Object.defineProperty(J.prototype,"hash",{get(){return this[E].hash},set(e){e=g1.USVString(e),this[E].hash=e},enumerable:!0,configurable:!0});ga.exports={is(e){return!!e&&e[E]instanceof Yt.implementation},create(e,a){let p=Object.create(J.prototype);return this.setup(p,e,a),p},setup(e,a,p){p||(p={}),p.wrapper=e,e[E]=new Yt.implementation(a,p),e[E][Xt.wrapperSymbol]=e},interface:J,expose:{Window:{URL:J},Worker:{URL:J}}}});var ed=u(A1=>{"use strict";A1.URL=Qt().interface;A1.serializeURL=C1().serializeURL;A1.serializeURLOrigin=C1().serializeURLOrigin;A1.basicURLParse=C1().basicURLParse;A1.setTheUsername=C1().setTheUsername;A1.setThePassword=C1().setThePassword;A1.serializeHost=C1().serializeHost;A1.serializeInteger=C1().serializeInteger;A1.parseURL=C1().parseURL});var ud=u((T1,od)=>{"use strict";Object.defineProperty(T1,"__esModule",{value:!0});function Re(e){return e&&typeof e=="object"&&"default"in e?e.default:e}var N1=Re(require("stream")),dd=Re(require("http")),d2=Re(require("url")),rd=Re(ed()),cs=Re(require("https")),oe=Re(require("zlib")),fs=N1.Readable,F1=Symbol("buffer"),cp=Symbol("type"),_a=class e{constructor(){this[cp]="";let a=arguments[0],p=arguments[1],t=[],d=0;if(a){let i=a,n=Number(i.length);for(let s=0;s<n;s++){let l=i[s],o;l instanceof Buffer?o=l:ArrayBuffer.isView(l)?o=Buffer.from(l.buffer,l.byteOffset,l.byteLength):l instanceof ArrayBuffer?o=Buffer.from(l):l instanceof e?o=l[F1]:o=Buffer.from(typeof l=="string"?l:String(l)),d+=o.length,t.push(o)}}this[F1]=Buffer.concat(t);let r=p&&p.type!==void 0&&String(p.type).toLowerCase();r&&!/[^\u0020-\u007E]/.test(r)&&(this[cp]=r)}get size(){return this[F1].length}get type(){return this[cp]}text(){return Promise.resolve(this[F1].toString())}arrayBuffer(){let a=this[F1],p=a.buffer.slice(a.byteOffset,a.byteOffset+a.byteLength);return Promise.resolve(p)}stream(){let a=new fs;return a._read=function(){},a.push(this[F1]),a.push(null),a}toString(){return"[object Blob]"}slice(){let a=this.size,p=arguments[0],t=arguments[1],d,r;p===void 0?d=0:p<0?d=Math.max(a+p,0):d=Math.min(p,a),t===void 0?r=a:t<0?r=Math.max(a+t,0):r=Math.min(t,a);let i=Math.max(r-d,0),s=this[F1].slice(d,d+i),l=new e([],{type:arguments[2]});return l[F1]=s,l}};Object.defineProperties(_a.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}});Object.defineProperty(_a.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0});function Q(e,a,p){Error.call(this,e),this.message=e,this.type=a,p&&(this.code=this.errno=p.code),Error.captureStackTrace(this,this.constructor)}Q.prototype=Object.create(Error.prototype);Q.prototype.constructor=Q;Q.prototype.name="FetchError";var gp;try{gp=require("encoding").convert}catch{}var j1=Symbol("Body internals"),ad=N1.PassThrough;function Z(e){var a=this,p=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},t=p.size;let d=t===void 0?0:t;var r=p.timeout;let i=r===void 0?0:r;e==null?e=null:id(e)?e=Buffer.from(e.toString()):ya(e)||Buffer.isBuffer(e)||(Object.prototype.toString.call(e)==="[object ArrayBuffer]"?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof N1||(e=Buffer.from(String(e)))),this[j1]={body:e,disturbed:!1,error:null},this.size=d,this.timeout=i,e instanceof N1&&e.on("error",function(n){let s=n.name==="AbortError"?n:new Q(`Invalid response body while trying to fetch ${a.url}: ${n.message}`,"system",n);a[j1].error=s})}Z.prototype={get body(){return this[j1].body},get bodyUsed(){return this[j1].disturbed},arrayBuffer(){return Me.call(this).then(function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)})},blob(){let e=this.headers&&this.headers.get("content-type")||"";return Me.call(this).then(function(a){return Object.assign(new _a([],{type:e.toLowerCase()}),{[F1]:a})})},json(){var e=this;return Me.call(this).then(function(a){try{return JSON.parse(a.toString())}catch(p){return Z.Promise.reject(new Q(`invalid json response body at ${e.url} reason: ${p.message}`,"invalid-json"))}})},text(){return Me.call(this).then(function(e){return e.toString()})},buffer(){return Me.call(this)},textConverted(){var e=this;return Me.call(this).then(function(a){return hs(a,e.headers)})}};Object.defineProperties(Z.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}});Z.mixIn=function(e){for(let a of Object.getOwnPropertyNames(Z.prototype))if(!(a in e)){let p=Object.getOwnPropertyDescriptor(Z.prototype,a);Object.defineProperty(e,a,p)}};function Me(){var e=this;if(this[j1].disturbed)return Z.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[j1].disturbed=!0,this[j1].error)return Z.Promise.reject(this[j1].error);let a=this.body;if(a===null)return Z.Promise.resolve(Buffer.alloc(0));if(ya(a)&&(a=a.stream()),Buffer.isBuffer(a))return Z.Promise.resolve(a);if(!(a instanceof N1))return Z.Promise.resolve(Buffer.alloc(0));let p=[],t=0,d=!1;return new Z.Promise(function(r,i){let n;e.timeout&&(n=setTimeout(function(){d=!0,i(new Q(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))},e.timeout)),a.on("error",function(s){s.name==="AbortError"?(d=!0,i(s)):i(new Q(`Invalid response body while trying to fetch ${e.url}: ${s.message}`,"system",s))}),a.on("data",function(s){if(!(d||s===null)){if(e.size&&t+s.length>e.size){d=!0,i(new Q(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}t+=s.length,p.push(s)}}),a.on("end",function(){if(!d){clearTimeout(n);try{r(Buffer.concat(p,t))}catch(s){i(new Q(`Could not create Buffer from response body for ${e.url}: ${s.message}`,"system",s))}}})})}function hs(e,a){if(typeof gp!="function")throw new Error("The package `encoding` must be installed to use the textConverted() function");let p=a.get("content-type"),t="utf-8",d,r;return p&&(d=/charset=([^;]*)/i.exec(p)),r=e.slice(0,1024).toString(),!d&&r&&(d=/<meta.+?charset=(['"])(.+?)\1/i.exec(r)),!d&&r&&(d=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(r),d||(d=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(r),d&&d.pop()),d&&(d=/charset=(.*)/i.exec(d.pop()))),!d&&r&&(d=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(r)),d&&(t=d.pop(),(t==="gb2312"||t==="gbk")&&(t="gb18030")),gp(e,"UTF-8",t).toString()}function id(e){return typeof e!="object"||typeof e.append!="function"||typeof e.delete!="function"||typeof e.get!="function"||typeof e.getAll!="function"||typeof e.has!="function"||typeof e.set!="function"?!1:e.constructor.name==="URLSearchParams"||Object.prototype.toString.call(e)==="[object URLSearchParams]"||typeof e.sort=="function"}function ya(e){return typeof e=="object"&&typeof e.arrayBuffer=="function"&&typeof e.type=="string"&&typeof e.stream=="function"&&typeof e.constructor=="function"&&typeof e.constructor.name=="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function sd(e){let a,p,t=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return t instanceof N1&&typeof t.getBoundary!="function"&&(a=new ad,p=new ad,t.pipe(a),t.pipe(p),e[j1].body=a,t=p),t}function nd(e){return e===null?null:typeof e=="string"?"text/plain;charset=UTF-8":id(e)?"application/x-www-form-urlencoded;charset=UTF-8":ya(e)?e.type||null:Buffer.isBuffer(e)||Object.prototype.toString.call(e)==="[object ArrayBuffer]"||ArrayBuffer.isView(e)?null:typeof e.getBoundary=="function"?`multipart/form-data;boundary=${e.getBoundary()}`:e instanceof N1?null:"text/plain;charset=UTF-8"}function ld(e){let a=e.body;return a===null?0:ya(a)?a.size:Buffer.isBuffer(a)?a.length:a&&typeof a.getLengthSync=="function"&&(a._lengthRetrievers&&a._lengthRetrievers.length==0||a.hasKnownLength&&a.hasKnownLength())?a.getLengthSync():null}function vs(e,a){let p=a.body;p===null?e.end():ya(p)?p.stream().pipe(e):Buffer.isBuffer(p)?(e.write(p),e.end()):p.pipe(e)}Z.Promise=global.Promise;var md=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,wp=/[^\t\x20-\x7e\x80-\xff]/;function wa(e){if(e=`${e}`,md.test(e)||e==="")throw new TypeError(`${e} is not a legal HTTP header name`)}function pd(e){if(e=`${e}`,wp.test(e))throw new TypeError(`${e} is not a legal HTTP header value`)}function ke(e,a){a=a.toLowerCase();for(let p in e)if(p.toLowerCase()===a)return p}var B=Symbol("map"),_1=class e{constructor(){let a=arguments.length>0&&arguments[0]!==void 0?arguments[0]:void 0;if(this[B]=Object.create(null),a instanceof e){let p=a.raw(),t=Object.keys(p);for(let d of t)for(let r of p[d])this.append(d,r);return}if(a!=null)if(typeof a=="object"){let p=a[Symbol.iterator];if(p!=null){if(typeof p!="function")throw new TypeError("Header pairs must be iterable");let t=[];for(let d of a){if(typeof d!="object"||typeof d[Symbol.iterator]!="function")throw new TypeError("Each header pair must be iterable");t.push(Array.from(d))}for(let d of t){if(d.length!==2)throw new TypeError("Each header pair must be a name/value tuple");this.append(d[0],d[1])}}else for(let t of Object.keys(a)){let d=a[t];this.append(t,d)}}else throw new TypeError("Provided initializer must be an object")}get(a){a=`${a}`,wa(a);let p=ke(this[B],a);return p===void 0?null:this[B][p].join(", ")}forEach(a){let p=arguments.length>1&&arguments[1]!==void 0?arguments[1]:void 0,t=_p(this),d=0;for(;d<t.length;){var r=t[d];let i=r[0],n=r[1];a.call(p,n,i,this),t=_p(this),d++}}set(a,p){a=`${a}`,p=`${p}`,wa(a),pd(p);let t=ke(this[B],a);this[B][t!==void 0?t:a]=[p]}append(a,p){a=`${a}`,p=`${p}`,wa(a),pd(p);let t=ke(this[B],a);t!==void 0?this[B][t].push(p):this[B][a]=[p]}has(a){return a=`${a}`,wa(a),ke(this[B],a)!==void 0}delete(a){a=`${a}`,wa(a);let p=ke(this[B],a);p!==void 0&&delete this[B][p]}raw(){return this[B]}keys(){return fp(this,"key")}values(){return fp(this,"value")}[Symbol.iterator](){return fp(this,"key+value")}};_1.prototype.entries=_1.prototype[Symbol.iterator];Object.defineProperty(_1.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0});Object.defineProperties(_1.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});function _p(e){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"key+value";return Object.keys(e[B]).sort().map(a==="key"?function(t){return t.toLowerCase()}:a==="value"?function(t){return e[B][t].join(", ")}:function(t){return[t.toLowerCase(),e[B][t].join(", ")]})}var bp=Symbol("internal");function fp(e,a){let p=Object.create(yp);return p[bp]={target:e,kind:a,index:0},p}var yp=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==yp)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[bp];let a=e.target,p=e.kind,t=e.index,d=_p(a,p),r=d.length;return t>=r?{value:void 0,done:!0}:(this[bp].index=t+1,{value:d[t],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(yp,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});function gs(e){let a=Object.assign({__proto__:null},e[B]),p=ke(e[B],"Host");return p!==void 0&&(a[p]=a[p][0]),a}function ws(e){let a=new _1;for(let p of Object.keys(e))if(!md.test(p))if(Array.isArray(e[p]))for(let t of e[p])wp.test(t)||(a[B][p]===void 0?a[B][p]=[t]:a[B][p].push(t));else wp.test(e[p])||(a[B][p]=[e[p]]);return a}var W1=Symbol("Response internals"),_s=dd.STATUS_CODES,w1=class e{constructor(){let a=arguments.length>0&&arguments[0]!==void 0?arguments[0]:null,p=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};Z.call(this,a,p);let t=p.status||200,d=new _1(p.headers);if(a!=null&&!d.has("Content-Type")){let r=nd(a);r&&d.append("Content-Type",r)}this[W1]={url:p.url,status:t,statusText:p.statusText||_s[t],headers:d,counter:p.counter}}get url(){return this[W1].url||""}get status(){return this[W1].status}get ok(){return this[W1].status>=200&&this[W1].status<300}get redirected(){return this[W1].counter>0}get statusText(){return this[W1].statusText}get headers(){return this[W1].headers}clone(){return new e(sd(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}};Z.mixIn(w1.prototype);Object.defineProperties(w1.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}});Object.defineProperty(w1.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});var B1=Symbol("Request internals"),bs=d2.URL||rd.URL,ys=d2.parse,Ss=d2.format;function hp(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new bs(e).toString()),ys(e)}var Ns="destroy"in N1.Readable.prototype;function t2(e){return typeof e=="object"&&typeof e[B1]=="object"}function Ts(e){let a=e&&typeof e=="object"&&Object.getPrototypeOf(e);return!!(a&&a.constructor.name==="AbortSignal")}var X1=class e{constructor(a){let p=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},t;t2(a)?t=hp(a.url):(a&&a.href?t=hp(a.href):t=hp(`${a}`),a={});let d=p.method||a.method||"GET";if(d=d.toUpperCase(),(p.body!=null||t2(a)&&a.body!==null)&&(d==="GET"||d==="HEAD"))throw new TypeError("Request with GET/HEAD method cannot have body");let r=p.body!=null?p.body:t2(a)&&a.body!==null?sd(a):null;Z.call(this,r,{timeout:p.timeout||a.timeout||0,size:p.size||a.size||0});let i=new _1(p.headers||a.headers||{});if(r!=null&&!i.has("Content-Type")){let s=nd(r);s&&i.append("Content-Type",s)}let n=t2(a)?a.signal:null;if("signal"in p&&(n=p.signal),n!=null&&!Ts(n))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[B1]={method:d,redirect:p.redirect||a.redirect||"follow",headers:i,parsedURL:t,signal:n},this.follow=p.follow!==void 0?p.follow:a.follow!==void 0?a.follow:20,this.compress=p.compress!==void 0?p.compress:a.compress!==void 0?a.compress:!0,this.counter=p.counter||a.counter||0,this.agent=p.agent||a.agent}get method(){return this[B1].method}get url(){return Ss(this[B1].parsedURL)}get headers(){return this[B1].headers}get redirect(){return this[B1].redirect}get signal(){return this[B1].signal}clone(){return new e(this)}};Z.mixIn(X1.prototype);Object.defineProperty(X1.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0});Object.defineProperties(X1.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}});function xs(e){let a=e[B1].parsedURL,p=new _1(e[B1].headers);if(p.has("Accept")||p.set("Accept","*/*"),!a.protocol||!a.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(a.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof N1.Readable&&!Ns)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let t=null;if(e.body==null&&/^(POST|PUT)$/i.test(e.method)&&(t="0"),e.body!=null){let r=ld(e);typeof r=="number"&&(t=String(r))}t&&p.set("Content-Length",t),p.has("User-Agent")||p.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!p.has("Accept-Encoding")&&p.set("Accept-Encoding","gzip,deflate");let d=e.agent;return typeof d=="function"&&(d=d(a)),Object.assign({},a,{method:e.method,headers:gs(p),agent:d})}function Oe(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}Oe.prototype=Object.create(Error.prototype);Oe.prototype.constructor=Oe;Oe.prototype.name="AbortError";var ba=d2.URL||rd.URL,td=N1.PassThrough,Ds=function(a,p){let t=new ba(p).hostname,d=new ba(a).hostname;return t===d||t[t.length-d.length-1]==="."&&t.endsWith(d)},Cs=function(a,p){let t=new ba(p).protocol,d=new ba(a).protocol;return t===d};function Y1(e,a){if(!Y1.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return Z.Promise=Y1.Promise,new Y1.Promise(function(p,t){let d=new X1(e,a),r=xs(d),i=(r.protocol==="https:"?cs:dd).request,n=d.signal,s=null,l=function(){let h=new Oe("The user aborted a request.");t(h),d.body&&d.body instanceof N1.Readable&&vp(d.body,h),!(!s||!s.body)&&s.body.emit("error",h)};if(n&&n.aborted){l();return}let o=function(){l(),v()},m=i(r),c;n&&n.addEventListener("abort",o);function v(){m.abort(),n&&n.removeEventListener("abort",o),clearTimeout(c)}d.timeout&&m.once("socket",function(f){c=setTimeout(function(){t(new Q(`network timeout at: ${d.url}`,"request-timeout")),v()},d.timeout)}),m.on("error",function(f){t(new Q(`request to ${d.url} failed, reason: ${f.message}`,"system",f)),s&&s.body&&vp(s.body,f),v()}),As(m,function(f){n&&n.aborted||s&&s.body&&vp(s.body,f)}),parseInt(process.version.substring(1))<14&&m.on("socket",function(f){f.addListener("close",function(h){let g=f.listenerCount("data")>0;if(s&&g&&!h&&!(n&&n.aborted)){let _=new Error("Premature close");_.code="ERR_STREAM_PREMATURE_CLOSE",s.body.emit("error",_)}})}),m.on("response",function(f){clearTimeout(c);let h=ws(f.headers);if(Y1.isRedirect(f.statusCode)){let y=h.get("Location"),N=null;try{N=y===null?null:new ba(y,d.url).toString()}catch{if(d.redirect!=="manual"){t(new Q(`uri requested responds with an invalid redirect URL: ${y}`,"invalid-redirect")),v();return}}switch(d.redirect){case"error":t(new Q(`uri requested responds with a redirect, redirect mode is set to error: ${d.url}`,"no-redirect")),v();return;case"manual":if(N!==null)try{h.set("Location",N)}catch(R){t(R)}break;case"follow":if(N===null)break;if(d.counter>=d.follow){t(new Q(`maximum redirect reached at: ${d.url}`,"max-redirect")),v();return}let D={headers:new _1(d.headers),follow:d.follow,counter:d.counter+1,agent:d.agent,compress:d.compress,method:d.method,body:d.body,signal:d.signal,timeout:d.timeout,size:d.size};if(!Ds(d.url,N)||!Cs(d.url,N))for(let R of["authorization","www-authenticate","cookie","cookie2"])D.headers.delete(R);if(f.statusCode!==303&&d.body&&ld(d)===null){t(new Q("Cannot follow redirect with body being a readable stream","unsupported-redirect")),v();return}(f.statusCode===303||(f.statusCode===301||f.statusCode===302)&&d.method==="POST")&&(D.method="GET",D.body=void 0,D.headers.delete("content-length")),p(Y1(new X1(N,D))),v();return}}f.once("end",function(){n&&n.removeEventListener("abort",o)});let g=f.pipe(new td),_={url:d.url,status:f.statusCode,statusText:f.statusMessage,headers:h,size:d.size,timeout:d.timeout,counter:d.counter},w=h.get("Content-Encoding");if(!d.compress||d.method==="HEAD"||w===null||f.statusCode===204||f.statusCode===304){s=new w1(g,_),p(s);return}let b={flush:oe.Z_SYNC_FLUSH,finishFlush:oe.Z_SYNC_FLUSH};if(w=="gzip"||w=="x-gzip"){g=g.pipe(oe.createGunzip(b)),s=new w1(g,_),p(s);return}if(w=="deflate"||w=="x-deflate"){let y=f.pipe(new td);y.once("data",function(N){(N[0]&15)===8?g=g.pipe(oe.createInflate()):g=g.pipe(oe.createInflateRaw()),s=new w1(g,_),p(s)}),y.on("end",function(){s||(s=new w1(g,_),p(s))});return}if(w=="br"&&typeof oe.createBrotliDecompress=="function"){g=g.pipe(oe.createBrotliDecompress()),s=new w1(g,_),p(s);return}s=new w1(g,_),p(s)}),vs(m,d)})}function As(e,a){let p;e.on("socket",function(t){p=t}),e.on("response",function(t){let d=t.headers;d["transfer-encoding"]==="chunked"&&!d["content-length"]&&t.once("close",function(r){if(p&&p.listenerCount("data")>0&&!r){let n=new Error("Premature close");n.code="ERR_STREAM_PREMATURE_CLOSE",a(n)}})})}function vp(e,a){e.destroy?e.destroy(a):(e.emit("error",a),e.end())}Y1.isRedirect=function(e){return e===301||e===302||e===303||e===307||e===308};Y1.Promise=global.Promise;od.exports=T1=Y1;Object.defineProperty(T1,"__esModule",{value:!0});T1.default=T1;T1.Headers=_1;T1.Request=X1;T1.Response=w1;T1.FetchError=Q;T1.AbortError=Oe});var i2=u((ue,cd)=>{var Sa=ud(),Vs=Sa.default||Sa,r2=function(e,a){return/^\/\//.test(e)&&(e="https:"+e),Vs.call(this,e,a)};r2.ponyfill=!0;cd.exports=ue=r2;ue.fetch=r2;ue.Headers=Sa.Headers;ue.Request=Sa.Request;ue.Response=Sa.Response;ue.default=r2});var Sp=u(s2=>{"use strict";Object.defineProperty(s2,"__esModule",{value:!0});s2.isJSON=void 0;function Es(e){if(e){let a=Ms(e);if(!a)return!1;if(a.subtype==="json"||a.suffix==="json"||a.suffix&&/\bjson\b/i.test(a.suffix)||a.subtype&&/\bjson\b/i.test(a.subtype))return!0}return!1}s2.isJSON=Es;var Ps=/^([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126});?$/;function Ms(e){let a=e.indexOf(";"),p=a!==-1?e.slice(0,a).trim():e.trim(),t=Ps.exec(p.toLowerCase().toLowerCase());if(!t)return;let d=t[1],r=t[2],i,n=r.lastIndexOf("+");return n!==-1&&(i=r.substring(n+1),r=r.substring(0,n)),{type:d,subtype:r,suffix:i}}});var gd=u(n2=>{"use strict";Object.defineProperty(n2,"__esModule",{value:!0});n2.useFetch=void 0;var qe=require("react"),ks=fa(),fd=I1(),hd=i2(),Os=Sp(),vd=le();async function Rs(e){if(!e.ok)throw new Error(e.statusText);let a=e.headers.get("content-type");return a&&(0,Os.isJSON)(a)?await e.json():await e.text()}function qs(e){return{data:e,hasMore:!1}}function Ls(e,a){let{parseResponse:p,mapResult:t,initialData:d,execute:r,keepPreviousData:i,onError:n,onData:s,onWillExecute:l,failureToastOptions:o,...m}=a||{},c={initialData:d,execute:r,keepPreviousData:i,onError:n,onData:s,onWillExecute:l,failureToastOptions:o},v=(0,fd.useLatest)(p||Rs),f=(0,fd.useLatest)(t||qs),h=(0,qe.useRef)(),g=(0,qe.useRef)(),_=typeof e=="function"?e({page:0}):void 0;(!h.current||typeof g.current>"u"||g.current!==_)&&(h.current=e),g.current=_;let w=(0,qe.useRef)(),b=(0,qe.useCallback)((D,R)=>async V=>{let X=await(0,hd.fetch)(D(V),{signal:w.current?.signal,...R}),K=await v.current(X);return f.current?.(K)},[v,f]),y=(0,qe.useCallback)(async(D,R)=>{let V=await(0,hd.fetch)(D,{signal:w.current?.signal,...R}),X=await v.current(V);return f.current(X)?.data},[v,f]),N=(0,qe.useMemo)(()=>g.current?b:y,[g,y,b]);return(0,ks.useCachedPromise)(N,[h.current,m],{...c,internal_cacheKeySuffix:g.current+(0,vd.hash)(f.current)+(0,vd.hash)(v.current),abortable:w})}n2.useFetch=Ls});var wd=u(ce=>{"use strict";Object.defineProperty(ce,"__esModule",{value:!0});ce.signals=void 0;ce.signals=[];ce.signals.push("SIGHUP","SIGINT","SIGTERM");process.platform!=="win32"&&ce.signals.push("SIGALRM","SIGABRT","SIGVTALRM","SIGXCPU","SIGXFSZ","SIGUSR2","SIGTRAP","SIGSYS","SIGQUIT","SIGIOT");process.platform==="linux"&&ce.signals.push("SIGIO","SIGPOLL","SIGPWR","SIGSTKFLT")});var _d=u(V1=>{"use strict";var l2;Object.defineProperty(V1,"__esModule",{value:!0});V1.unload=V1.load=V1.onExit=V1.signals=void 0;var m2=wd();Object.defineProperty(V1,"signals",{enumerable:!0,get:function(){return m2.signals}});var o2=e=>!!e&&typeof e=="object"&&typeof e.removeListener=="function"&&typeof e.emit=="function"&&typeof e.reallyExit=="function"&&typeof e.listeners=="function"&&typeof e.kill=="function"&&typeof e.pid=="number"&&typeof e.on=="function",Np=Symbol.for("signal-exit emitter"),Tp=globalThis,Is=Object.defineProperty.bind(Object),xp=class{emitted={afterExit:!1,exit:!1};listeners={afterExit:[],exit:[]};count=0;id=Math.random();constructor(){if(Tp[Np])return Tp[Np];Is(Tp,Np,{value:this,writable:!1,enumerable:!1,configurable:!1})}on(a,p){this.listeners[a].push(p)}removeListener(a,p){let t=this.listeners[a],d=t.indexOf(p);d!==-1&&(d===0&&t.length===1?t.length=0:t.splice(d,1))}emit(a,p,t){if(this.emitted[a])return!1;this.emitted[a]=!0;let d=!1;for(let r of this.listeners[a])d=r(p,t)===!0||d;return a==="exit"&&(d=this.emit("afterExit",p,t)||d),d}},u2=class{},Fs=e=>({onExit(a,p){return e.onExit(a,p)},load(){return e.load()},unload(){return e.unload()}}),Dp=class extends u2{onExit(){return()=>{}}load(){}unload(){}},Cp=class extends u2{#i=Ap.platform==="win32"?"SIGINT":"SIGHUP";#a=new xp;#e;#d;#r;#t={};#p=!1;constructor(a){super(),this.#e=a,this.#t={};for(let p of m2.signals)this.#t[p]=()=>{let t=this.#e.listeners(p),{count:d}=this.#a,r=a;if(typeof r.__signal_exit_emitter__=="object"&&typeof r.__signal_exit_emitter__.count=="number"&&(d+=r.__signal_exit_emitter__.count),t.length===d){this.unload();let i=this.#a.emit("exit",null,p),n=p==="SIGHUP"?this.#i:p;i||a.kill(a.pid,n)}};this.#r=a.reallyExit,this.#d=a.emit}onExit(a,p){if(!o2(this.#e))return()=>{};this.#p===!1&&this.load();let t=p?.alwaysLast?"afterExit":"exit";return this.#a.on(t,a),()=>{this.#a.removeListener(t,a),this.#a.listeners.exit.length===0&&this.#a.listeners.afterExit.length===0&&this.unload()}}load(){if(!this.#p){this.#p=!0,this.#a.count+=1;for(let a of m2.signals)try{let p=this.#t[a];p&&this.#e.on(a,p)}catch{}this.#e.emit=(a,...p)=>this.#n(a,...p),this.#e.reallyExit=a=>this.#s(a)}}unload(){this.#p&&(this.#p=!1,m2.signals.forEach(a=>{let p=this.#t[a];if(!p)throw new Error("Listener not defined for signal: "+a);try{this.#e.removeListener(a,p)}catch{}}),this.#e.emit=this.#d,this.#e.reallyExit=this.#r,this.#a.count-=1)}#s(a){return o2(this.#e)?(this.#e.exitCode=a||0,this.#a.emit("exit",this.#e.exitCode,null),this.#r.call(this.#e,this.#e.exitCode)):0}#n(a,...p){let t=this.#d;if(a==="exit"&&o2(this.#e)){typeof p[0]=="number"&&(this.#e.exitCode=p[0]);let d=t.call(this.#e,a,...p);return this.#a.emit("exit",this.#e.exitCode,null),d}else return t.call(this.#e,a,...p)}},Ap=globalThis.process;l2=Fs(o2(Ap)?new Cp(Ap):new Dp),V1.onExit=l2.onExit,V1.load=l2.load,V1.unload=l2.unload});var c2=u(b1=>{"use strict";var Bs=b1&&b1.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(b1,"__esModule",{value:!0});b1.defaultParsing=b1.handleOutput=b1.getSpawnedResult=b1.getSpawnedPromise=void 0;var js=require("node:buffer"),Sd=Bs(require("node:stream")),zs=require("node:util"),Us=_d();function $s(e,{timeout:a}={}){let p=new Promise((n,s)=>{e.on("exit",(l,o)=>{n({exitCode:l,signal:o,timedOut:!1})}),e.on("error",l=>{s(l)}),e.stdin&&e.stdin.on("error",l=>{s(l)})});if(a===0||a===void 0)return p;let t,d=new Promise((n,s)=>{t=setTimeout(()=>{e.kill("SIGTERM"),s(Object.assign(new Error("Timed out"),{timedOut:!0,signal:"SIGTERM"}))},a)}),r=p.finally(()=>{clearTimeout(t)}),i=(0,Us.onExit)(()=>{e.kill()});return Promise.race([d,r]).finally(()=>i())}b1.getSpawnedPromise=$s;var Vp=class extends Error{constructor(){super("The output is too big"),this.name="MaxBufferError"}},Hs=(0,zs.promisify)(Sd.default.pipeline);function Gs(e){let{encoding:a}=e,p=a==="buffer",t=new Sd.default.PassThrough({objectMode:!1});a&&a!=="buffer"&&t.setEncoding(a);let d=0,r=[];return t.on("data",i=>{r.push(i),d+=i.length}),t.getBufferedValue=()=>p?Buffer.concat(r,d):r.join(""),t.getBufferedLength=()=>d,t}async function bd(e,a){let p=Gs(a);return await new Promise((t,d)=>{let r=i=>{i&&p.getBufferedLength()<=js.constants.MAX_LENGTH&&(i.bufferedData=p.getBufferedValue()),d(i)};(async()=>{try{await Hs(e,p),t()}catch(i){r(i)}})(),p.on("data",()=>{p.getBufferedLength()>1e3*1e3*80&&r(new Vp)})}),p.getBufferedValue()}async function yd(e,a){e.destroy();try{return await a}catch(p){return p.bufferedData}}async function Ks({stdout:e,stderr:a},{encoding:p},t){let d=bd(e,{encoding:p}),r=bd(a,{encoding:p});try{return await Promise.all([t,d,r])}catch(i){return Promise.all([{error:i,exitCode:null,signal:i.signal,timedOut:i.timedOut||!1},yd(e,d),yd(a,r)])}}b1.getSpawnedResult=Ks;function Js(e){let a=typeof e=="string"?`
`:10,p=typeof e=="string"?"\r":13;return e[e.length-1]===a&&(e=e.slice(0,-1)),e[e.length-1]===p&&(e=e.slice(0,-1)),e}function Zs(e,a){return e.stripFinalNewline?Js(a):a}b1.handleOutput=Zs;var Ws=({timedOut:e,timeout:a,signal:p,exitCode:t})=>e?`timed out after ${a} milliseconds`:p!=null?`was killed with ${p}`:t!=null?`failed with exit code ${t}`:"failed",Ys=({stdout:e,stderr:a,error:p,signal:t,exitCode:d,command:r,timedOut:i,options:n,parentError:s})=>{let o=`Command ${Ws({timedOut:i,timeout:n?.timeout,signal:t,exitCode:d})}: ${r}`,m=p?`${o}
${p.message}`:o,c=[m,a,e].filter(Boolean).join(`
`);return p?p.originalMessage=p.message:p=s,p.message=c,p.shortMessage=m,p.command=r,p.exitCode=d,p.signal=t,p.stdout=e,p.stderr=a,"bufferedData"in p&&delete p.bufferedData,p};function Xs({stdout:e,stderr:a,error:p,exitCode:t,signal:d,timedOut:r,command:i,options:n,parentError:s}){if(p||t!==0||d!==null)throw Ys({error:p,exitCode:t,signal:d,stdout:e,stderr:a,command:i,timedOut:r,options:n,parentError:s});return e}b1.defaultParsing=Xs});var Td=u(Le=>{"use strict";var Qs=Le&&Le.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(Le,"__esModule",{value:!0});Le.useExec=void 0;var e7=Qs(require("node:child_process")),Nd=require("react"),a7=fa(),p7=I1(),Na=c2(),t7=/ +/g;function d7(e,a){if(a)return[e,...a];let p=[];for(let t of e.trim().split(t7)){let d=p[p.length-1];d&&d.endsWith("\\")?p[p.length-1]=`${d.slice(0,-1)} ${t}`:p.push(t)}return p}function r7(e,a,p){let{parseOutput:t,input:d,onData:r,onWillExecute:i,initialData:n,execute:s,keepPreviousData:l,onError:o,failureToastOptions:m,...c}=Array.isArray(a)?p||{}:a||{},v={initialData:n,execute:s,keepPreviousData:l,onError:o,onData:r,onWillExecute:i,failureToastOptions:m},f=(0,Nd.useRef)(),h=(0,p7.useLatest)(t||Na.defaultParsing),g=(0,Nd.useCallback)(async(_,w,b,y)=>{let[N,...D]=d7(_,w),R=[N,...D].join(" "),V={stripFinalNewline:!0,...b,timeout:b?.timeout||1e4,signal:f.current?.signal,encoding:b?.encoding===null?"buffer":b?.encoding||"utf8",env:{PATH:"/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin",...process.env,...b?.env}},X=e7.default.spawn(N,D,V),K=(0,Na.getSpawnedPromise)(X,V);y&&X.stdin.end(y);let[{error:M,exitCode:m1,signal:v1,timedOut:C},a1,r1]=await(0,Na.getSpawnedResult)(X,V,K),xe=(0,Na.handleOutput)(V,a1),ap=(0,Na.handleOutput)(V,r1);return h.current({stdout:xe,stderr:ap,error:M,exitCode:m1,signal:v1,timedOut:C,command:R,options:V,parentError:new Error})},[h]);return(0,a7.useCachedPromise)(g,[e,Array.isArray(a)?a:[],c,d],{...v,abortable:f})}Le.useExec=r7});var Mp=u((Qw,Ad)=>{"use strict";var{Readable:Yw,Writable:Xw,Duplex:i7,Transform:Cd}=require("stream"),s7=Symbol.for("object-stream.none"),Ep=Symbol.for("object-stream.final"),Pp=Symbol.for("object-stream.many"),n7=e=>({[Ep]:e}),l7=e=>({[Pp]:e}),m7=e=>e&&typeof e=="object"&&Ep in e,o7=e=>e&&typeof e=="object"&&Pp in e,u7=e=>e[Ep],c7=e=>e[Pp],f7=async(e,a)=>{for(;;){let p=e.next();if(p&&typeof p.then=="function"&&(p=await p),p.done)break;let t=p.value;t&&typeof t.then=="function"&&(t=await t),j.sanitize(t,a)}},h7=e=>new Cd({writableObjectMode:!0,readableObjectMode:!0,transform(a,p,t){try{let d=e.call(this,a,p);if(d&&typeof d.then=="function"){d.then(r=>(j.sanitize(r,this),t(null)),r=>t(r));return}if(d&&typeof d.next=="function"){f7(d,this).then(()=>t(null),r=>t(r));return}j.sanitize(d,this),t(null)}catch(d){t(d)}}}),v7=e=>new Cd({writableObjectMode:!0,readableObjectMode:!0,transform(a,p,t){try{let d=a;for(let r=0;r<e.length;++r){let i=e[r].call(this,d,p);if(i===j.none){t(null);return}if(j.isFinal(i)){d=j.getFinalValue(i);break}d=i}j.sanitize(d,this),t(null)}catch(d){t(d)}}}),xd=e=>e&&typeof e.pipe=="function"&&typeof e.on=="function"&&(!e._writableState||(typeof e._readableState=="object"?e._readableState.readable:null)!==!1)&&(!e._writableState||e._readableState),Dd=e=>e&&typeof e.write=="function"&&typeof e.on=="function"&&(!e._readableState||(typeof e._writableState=="object"?e._writableState.writable:null)!==!1),g7=e=>e&&typeof e.pipe=="function"&&e._readableState&&typeof e.on=="function"&&typeof e.write=="function",j=class e extends i7{constructor(a,p){if(super(p||{writableObjectMode:!0,readableObjectMode:!0}),!(a instanceof Array)||!a.length)throw Error("Chain's argument should be a non-empty array.");this.streams=a.filter(t=>t).map((t,d,r)=>{if(typeof t=="function"||t instanceof Array)return e.convertToTransform(t);if(g7(t)||!d&&xd(t)||d===r.length-1&&Dd(t))return t;throw Error("Arguments should be functions, arrays or streams.")}).filter(t=>t),this.input=this.streams[0],this.output=this.streams.reduce((t,d)=>t&&t.pipe(d)||d),Dd(this.input)||(this._write=(t,d,r)=>r(null),this._final=t=>t(null),this.input.on("end",()=>this.end())),xd(this.output)?(this.output.on("data",t=>!this.push(t)&&this.output.pause()),this.output.on("end",()=>this.push(null))):(this._read=()=>{},this.resume(),this.output.on("finish",()=>this.push(null))),(!p||!p.skipEvents)&&this.streams.forEach(t=>t.on("error",d=>this.emit("error",d)))}_write(a,p,t){let d=null;try{this.input.write(a,p,r=>t(r||d))}catch(r){d=r}}_final(a){let p=null;try{this.input.end(null,null,t=>a(t||p))}catch(t){p=t}}_read(){this.output.resume()}static make(a,p){return new e(a,p)}static sanitize(a,p){e.isFinal(a)?a=e.getFinalValue(a):e.isMany(a)&&(a=e.getManyValues(a)),a!=null&&a!==e.none&&(a instanceof Array?a.forEach(t=>t!=null&&p.push(t)):p.push(a))}static convertToTransform(a){return typeof a=="function"?h7(a):a instanceof Array&&a.length?v7(a):null}};j.none=s7;j.final=n7;j.isFinal=m7;j.getFinalValue=u7;j.many=l7;j.isMany=o7;j.getManyValues=c7;j.chain=j.make;j.make.Constructor=j;Ad.exports=j});var Ed=u((e_,Vd)=>{"use strict";var{Transform:w7}=require("stream"),{StringDecoder:_7}=require("string_decoder"),kp=class extends w7{constructor(a){super(Object.assign({},a,{writableObjectMode:!1})),this._buffer=""}_transform(a,p,t){typeof a=="string"?this._transform=this._transformString:(this._stringDecoder=new _7,this._transform=this._transformBuffer),this._transform(a,p,t)}_transformBuffer(a,p,t){this._buffer+=this._stringDecoder.write(a),this._processBuffer(t)}_transformString(a,p,t){this._buffer+=a.toString(),this._processBuffer(t)}_processBuffer(a){this._buffer&&(this.push(this._buffer,"utf8"),this._buffer=""),a(null)}_flushInput(){this._stringDecoder&&(this._buffer+=this._stringDecoder.end())}_flush(a){this._flushInput(),this._processBuffer(a)}};Vd.exports=kp});var Op=u((a_,Pd)=>{"use strict";var b7=Ed(),x={value1:/^(?:[\"\{\[\]\-\d]|true\b|false\b|null\b|\s{1,256})/,string:/^(?:[^\"\\]{1,256}|\\[bfnrt\"\\\/]|\\u[\da-fA-F]{4}|\")/,key1:/^(?:[\"\}]|\s{1,256})/,colon:/^(?:\:|\s{1,256})/,comma:/^(?:[\,\]\}]|\s{1,256})/,ws:/^\s{1,256}/,numberStart:/^\d/,numberDigit:/^\d{0,256}/,numberFraction:/^[\.eE]/,numberExponent:/^[eE]/,numberExpSign:/^[-+]/},y7=16,W=!0;try{new RegExp(".","y"),W=!1}catch{}!W&&Object.keys(x).forEach(e=>{let a=x[e].source.slice(1);a.slice(0,3)==="(?:"&&a.slice(-1)===")"&&(a=a.slice(3,-1)),x[e]=new RegExp(a,"y")});x.numberFracStart=x.numberExpStart=x.numberStart;x.numberFracDigit=x.numberExpDigit=x.numberDigit;var S7={true:!0,false:!1,null:null},E1={object:"objectStop",array:"arrayStop","":"done"},N7=e=>String.fromCharCode(parseInt(e.slice(2),16)),T7={b:"\b",f:"\f",n:`
`,r:"\r",t:"	",'"':'"',"\\":"\\","/":"/"},fe=class e extends b7{static make(a){return new e(a)}constructor(a){super(Object.assign({},a,{readableObjectMode:!0})),this._packKeys=this._packStrings=this._packNumbers=this._streamKeys=this._streamStrings=this._streamNumbers=!0,a&&("packValues"in a&&(this._packKeys=this._packStrings=this._packNumbers=a.packValues),"packKeys"in a&&(this._packKeys=a.packKeys),"packStrings"in a&&(this._packStrings=a.packStrings),"packNumbers"in a&&(this._packNumbers=a.packNumbers),"streamValues"in a&&(this._streamKeys=this._streamStrings=this._streamNumbers=a.streamValues),"streamKeys"in a&&(this._streamKeys=a.streamKeys),"streamStrings"in a&&(this._streamStrings=a.streamStrings),"streamNumbers"in a&&(this._streamNumbers=a.streamNumbers),this._jsonStreaming=a.jsonStreaming),!this._packKeys&&(this._streamKeys=!0),!this._packStrings&&(this._streamStrings=!0),!this._packNumbers&&(this._streamNumbers=!0),this._done=!1,this._expect=this._jsonStreaming?"done":"value",this._stack=[],this._parent="",this._open_number=!1,this._accumulator=""}_flush(a){this._done=!0,super._flush(p=>{if(p)return a(p);this._open_number&&(this._streamNumbers&&this.push({name:"endNumber"}),this._open_number=!1,this._packNumbers&&(this.push({name:"numberValue",value:this._accumulator}),this._accumulator="")),a(null)})}_processBuffer(a){let p,t,d=0;e:for(;;)switch(this._expect){case"value1":case"value":if(x.value1.lastIndex=d,p=x.value1.exec(this._buffer),!p){if(this._done||d+y7<this._buffer.length)return d<this._buffer.length?a(new Error("Parser cannot parse input: expected a value")):a(new Error("Parser has expected a value"));break e}switch(t=p[0],t){case'"':this._streamStrings&&this.push({name:"startString"}),this._expect="string";break;case"{":this.push({name:"startObject"}),this._stack.push(this._parent),this._parent="object",this._expect="key1";break;case"[":this.push({name:"startArray"}),this._stack.push(this._parent),this._parent="array",this._expect="value1";break;case"]":if(this._expect!=="value1")return a(new Error("Parser cannot parse input: unexpected token ']'"));this._open_number&&(this._streamNumbers&&this.push({name:"endNumber"}),this._open_number=!1,this._packNumbers&&(this.push({name:"numberValue",value:this._accumulator}),this._accumulator="")),this.push({name:"endArray"}),this._parent=this._stack.pop(),this._expect=E1[this._parent];break;case"-":this._open_number=!0,this._streamNumbers&&(this.push({name:"startNumber"}),this.push({name:"numberChunk",value:"-"})),this._packNumbers&&(this._accumulator="-"),this._expect="numberStart";break;case"0":this._open_number=!0,this._streamNumbers&&(this.push({name:"startNumber"}),this.push({name:"numberChunk",value:"0"})),this._packNumbers&&(this._accumulator="0"),this._expect="numberFraction";break;case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":this._open_number=!0,this._streamNumbers&&(this.push({name:"startNumber"}),this.push({name:"numberChunk",value:t})),this._packNumbers&&(this._accumulator=t),this._expect="numberDigit";break;case"true":case"false":case"null":if(this._buffer.length-d===t.length&&!this._done)break e;this.push({name:t+"Value",value:S7[t]}),this._expect=E1[this._parent];break}W?this._buffer=this._buffer.slice(t.length):d+=t.length;break;case"keyVal":case"string":if(x.string.lastIndex=d,p=x.string.exec(this._buffer),!p){if(d<this._buffer.length&&(this._done||this._buffer.length-d>=6))return a(new Error("Parser cannot parse input: escaped characters"));if(this._done)return a(new Error("Parser has expected a string value"));break e}if(t=p[0],t==='"')this._expect==="keyVal"?(this._streamKeys&&this.push({name:"endKey"}),this._packKeys&&(this.push({name:"keyValue",value:this._accumulator}),this._accumulator=""),this._expect="colon"):(this._streamStrings&&this.push({name:"endString"}),this._packStrings&&(this.push({name:"stringValue",value:this._accumulator}),this._accumulator=""),this._expect=E1[this._parent]);else if(t.length>1&&t.charAt(0)==="\\"){let r=t.length==2?T7[t.charAt(1)]:N7(t);(this._expect==="keyVal"?this._streamKeys:this._streamStrings)&&this.push({name:"stringChunk",value:r}),(this._expect==="keyVal"?this._packKeys:this._packStrings)&&(this._accumulator+=r)}else(this._expect==="keyVal"?this._streamKeys:this._streamStrings)&&this.push({name:"stringChunk",value:t}),(this._expect==="keyVal"?this._packKeys:this._packStrings)&&(this._accumulator+=t);W?this._buffer=this._buffer.slice(t.length):d+=t.length;break;case"key1":case"key":if(x.key1.lastIndex=d,p=x.key1.exec(this._buffer),!p){if(d<this._buffer.length||this._done)return a(new Error("Parser cannot parse input: expected an object key"));break e}if(t=p[0],t==='"')this._streamKeys&&this.push({name:"startKey"}),this._expect="keyVal";else if(t==="}"){if(this._expect!=="key1")return a(new Error("Parser cannot parse input: unexpected token '}'"));this.push({name:"endObject"}),this._parent=this._stack.pop(),this._expect=E1[this._parent]}W?this._buffer=this._buffer.slice(t.length):d+=t.length;break;case"colon":if(x.colon.lastIndex=d,p=x.colon.exec(this._buffer),!p){if(d<this._buffer.length||this._done)return a(new Error("Parser cannot parse input: expected ':'"));break e}t=p[0],t===":"&&(this._expect="value"),W?this._buffer=this._buffer.slice(t.length):d+=t.length;break;case"arrayStop":case"objectStop":if(x.comma.lastIndex=d,p=x.comma.exec(this._buffer),!p){if(d<this._buffer.length||this._done)return a(new Error("Parser cannot parse input: expected ','"));break e}if(this._open_number&&(this._streamNumbers&&this.push({name:"endNumber"}),this._open_number=!1,this._packNumbers&&(this.push({name:"numberValue",value:this._accumulator}),this._accumulator="")),t=p[0],t===",")this._expect=this._expect==="arrayStop"?"value":"key";else if(t==="}"||t==="]"){if(t==="}"?this._expect==="arrayStop":this._expect!=="arrayStop")return a(new Error("Parser cannot parse input: expected '"+(this._expect==="arrayStop"?"]":"}")+"'"));this.push({name:t==="}"?"endObject":"endArray"}),this._parent=this._stack.pop(),this._expect=E1[this._parent]}W?this._buffer=this._buffer.slice(t.length):d+=t.length;break;case"numberStart":if(x.numberStart.lastIndex=d,p=x.numberStart.exec(this._buffer),!p){if(d<this._buffer.length||this._done)return a(new Error("Parser cannot parse input: expected a starting digit"));break e}t=p[0],this._streamNumbers&&this.push({name:"numberChunk",value:t}),this._packNumbers&&(this._accumulator+=t),this._expect=t==="0"?"numberFraction":"numberDigit",W?this._buffer=this._buffer.slice(t.length):d+=t.length;break;case"numberDigit":if(x.numberDigit.lastIndex=d,p=x.numberDigit.exec(this._buffer),!p){if(d<this._buffer.length||this._done)return a(new Error("Parser cannot parse input: expected a digit"));break e}if(t=p[0],t)this._streamNumbers&&this.push({name:"numberChunk",value:t}),this._packNumbers&&(this._accumulator+=t),W?this._buffer=this._buffer.slice(t.length):d+=t.length;else{if(d<this._buffer.length){this._expect="numberFraction";break}if(this._done){this._expect=E1[this._parent];break}break e}break;case"numberFraction":if(x.numberFraction.lastIndex=d,p=x.numberFraction.exec(this._buffer),!p){if(d<this._buffer.length||this._done){this._expect=E1[this._parent];break}break e}t=p[0],this._streamNumbers&&this.push({name:"numberChunk",value:t}),this._packNumbers&&(this._accumulator+=t),this._expect=t==="."?"numberFracStart":"numberExpSign",W?this._buffer=this._buffer.slice(t.length):d+=t.length;break;case"numberFracStart":if(x.numberFracStart.lastIndex=d,p=x.numberFracStart.exec(this._buffer),!p){if(d<this._buffer.length||this._done)return a(new Error("Parser cannot parse input: expected a fractional part of a number"));break e}t=p[0],this._streamNumbers&&this.push({name:"numberChunk",value:t}),this._packNumbers&&(this._accumulator+=t),this._expect="numberFracDigit",W?this._buffer=this._buffer.slice(t.length):d+=t.length;break;case"numberFracDigit":if(x.numberFracDigit.lastIndex=d,p=x.numberFracDigit.exec(this._buffer),t=p[0],t)this._streamNumbers&&this.push({name:"numberChunk",value:t}),this._packNumbers&&(this._accumulator+=t),W?this._buffer=this._buffer.slice(t.length):d+=t.length;else{if(d<this._buffer.length){this._expect="numberExponent";break}if(this._done){this._expect=E1[this._parent];break}break e}break;case"numberExponent":if(x.numberExponent.lastIndex=d,p=x.numberExponent.exec(this._buffer),!p){if(d<this._buffer.length){this._expect=E1[this._parent];break}if(this._done){this._expect="done";break}break e}t=p[0],this._streamNumbers&&this.push({name:"numberChunk",value:t}),this._packNumbers&&(this._accumulator+=t),this._expect="numberExpSign",W?this._buffer=this._buffer.slice(t.length):d+=t.length;break;case"numberExpSign":if(x.numberExpSign.lastIndex=d,p=x.numberExpSign.exec(this._buffer),!p){if(d<this._buffer.length){this._expect="numberExpStart";break}if(this._done)return a(new Error("Parser has expected an exponent value of a number"));break e}t=p[0],this._streamNumbers&&this.push({name:"numberChunk",value:t}),this._packNumbers&&(this._accumulator+=t),this._expect="numberExpStart",W?this._buffer=this._buffer.slice(t.length):d+=t.length;break;case"numberExpStart":if(x.numberExpStart.lastIndex=d,p=x.numberExpStart.exec(this._buffer),!p){if(d<this._buffer.length||this._done)return a(new Error("Parser cannot parse input: expected an exponent part of a number"));break e}t=p[0],this._streamNumbers&&this.push({name:"numberChunk",value:t}),this._packNumbers&&(this._accumulator+=t),this._expect="numberExpDigit",W?this._buffer=this._buffer.slice(t.length):d+=t.length;break;case"numberExpDigit":if(x.numberExpDigit.lastIndex=d,p=x.numberExpDigit.exec(this._buffer),t=p[0],t)this._streamNumbers&&this.push({name:"numberChunk",value:t}),this._packNumbers&&(this._accumulator+=t),W?this._buffer=this._buffer.slice(t.length):d+=t.length;else{if(d<this._buffer.length||this._done){this._expect=E1[this._parent];break}break e}break;case"done":if(x.ws.lastIndex=d,p=x.ws.exec(this._buffer),!p){if(d<this._buffer.length){if(this._jsonStreaming){this._expect="value";break}return a(new Error("Parser cannot parse input: unexpected characters"))}break e}t=p[0],this._open_number&&(this._streamNumbers&&this.push({name:"endNumber"}),this._open_number=!1,this._packNumbers&&(this.push({name:"numberValue",value:this._accumulator}),this._accumulator="")),W?this._buffer=this._buffer.slice(t.length):d+=t.length;break}!W&&(this._buffer=this._buffer.slice(d)),a(null)}};fe.parser=fe.make;fe.make.Constructor=fe;Pd.exports=fe});var kd=u((p_,Md)=>{"use strict";var x7=e=>e.on("data",a=>e.emit(a.name,a.value));Md.exports=x7});var Rd=u((t_,Od)=>{"use strict";var Rp=Op(),D7=kd(),qp=e=>D7(new Rp(e));qp.Parser=Rp;qp.parser=Rp.parser;Od.exports=qp});var Ld=u((d_,qd)=>{"use strict";var{Transform:C7}=require("stream"),P1=class e extends C7{static stringFilter(a,p){return t=>{let d=t.join(p);return d.length===a.length&&d===a||d.length>a.length&&d.substr(0,a.length)===a&&d.substr(a.length,p.length)===p}}static regExpFilter(a,p){return t=>a.test(t.join(p))}static arrayReplacement(a){return()=>a}constructor(a){super(Object.assign({},a,{writableObjectMode:!0,readableObjectMode:!0})),this._transform=this._check,this._stack=[];let p=a&&a.filter,t=a&&a.pathSeparator||".";typeof p=="string"?this._filter=e.stringFilter(p,t):typeof p=="function"?this._filter=p:p instanceof RegExp&&(this._filter=e.regExpFilter(p,t));let d=a&&a.replacement;typeof d=="function"?this._replacement=d:this._replacement=e.arrayReplacement(d||e.defaultReplacement),this._allowEmptyReplacement=a&&a.allowEmptyReplacement,this._streamKeys=!0,a&&("streamValues"in a&&(this._streamKeys=a.streamValues),"streamKeys"in a&&(this._streamKeys=a.streamKeys)),this._once=a&&a.once,this._previousToken=""}_check(a,p,t){switch(a.name){case"startObject":case"startArray":case"startString":case"startNumber":case"nullValue":case"trueValue":case"falseValue":typeof this._stack[this._stack.length-1]=="number"&&++this._stack[this._stack.length-1];break;case"keyValue":this._stack[this._stack.length-1]=a.value;break;case"numberValue":this._previousToken!=="endNumber"&&typeof this._stack[this._stack.length-1]=="number"&&++this._stack[this._stack.length-1];break;case"stringValue":this._previousToken!=="endString"&&typeof this._stack[this._stack.length-1]=="number"&&++this._stack[this._stack.length-1];break}if(this._previousToken=a.name,this._checkChunk(a))return t(null);switch(a.name){case"startObject":this._stack.push(null);break;case"startArray":this._stack.push(-1);break;case"endObject":case"endArray":this._stack.pop();break}t(null)}_passObject(a,p,t){switch(this.push(a),a.name){case"startObject":case"startArray":++this._depth;break;case"endObject":case"endArray":--this._depth;break}this._depth||(this._transform=this._once?this._skip:this._check),t(null)}_pass(a,p,t){this.push(a),t(null)}_skipObject(a,p,t){switch(a.name){case"startObject":case"startArray":++this._depth;break;case"endObject":case"endArray":--this._depth;break}this._depth||(this._transform=this._once?this._pass:this._check),t(null)}_skip(a,p,t){t(null)}};P1.defaultReplacement=[{name:"nullValue",value:null}];var Lp=(e,a)=>function(p,t,d){if(this._expected){let r=this._expected;if(this._expected="",this._transform=this._once?this._skip:this._check,r===p.name)this.push(p);else return this._transform(p,t,d)}else this.push(p),p.name===e&&(this._expected=a);d(null)};P1.prototype._passNumber=Lp("endNumber","numberValue");P1.prototype._passString=Lp("endString","stringValue");P1.prototype._passKey=Lp("endKey","keyValue");var Ip=(e,a)=>function(p,t,d){if(this._expected){let r=this._expected;if(this._expected="",this._transform=this._once?this._pass:this._check,r!==p.name)return this._transform(p,t,d)}else p.name===e&&(this._expected=a);d(null)};P1.prototype._skipNumber=Ip("endNumber","numberValue");P1.prototype._skipString=Ip("endString","stringValue");P1.prototype._skipKey=Ip("endKey","keyValue");qd.exports=P1});var Fp=u((r_,Id)=>{"use strict";var A7=Mp(),V7=Op(),E7=(e,a)=>new A7([new V7(a),e(a)],Object.assign({},a,{writableObjectMode:!1,readableObjectMode:!0}));Id.exports=E7});var Bd=u((i_,Fd)=>{"use strict";var P7=Ld(),M7=Fp(),he=class e extends P7{static make(a){return new e(a)}static withParser(a){return M7(e.make,a)}_checkChunk(a){switch(a.name){case"startObject":case"startArray":if(this._filter(this._stack,a))return this.push(a),this._transform=this._passObject,this._depth=1,!0;break;case"startString":if(this._filter(this._stack,a))return this.push(a),this._transform=this._passString,!0;break;case"startNumber":if(this._filter(this._stack,a))return this.push(a),this._transform=this._passNumber,!0;break;case"nullValue":case"trueValue":case"falseValue":case"stringValue":case"numberValue":if(this._filter(this._stack,a))return this.push(a),this._transform=this._once?this._skip:this._check,!0;break}return!1}};he.pick=he.make;he.make.Constructor=he;Fd.exports=he});var Ud=u((s_,zd)=>{"use strict";var k7=require("events"),jd=e=>function(){this.done?this.done=!1:this.stack.push(this.current,this.key),this.current=new e,this.key=null},z1=class e extends k7{static connectTo(a,p){return new e(p).connectTo(a)}constructor(a){super(),this.stack=[],this.current=this.key=null,this.done=!0,a&&(this.reviver=typeof a.reviver=="function"&&a.reviver,this.reviver&&(this.stringValue=this._saveValue=this._saveValueWithReviver),a.numberAsString&&(this.numberValue=this.stringValue))}connectTo(a){return a.on("data",p=>{this[p.name]&&(this[p.name](p.value),this.done&&this.emit("done",this))}),this}get depth(){return(this.stack.length>>1)+(this.done?0:1)}get path(){let a=[];for(let p=0;p<this.stack.length;p+=2){let t=this.stack[p+1];a.push(t===null?this.stack[p].length:t)}return a}dropToLevel(a){if(a<this.depth)if(a){let p=a-1<<1;this.current=this.stack[p],this.key=this.stack[p+1],this.stack.splice(p)}else this.stack=[],this.current=this.key=null,this.done=!0;return this}consume(a){return this[a.name]&&this[a.name](a.value),this}keyValue(a){this.key=a}numberValue(a){this._saveValue(parseFloat(a))}nullValue(){this._saveValue(null)}trueValue(){this._saveValue(!0)}falseValue(){this._saveValue(!1)}endObject(){if(this.stack.length){let a=this.current;this.key=this.stack.pop(),this.current=this.stack.pop(),this._saveValue(a)}else this.done=!0}_saveValue(a){this.done?this.current=a:this.current instanceof Array?this.current.push(a):(this.current[this.key]=a,this.key=null)}_saveValueWithReviver(a){this.done?this.current=this.reviver("",a):this.current instanceof Array?(a=this.reviver(""+this.current.length,a),this.current.push(a),a===void 0&&delete this.current[this.current.length-1]):(a=this.reviver(this.key,a),a!==void 0&&(this.current[this.key]=a),this.key=null)}};z1.prototype.stringValue=z1.prototype._saveValue;z1.prototype.startObject=jd(Object);z1.prototype.startArray=jd(Array);z1.prototype.endArray=z1.prototype.endObject;zd.exports=z1});var Hd=u((n_,$d)=>{"use strict";var{Transform:O7}=require("stream"),R7=Ud(),Bp=class{constructor(a){this.depth=a}startObject(){++this.depth}endObject(){--this.depth}startArray(){++this.depth}endArray(){--this.depth}},jp=class extends O7{constructor(a){super(Object.assign({},a,{writableObjectMode:!0,readableObjectMode:!0})),a&&(this.objectFilter=a.objectFilter,this.includeUndecided=a.includeUndecided),typeof this.objectFilter!="function"&&(this._filter=this._transform),this._transform=this._wait||this._filter,this._assembler=new R7(a)}_transform(a,p,t){this._assembler[a.name]&&(this._assembler[a.name](a.value),this._assembler.depth===this._level&&this._push()),t(null)}_filter(a,p,t){if(this._assembler[a.name]){this._assembler[a.name](a.value);let d=this.objectFilter(this._assembler);if(d)return this._assembler.depth===this._level&&(this._push(),this._transform=this._filter),this._transform=this._accept,t(null);if(d===!1)return this._saved_assembler=this._assembler,this._assembler=new Bp(this._saved_assembler.depth),this._saved_assembler.dropToLevel(this._level),this._assembler.depth===this._level&&(this._assembler=this._saved_assembler,this._transform=this._filter),this._transform=this._reject,t(null);this._assembler.depth===this._level&&this._push(!this.includeUndecided)}t(null)}_accept(a,p,t){this._assembler[a.name]&&(this._assembler[a.name](a.value),this._assembler.depth===this._level&&(this._push(),this._transform=this._filter)),t(null)}_reject(a,p,t){this._assembler[a.name]&&(this._assembler[a.name](a.value),this._assembler.depth===this._level&&(this._assembler=this._saved_assembler,this._transform=this._filter)),t(null)}};$d.exports=jp});var Kd=u((l_,Gd)=>{"use strict";var q7=Hd(),L7=Fp(),ve=class e extends q7{static make(a){return new e(a)}static withParser(a){return L7(e.make,a)}constructor(a){super(a),this._level=1,this._counter=0}_wait(a,p,t){return a.name!=="startArray"?t(new Error("Top-level object should be an array.")):(this._transform=this._filter,this._transform(a,p,t))}_push(a){this._assembler.current.length&&(a?(++this._counter,this._assembler.current.pop()):this.push({key:this._counter++,value:this._assembler.current.pop()}))}};ve.streamArray=ve.make;ve.make.Constructor=ve;Gd.exports=ve});var Yd=u(Ie=>{"use strict";var h2=Ie&&Ie.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(Ie,"__esModule",{value:!0});Ie.useStreamJSON=void 0;var I7=require("@raycast/api"),Jd=h2(i2()),Da=require("node:fs"),zp=require("node:fs/promises"),f2=require("node:path"),Zd=require("node:stream/promises"),Ta=require("react"),F7=h2(Mp()),B7=Rd(),j7=h2(Bd()),z7=h2(Kd()),Wd=Sp(),U7=fa(),$7=le();async function xa(e,a,p){if(typeof e=="object"||e.startsWith("http://")||e.startsWith("https://"))return await H7(e,a,p);if(e.startsWith("file://"))return await G7((0,f2.normalize)(decodeURIComponent(new URL(e).pathname)),a,p?.signal?p.signal:void 0);throw new Error("Only HTTP(S) or file URLs are supported")}async function H7(e,a,p){let t=await(0,Jd.default)(e,p);if(!t.ok)throw new Error("Failed to fetch URL");if(!(0,Wd.isJSON)(t.headers.get("content-type")))throw new Error("URL does not return JSON");if(!t.body)throw new Error("Failed to retrieve expected JSON content: Response body is missing or inaccessible.");await(0,Zd.pipeline)(t.body,(0,Da.createWriteStream)(a),p?.signal?{signal:p.signal}:void 0)}async function G7(e,a,p){await(0,Zd.pipeline)((0,Da.createReadStream)(e),(0,Da.createWriteStream)(a),p?{signal:p}:void 0)}async function K7(e,a,p,t,d){let r=(0,f2.join)(a,p);try{await(0,zp.stat)(a)}catch{(0,Da.mkdirSync)(a,{recursive:!0}),await xa(e,r,d);return}if(t){await xa(e,r,d);return}let i;try{i=await(0,zp.stat)(r)}catch{await xa(e,r,d);return}if(typeof e=="object"||e.startsWith("http://")||e.startsWith("https://")){let n=await(0,Jd.default)(e,{...d,method:"HEAD"});if(!n.ok)throw new Error("Could not fetch URL");if(!(0,Wd.isJSON)(n.headers.get("content-type")))throw new Error("URL does not return JSON");let s=Date.parse(n.headers.get("last-modified")??"");if(i.size===0||Number.isNaN(s)||s>i.mtimeMs){await xa(e,r,d);return}}else if(e.startsWith("file://"))try{(await(0,zp.stat)((0,f2.normalize)(decodeURIComponent(new URL(e).pathname)))).mtimeMs>i.mtimeMs&&await xa(e,r,d)}catch{throw new Error("Source file could not be read")}else throw new Error("Only HTTP(S) or file URLs are supported")}async function*J7(e,a,p,t,d,r){let i=[],n=new F7.default([(0,Da.createReadStream)(e),t?j7.default.withParser({filter:t}):(0,B7.parser)(),new z7.default,s=>r?.(s.value)??s.value]);p?.addEventListener("abort",()=>{n.destroy()});try{for await(let s of n){if(p?.aborted)return[];(!d||d(s))&&i.push(s),i.length>=a&&(yield i,i=[])}}catch(s){throw n.destroy(),s}return i.length>0&&(yield i),[]}function Z7(e,a){let{initialData:p,execute:t,keepPreviousData:d,onError:r,onData:i,onWillExecute:n,failureToastOptions:s,dataPath:l,filter:o,transform:m,pageSize:c=20,...v}=a??{},f=(0,Ta.useRef)(),h=(0,Ta.useRef)(),g={initialData:p,execute:t,keepPreviousData:d,onError:r,onData:i,onWillExecute:n,failureToastOptions:s},_=(0,Ta.useRef)(null),w=(0,Ta.useRef)(null),b=(0,Ta.useRef)(!1);return(0,U7.useCachedPromise)((y,N,D,R,V,X)=>async({page:K})=>{let M=(0,$7.hash)(y)+".json",m1=I7.environment.supportPath;if(K===0){w.current?.abort(),w.current=new AbortController;let a1=(0,f2.join)(m1,M),r1=!!(f.current&&f.current!==y&&h.current&&h.current===a1);f.current=y,h.current=a1,await K7(y,m1,M,r1,{...D,signal:w.current?.signal}),_.current=J7(a1,N,w.current?.signal,R,V,X)}if(!_.current)return{hasMore:b.current,data:[]};let{value:v1,done:C}=await _.current.next();return b.current=!C,{hasMore:b.current,data:v1??[]}},[e,c,v,l,o,m],g)}Ie.useStreamJSON=Z7});var p6=u(Fe=>{"use strict";var Hp=Fe&&Fe.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(Fe,"__esModule",{value:!0});Fe.useSQL=void 0;var M1=require("react/jsx-runtime"),i1=require("@raycast/api"),W7=require("node:fs"),v2=require("node:fs/promises"),e6=Hp(require("node:os")),Xd=Hp(require("node:child_process")),Qd=Hp(require("node:path")),g2=require("react"),Y7=Ce(),X7=I1(),w2=c2(),Q7=ma(),en=le();function an(e,a,p){let{permissionPriming:t,...d}=p||{},[r,i]=(0,g2.useState)(),n=(0,X7.useLatest)(p||{}),s=(0,g2.useRef)(),l=(0,g2.useCallback)(m=>{console.error(m);let c=m instanceof Error&&m.message.includes("authorization denied")?new $p("You do not have permission to access the database."):m;pn(c)?i((0,M1.jsx)(tn,{priming:n.current.permissionPriming})):n.current.onError?n.current.onError(c):i1.environment.launchType!==i1.LaunchType.Background&&(0,Q7.showFailureToast)(c,{title:"Cannot query the data"})},[n]),o=(0,g2.useMemo)(()=>{if(!(0,W7.existsSync)(e))throw new Error("The database does not exist");let m;return async(c,v)=>{let f=s.current?.signal,h=Xd.default.spawn("sqlite3",["--json","--readonly",c,v],{signal:f}),g=(0,w2.getSpawnedPromise)(h),[{error:_,exitCode:w,signal:b},y,N]=await(0,w2.getSpawnedResult)(h,{encoding:"utf-8"},g);if(_2(f),N.match("(5)")||N.match("(14)")){if(!m){let V=Qd.default.join(e6.default.tmpdir(),"useSQL",(0,en.hash)(c));await(0,v2.mkdir)(V,{recursive:!0}),_2(f),m=Qd.default.join(V,"db.db"),await(0,v2.copyFile)(c,m),await(0,v2.writeFile)(m+"-shm",""),await(0,v2.writeFile)(m+"-wal",""),_2(f)}let D=Xd.default.spawn("sqlite3",["--json","--readonly","--vfs","unix-none",m,v],{signal:f}),R=(0,w2.getSpawnedPromise)(D);[{error:_,exitCode:w,signal:b},y,N]=await(0,w2.getSpawnedResult)(D,{encoding:"utf-8"},R),_2(f)}if(_||w!==0||b!==null)throw new Error(N);return JSON.parse(y.trim()||"[]")}},[e]);return{...(0,Y7.usePromise)(o,[e,a],{...d,onError:l}),permissionView:r}}Fe.useSQL=an;var $p=class extends Error{constructor(a){super(a),this.name="PermissionError"}};function pn(e){return e instanceof Error&&e.name==="PermissionError"}var a6=parseInt(e6.default.release().split(".")[0])>=22,Up=a6?"Settings":"Preferences";function tn(e){let a=a6?{title:"Open System Settings -> Privacy",target:"x-apple.systempreferences:com.apple.preference.security?Privacy_AllFiles"}:{title:"Open System Preferences -> Security",target:"x-apple.systempreferences:com.apple.preference.security?Privacy_AllFiles"};return i1.environment.commandMode==="menu-bar"?(0,M1.jsxs)(i1.MenuBarExtra,{icon:i1.Icon.Warning,title:i1.environment.commandName,children:[(0,M1.jsx)(i1.MenuBarExtra.Item,{title:"Raycast needs full disk access",tooltip:`You can revert this access in ${Up} whenever you want`}),e.priming?(0,M1.jsx)(i1.MenuBarExtra.Item,{title:e.priming,tooltip:`You can revert this access in ${Up} whenever you want`}):null,(0,M1.jsx)(i1.MenuBarExtra.Separator,{}),(0,M1.jsx)(i1.MenuBarExtra.Item,{title:a.title,onAction:()=>(0,i1.open)(a.target)})]}):(0,M1.jsx)(i1.List,{children:(0,M1.jsx)(i1.List.EmptyView,{icon:{source:{light:"https://raycast.com/uploads/extensions-utils-security-permissions-light.png",dark:"https://raycast.com/uploads/extensions-utils-security-permissions-dark.png"}},title:"Raycast needs full disk access.",description:`${e.priming?e.priming+`
`:""}You can revert this access in ${Up} whenever you want.`,actions:(0,M1.jsx)(i1.ActionPanel,{children:(0,M1.jsx)(i1.Action.Open,{...a})})})})}function _2(e){if(e?.aborted){let a=new Error("aborted");throw a.name="AbortError",a}}});var d6=u(Be=>{"use strict";Object.defineProperty(Be,"__esModule",{value:!0});Be.useForm=Be.FormValidation=void 0;var U1=require("react"),t6=I1(),Kp;(function(e){e.Required="required"})(Kp||(Be.FormValidation=Kp={}));function Gp(e,a){if(e){if(typeof e=="function")return e(a);if(e===Kp.Required){let p=typeof a<"u"&&a!==null;if(p)switch(typeof a){case"string":p=a.length>0;break;case"object":Array.isArray(a)?p=a.length>0:a instanceof Date&&(p=a.getTime()>0);break;default:break}if(!p)return"The item is required"}}}function dn(e){let{onSubmit:a,validation:p,initialValues:t={}}=e,[d,r]=(0,U1.useState)(t),[i,n]=(0,U1.useState)({}),s=(0,U1.useRef)({}),l=(0,t6.useLatest)(p||{}),o=(0,t6.useLatest)(a),m=(0,U1.useCallback)(_=>{s.current[_]?.focus()},[s]),c=(0,U1.useCallback)(async _=>{let w=!1;for(let[y,N]of Object.entries(l.current)){let D=Gp(N,_[y]);D&&(w||(w={},m(y)),w[y]=D)}if(w)return n(w),!1;let b=await o.current(_);return typeof b=="boolean"?b:!0},[l,o,m]),v=(0,U1.useCallback)((_,w)=>{n(b=>({...b,[_]:w}))},[n]),f=(0,U1.useCallback)(function(_,w){r(b=>({...b,[_]:typeof w=="function"?w(b[_]):w}))},[r]),h=(0,U1.useMemo)(()=>new Proxy({},{get(_,w){let b=l.current[w],y=d[w];return{onChange(N){i[w]&&(Gp(b,N)||v(w,void 0)),f(w,N)},onBlur(N){let D=Gp(b,N.target.value);D&&v(w,D)},error:i[w],id:w,value:typeof y>"u"?null:y,ref:N=>{s.current[w]=N}}}}),[i,l,v,d,s,f]),g=(0,U1.useCallback)(_=>{n({}),Object.entries(s.current).forEach(([w,b])=>{_?.[w]||b?.reset()}),_&&r(_)},[r,n,s]);return{handleSubmit:c,setValidationError:v,setValue:f,values:d,itemProps:h,focus:m,reset:g}}Be.useForm=dn});var i6=u(b2=>{"use strict";Object.defineProperty(b2,"__esModule",{value:!0});b2.useAI=void 0;var r6=require("react"),rn=require("@raycast/api"),sn=Ce();function nn(e,a={}){let{creativity:p,stream:t,model:d,...r}=a,[i,n]=(0,r6.useState)(""),s=(0,r6.useRef)(),{isLoading:l,error:o,revalidate:m}=(0,sn.usePromise)(async(c,v,f)=>{n("");let h=rn.AI.ask(c,{creativity:v,model:d,signal:s.current?.signal});f===!1?n(await h):(h.on("data",g=>{n(_=>_+g)}),await h)},[e,p,t],{...r,abortable:s});return{isLoading:l,data:i,error:o,revalidate:m}}b2.useAI=nn});var l6=u(y2=>{"use strict";Object.defineProperty(y2,"__esModule",{value:!0});y2.useFrecencySorting=void 0;var Jp=require("react"),s6=I1(),ln=Xa(),mn=10,n6=24*60*60*1e3,on=Math.log(2)/(mn*n6),un={Default:100,Embed:0,Bookmark:140};function cn(e){let a=Date.now(),p=e?e.lastVisited:0,t=e?e.frecency:0,d=(a-p)/n6,r=un.Default*Math.exp(-on*d),i=t+r;return{lastVisited:a,frecency:i}}var fn=e=>{if(process.env.NODE_ENV!=="production"&&(typeof e!="object"||!e||!("id"in e)||typeof e.id!="string"))throw new Error("Specify a key function or make sure your items have an 'id' property");return e.id};function hn(e,a){let p=(0,s6.useLatest)(a?.key||fn),t=(0,s6.useLatest)(a?.sortUnvisited),[d,r]=(0,ln.useCachedState)(`raycast_frecency_${a?.namespace}`,{}),i=(0,Jp.useCallback)(async function(o){let m=p.current(o);r(c=>{let v=c[m],f=cn(v);return{...c,[m]:f}})},[p,r]),n=(0,Jp.useCallback)(async function(o){let m=p.current(o);r(c=>{let v={...c};return delete v[m],v})},[p,r]);return{data:(0,Jp.useMemo)(()=>e?e.sort((l,o)=>{let m=d[p.current(l)],c=d[p.current(o)];return m&&!c?-1:!m&&c?1:m&&c?c.frecency-m.frecency:t.current?t.current(l,o):0}):[],[d,e,p,t]),visitItem:i,resetRanking:n}}y2.useFrecencySorting=hn});var u6=u(S2=>{"use strict";Object.defineProperty(S2,"__esModule",{value:!0});S2.useLocalStorage=void 0;var Zp=require("@raycast/api"),m6=ma(),o6=le(),vn=Ce();function gn(e,a){let{data:p,isLoading:t,mutate:d}=(0,vn.usePromise)(async n=>{let s=await Zp.LocalStorage.getItem(n);return typeof s<"u"?JSON.parse(s,o6.reviver):a},[e]);async function r(n){try{await d(Zp.LocalStorage.setItem(e,JSON.stringify(n,o6.replacer)),{optimisticUpdate(s){return s}})}catch(s){await(0,m6.showFailureToast)(s,{title:"Failed to set value in local storage"})}}async function i(){try{await d(Zp.LocalStorage.removeItem(e),{optimisticUpdate(){}})}catch(n){await(0,m6.showFailureToast)(n,{title:"Failed to remove value from local storage"})}}return{value:p,setValue:r,removeValue:i,isLoading:t}}S2.useLocalStorage=gn});var g6=u(je=>{"use strict";Object.defineProperty(je,"__esModule",{value:!0});je.slightlyLighterColor=je.slightlyDarkerColor=void 0;function wn(e){let a=0,p=0,t=0;if(e.length===4)a=parseInt(`${e[1]}${e[1]}`,16),p=parseInt(`${e[2]}${e[2]}`,16),t=parseInt(`${e[3]}${e[3]}`,16);else if(e.length===7)a=parseInt(`${e[1]}${e[2]}`,16),p=parseInt(`${e[3]}${e[4]}`,16),t=parseInt(`${e[5]}${e[6]}`,16);else throw new Error(`Malformed hex color: ${e}`);return{r:a,g:p,b:t}}function _n({r:e,g:a,b:p}){let t=e.toString(16),d=a.toString(16),r=p.toString(16);return t.length===1&&(t=`0${t}`),d.length===1&&(d=`0${d}`),r.length===1&&(r=`0${r}`),`#${t}${d}${r}`}function bn({r:e,g:a,b:p}){e/=255,a/=255,p/=255;let t=Math.min(e,a,p),d=Math.max(e,a,p),r=d-t,i=0,n=0,s=0;return r===0?i=0:d===e?i=(a-p)/r%6:d===a?i=(p-e)/r+2:i=(e-a)/r+4,i=Math.round(i*60),i<0&&(i+=360),s=(d+t)/2,n=r===0?0:r/(1-Math.abs(2*s-1)),n=+(n*100).toFixed(1),s=+(s*100).toFixed(1),{h:i,s:n,l:s}}function yn({h:e,s:a,l:p}){a/=100,p/=100;let t=(1-Math.abs(2*p-1))*a,d=t*(1-Math.abs(e/60%2-1)),r=p-t/2,i=0,n=0,s=0;return e>=0&&e<60?(i=t,n=d,s=0):e>=60&&e<120?(i=d,n=t,s=0):e>=120&&e<180?(i=0,n=t,s=d):e>=180&&e<240?(i=0,n=d,s=t):e>=240&&e<300?(i=d,n=0,s=t):e>=300&&e<360&&(i=t,n=0,s=d),i=Math.round((i+r)*255),n=Math.round((n+r)*255),s=Math.round((s+r)*255),{r:i,g:n,b:s}}function c6(e){return bn(wn(e))}function f6(e){return _n(yn(e))}function h6(e,a,p){return a<p?e<a?a:e>p?p:e:e<p?p:e>a?a:e}var v6=12;function Sn(e){let a=c6(e);return f6({h:a.h,s:a.s,l:h6(a.l-v6,0,100)})}je.slightlyDarkerColor=Sn;function Nn(e){let a=c6(e);return f6({h:a.h,s:a.s,l:h6(a.l+v6,0,100)})}je.slightlyLighterColor=Nn});var b6=u(N2=>{"use strict";Object.defineProperty(N2,"__esModule",{value:!0});N2.getAvatarIcon=void 0;var w6=g6();function ze(e,a){let p=e.charCodeAt(a);if(Number.isNaN(p))return["",a];if(p<55296||p>57343)return[e.charAt(a),a];if(55296<=p&&p<=56319){if(e.length<=a+1)throw new Error("High surrogate without following low surrogate");let d=e.charCodeAt(a+1);if(56320>d||d>57343)throw new Error("High surrogate without following low surrogate");return[e.charAt(a)+e.charAt(a+1),a+1]}if(a===0)throw new Error("Low surrogate without preceding high surrogate");let t=e.charCodeAt(a-1);if(55296>t||t>56319)throw new Error("Low surrogate without preceding high surrogate");return[e.charAt(a+1),a+1]}var _6=["#DC829A","#D64854","#D47600","#D36CDD","#52A9E4","#7871E8","#70920F","#43B93A","#EB6B3E","#26B795","#D85A9B","#A067DC","#BD9500","#5385D9"];function Tn(e,a){let p=e.trim().split(" "),t;if(p.length==1&&ze(p[0],0)[0])t=ze(p[0],0)[0];else if(p.length>1){let s=ze(p[0],0)[0]||"",l=ze(p[p.length-1],0)[0]??"";t=s+l}else t="";let d;if(a?.background)d=a?.background;else{let s=0,[l,o]=ze(t,0);for(;l;)s+=l.charCodeAt(0),[l,o]=ze(t,o+1);let m=s%_6.length;d=_6[m]}let i=50-0;return`data:image/svg+xml,${`<svg width="100px" height="100px">
  ${a?.gradient!==!1?`<defs>
      <linearGradient id="Gradient" x1="0.25" x2="0.75" y1="0" y2="1">
        <stop offset="0%" stop-color="${(0,w6.slightlyLighterColor)(d)}"/>
        <stop offset="50%" stop-color="${d}"/>
        <stop offset="100%" stop-color="${(0,w6.slightlyDarkerColor)(d)}"/>
      </linearGradient>
  </defs>`:""}
      <circle cx="50" cy="50" r="${i}" fill="${a?.gradient!==!1?"url(#Gradient)":d}" />
      ${t?`<text x="50" y="80" font-size="${i-1}" font-family="Inter, sans-serif" text-anchor="middle" fill="white">${t.toUpperCase()}</text>`:""}
    </svg>
  `.replaceAll(`
`,"")}`}N2.getAvatarIcon=Tn});var S6=u(T2=>{"use strict";Object.defineProperty(T2,"__esModule",{value:!0});T2.getFavicon=void 0;var y6=require("@raycast/api"),xn=require("url");function Dn(e,a){try{let t=(typeof e=="string"?new xn.URL(e):e).hostname;return{source:`https://www.google.com/s2/favicons?sz=${a?.size??64}&domain=${t}`,fallback:a?.fallback??y6.Icon.Link,mask:a?.mask}}catch(p){return console.error(p),y6.Icon.Link}}T2.getFavicon=Dn});var x6=u(x2=>{"use strict";Object.defineProperty(x2,"__esModule",{value:!0});x2.getProgressIcon=void 0;var N6=require("@raycast/api");function T6(e,a,p,t){let d=(t-90)*Math.PI/180;return{x:e+p*Math.cos(d),y:a+p*Math.sin(d)}}function Cn(e,a,p,t,d){let r=T6(e,a,p,d),i=T6(e,a,p,t),n=d-t<=180?"0":"1";return["M",r.x,r.y,"A",p,p,0,n,0,i.x,i.y].join(" ")}function An(e,a=N6.Color.Red,p){let t=p?.background||(N6.environment.appearance==="light"?"black":"white"),d=p?.backgroundOpacity||.1,r=10,n=50-5-r/2;return`data:image/svg+xml,${`<svg width="100px" height="100px">
      <circle cx="50" cy="50" r="${n}" stroke-width="${r}" stroke="${e<1?t:a}" opacity="${e<1?d:"1"}" fill="none" />
      ${e>0&&e<1?`<path d="${Cn(50,50,n,0,e*360)}" stroke="${a}" stroke-width="${r}" fill="none" />`:""}
    </svg>
  `.replaceAll(`
`,"")}`}x2.getProgressIcon=An});var D6=u($1=>{"use strict";var Vn=$1&&$1.__createBinding||(Object.create?function(e,a,p,t){t===void 0&&(t=p);var d=Object.getOwnPropertyDescriptor(a,p);(!d||("get"in d?!a.__esModule:d.writable||d.configurable))&&(d={enumerable:!0,get:function(){return a[p]}}),Object.defineProperty(e,t,d)}:function(e,a,p,t){t===void 0&&(t=p),e[t]=a[p]}),Wp=$1&&$1.__exportStar||function(e,a){for(var p in e)p!=="default"&&!Object.prototype.hasOwnProperty.call(a,p)&&Vn(a,e,p)};Object.defineProperty($1,"__esModule",{value:!0});Wp(b6(),$1);Wp(S6(),$1);Wp(x6(),$1)});var C6=u(p1=>{"use strict";Object.defineProperty(p1,"__esModule",{value:!0});p1.zoomService=p1.slackService=p1.linearService=p1.jiraService=p1.googleService=p1.githubService=p1.asanaService=void 0;var s1=require("@raycast/api"),ge=Yp(),D2={asana:"1191201745684312",github:"7235fe8d42157f1f38c0",linear:"c8ff37b9225c3c9aefd7d66ea0e5b6f1",slack:"851756884692.5546927290212"},Q1=e=>`data:image/svg+xml,${e}`,we={asana:Q1('<svg xmlns="http://www.w3.org/2000/svg" width="251" height="232" fill="none"><path fill="#F06A6A" d="M179.383 54.373c0 30.017-24.337 54.374-54.354 54.374-30.035 0-54.373-24.338-54.373-54.374C70.656 24.338 94.993 0 125.029 0c30.017 0 54.354 24.338 54.354 54.373ZM54.393 122.33C24.376 122.33.02 146.668.02 176.685c0 30.017 24.337 54.373 54.373 54.373 30.035 0 54.373-24.338 54.373-54.373 0-30.017-24.338-54.355-54.373-54.355Zm141.253 0c-30.035 0-54.373 24.338-54.373 54.374 0 30.035 24.338 54.373 54.373 54.373 30.017 0 54.374-24.338 54.374-54.373 0-30.036-24.338-54.374-54.374-54.374Z"/></svg>'),github:{source:Q1('<svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>'),tintColor:s1.Color.PrimaryText},google:Q1('<svg xmlns="http://www.w3.org/2000/svg" style="display:block" viewBox="0 0 48 48"><path fill="#EA4335" d="M24 9.5c3.54 0 6.71 1.22 9.21 3.6l6.85-6.85C35.9 2.38 30.47 0 24 0 14.62 0 6.51 5.38 2.56 13.22l7.98 6.19C12.43 13.72 17.74 9.5 24 9.5z"/><path fill="#4285F4" d="M46.98 24.55c0-1.57-.15-3.09-.38-4.55H24v9.02h12.94c-.58 2.96-2.26 5.48-4.78 7.18l7.73 6c4.51-4.18 7.09-10.36 7.09-17.65z"/><path fill="#FBBC05" d="M10.53 28.59c-.48-1.45-.76-2.99-.76-4.59s.27-3.14.76-4.59l-7.98-6.19C.92 16.46 0 20.12 0 24c0 3.88.92 7.54 2.56 10.78l7.97-6.19z"/><path fill="#34A853" d="M24 48c6.48 0 11.93-2.13 15.89-5.81l-7.73-6c-2.15 1.45-4.92 2.3-8.16 2.3-6.26 0-11.57-4.22-13.47-9.91l-7.98 6.19C6.51 42.62 14.62 48 24 48z"/><path fill="none" d="M0 0h48v48H0z"/></svg>'),jira:Q1('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="2361" height="2500" viewBox="2.59 0 214.091 224"><linearGradient id="a" x1="102.4" x2="56.15" y1="218.63" y2="172.39" gradientTransform="matrix(1 0 0 -1 0 264)" gradientUnits="userSpaceOnUse"><stop offset=".18" stop-color="#0052cc"/><stop offset="1" stop-color="#2684ff"/></linearGradient><linearGradient xlink:href="#a" id="b" x1="114.65" x2="160.81" y1="85.77" y2="131.92"/><path fill="#2684ff" d="M214.06 105.73 117.67 9.34 108.33 0 35.77 72.56 2.59 105.73a8.89 8.89 0 0 0 0 12.54l66.29 66.29L108.33 224l72.55-72.56 1.13-1.12 32.05-32a8.87 8.87 0 0 0 0-12.59zm-105.73 39.39L75.21 112l33.12-33.12L141.44 112z"/><path fill="url(#a)" d="M108.33 78.88a55.75 55.75 0 0 1-.24-78.61L35.62 72.71l39.44 39.44z"/><path fill="url(#b)" d="m141.53 111.91-33.2 33.21a55.77 55.77 0 0 1 0 78.86L181 151.35z"/></svg>'),linear:{source:{light:Q1('<svg xmlns="http://www.w3.org/2000/svg" fill="#222326" width="200" height="200" viewBox="0 0 100 100"><path d="M1.22541 61.5228c-.2225-.9485.90748-1.5459 1.59638-.857L39.3342 97.1782c.6889.6889.0915 1.8189-.857 1.5964C20.0515 94.4522 5.54779 79.9485 1.22541 61.5228ZM.00189135 46.8891c-.01764375.2833.08887215.5599.28957165.7606L52.3503 99.7085c.2007.2007.4773.3075.7606.2896 2.3692-.1476 4.6938-.46 6.9624-.9259.7645-.157 1.0301-1.0963.4782-1.6481L2.57595 39.4485c-.55186-.5519-1.49117-.2863-1.648174.4782-.465915 2.2686-.77832 4.5932-.92588465 6.9624ZM4.21093 29.7054c-.16649.3738-.08169.8106.20765 1.1l64.77602 64.776c.2894.2894.7262.3742 1.1.2077 1.7861-.7956 3.5171-1.6927 5.1855-2.684.5521-.328.6373-1.0867.1832-1.5407L8.43566 24.3367c-.45409-.4541-1.21271-.3689-1.54074.1832-.99132 1.6684-1.88843 3.3994-2.68399 5.1855ZM12.6587 18.074c-.3701-.3701-.393-.9637-.0443-1.3541C21.7795 6.45931 35.1114 0 49.9519 0 77.5927 0 100 22.4073 100 50.0481c0 14.8405-6.4593 28.1724-16.7199 37.3375-.3903.3487-.984.3258-1.3542-.0443L12.6587 18.074Z"/></svg>'),dark:Q1('<svg xmlns="http://www.w3.org/2000/svg" fill="#fff" width="200" height="200" viewBox="0 0 100 100"><path d="M1.22541 61.5228c-.2225-.9485.90748-1.5459 1.59638-.857L39.3342 97.1782c.6889.6889.0915 1.8189-.857 1.5964C20.0515 94.4522 5.54779 79.9485 1.22541 61.5228ZM.00189135 46.8891c-.01764375.2833.08887215.5599.28957165.7606L52.3503 99.7085c.2007.2007.4773.3075.7606.2896 2.3692-.1476 4.6938-.46 6.9624-.9259.7645-.157 1.0301-1.0963.4782-1.6481L2.57595 39.4485c-.55186-.5519-1.49117-.2863-1.648174.4782-.465915 2.2686-.77832 4.5932-.92588465 6.9624ZM4.21093 29.7054c-.16649.3738-.08169.8106.20765 1.1l64.77602 64.776c.2894.2894.7262.3742 1.1.2077 1.7861-.7956 3.5171-1.6927 5.1855-2.684.5521-.328.6373-1.0867.1832-1.5407L8.43566 24.3367c-.45409-.4541-1.21271-.3689-1.54074.1832-.99132 1.6684-1.88843 3.3994-2.68399 5.1855ZM12.6587 18.074c-.3701-.3701-.393-.9637-.0443-1.3541C21.7795 6.45931 35.1114 0 49.9519 0 77.5927 0 100 22.4073 100 50.0481c0 14.8405-6.4593 28.1724-16.7199 37.3375-.3903.3487-.984.3258-1.3542-.0443L12.6587 18.074Z" /></svg>')}},slack:Q1('<svg xmlns="http://www.w3.org/2000/svg" viewBox="73 73 124 124"><style>.st0{fill:#e01e5a}.st1{fill:#36c5f0}.st2{fill:#2eb67d}.st3{fill:#ecb22e}</style><path d="M99.4 151.2c0 7.1-5.8 12.9-12.9 12.9-7.1 0-12.9-5.8-12.9-12.9 0-7.1 5.8-12.9 12.9-12.9h12.9v12.9zM105.9 151.2c0-7.1 5.8-12.9 12.9-12.9s12.9 5.8 12.9 12.9v32.3c0 7.1-5.8 12.9-12.9 12.9s-12.9-5.8-12.9-12.9v-32.3z" class="st0"/><path d="M118.8 99.4c-7.1 0-12.9-5.8-12.9-12.9 0-7.1 5.8-12.9 12.9-12.9s12.9 5.8 12.9 12.9v12.9h-12.9zM118.8 105.9c7.1 0 12.9 5.8 12.9 12.9s-5.8 12.9-12.9 12.9H86.5c-7.1 0-12.9-5.8-12.9-12.9s5.8-12.9 12.9-12.9h32.3z" class="st1"/><path d="M170.6 118.8c0-7.1 5.8-12.9 12.9-12.9 7.1 0 12.9 5.8 12.9 12.9s-5.8 12.9-12.9 12.9h-12.9v-12.9zM164.1 118.8c0 7.1-5.8 12.9-12.9 12.9-7.1 0-12.9-5.8-12.9-12.9V86.5c0-7.1 5.8-12.9 12.9-12.9 7.1 0 12.9 5.8 12.9 12.9v32.3z" class="st2"/><path d="M151.2 170.6c7.1 0 12.9 5.8 12.9 12.9 0 7.1-5.8 12.9-12.9 12.9-7.1 0-12.9-5.8-12.9-12.9v-12.9h12.9zM151.2 164.1c-7.1 0-12.9-5.8-12.9-12.9 0-7.1 5.8-12.9 12.9-12.9h32.3c7.1 0 12.9 5.8 12.9 12.9 0 7.1-5.8 12.9-12.9 12.9h-32.3z" class="st3"/></svg>'),zoom:Q1('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 351.845 80"><path d="M73.786 78.835H10.88A10.842 10.842 0 0 1 .833 72.122a10.841 10.841 0 0 1 2.357-11.85L46.764 16.7h-31.23C6.954 16.699 0 9.744 0 1.165h58.014c4.414 0 8.357 2.634 10.046 6.712a10.843 10.843 0 0 1-2.356 11.85L22.13 63.302h36.122c8.58 0 15.534 6.955 15.534 15.534Zm278.059-48.544C351.845 13.588 338.256 0 321.553 0c-8.934 0-16.975 3.89-22.524 10.063C293.48 3.89 285.44 0 276.505 0c-16.703 0-30.291 13.588-30.291 30.291v48.544c8.579 0 15.534-6.955 15.534-15.534v-33.01c0-8.137 6.62-14.757 14.757-14.757s14.757 6.62 14.757 14.757v33.01c0 8.58 6.955 15.534 15.534 15.534V30.291c0-8.137 6.62-14.757 14.757-14.757s14.758 6.62 14.758 14.757v33.01c0 8.58 6.954 15.534 15.534 15.534V30.291ZM238.447 40c0 22.091-17.909 40-40 40s-40-17.909-40-40 17.908-40 40-40 40 17.909 40 40Zm-15.534 0c0-13.512-10.954-24.466-24.466-24.466S173.98 26.488 173.98 40s10.953 24.466 24.466 24.466S222.913 53.512 222.913 40Zm-70.68 0c0 22.091-17.909 40-40 40s-40-17.909-40-40 17.909-40 40-40 40 17.909 40 40Zm-15.534 0c0-13.512-10.954-24.466-24.466-24.466S87.767 26.488 87.767 40s10.954 24.466 24.466 24.466S136.699 53.512 136.699 40Z" style="fill:#0b5cff"/></svg>')},En=e=>new ge.OAuthService({client:new s1.OAuth.PKCEClient({redirectMethod:s1.OAuth.RedirectMethod.Web,providerName:"Asana",providerIcon:we.asana,providerId:"asana",description:"Connect your Asana account"}),clientId:e.clientId??D2.asana,authorizeUrl:e.authorizeUrl??"https://asana.oauth.raycast.com/authorize",tokenUrl:e.tokenUrl??"https://asana.oauth.raycast.com/token",refreshTokenUrl:e.refreshTokenUrl??"https://asana.oauth.raycast.com/refresh-token",scope:e.scope,personalAccessToken:e.personalAccessToken,onAuthorize:e.onAuthorize,bodyEncoding:e.bodyEncoding,tokenRefreshResponseParser:e.tokenRefreshResponseParser,tokenResponseParser:e.tokenResponseParser});p1.asanaService=En;var Pn=e=>new ge.OAuthService({client:new s1.OAuth.PKCEClient({redirectMethod:s1.OAuth.RedirectMethod.Web,providerName:"GitHub",providerIcon:we.github,providerId:"github",description:"Connect your GitHub account"}),clientId:e.clientId??D2.github,authorizeUrl:e.authorizeUrl??"https://github.oauth.raycast.com/authorize",tokenUrl:e.tokenUrl??"https://github.oauth.raycast.com/token",refreshTokenUrl:e.refreshTokenUrl??"https://github.oauth.raycast.com/refresh-token",scope:e.scope,personalAccessToken:e.personalAccessToken,onAuthorize:e.onAuthorize,bodyEncoding:e.bodyEncoding,tokenRefreshResponseParser:e.tokenRefreshResponseParser,tokenResponseParser:e.tokenResponseParser});p1.githubService=Pn;var Mn=e=>new ge.OAuthService({client:new s1.OAuth.PKCEClient({redirectMethod:s1.OAuth.RedirectMethod.AppURI,providerName:"Google",providerIcon:we.google,providerId:"google",description:"Connect your Google account"}),clientId:e.clientId,authorizeUrl:e.authorizeUrl??"https://accounts.google.com/o/oauth2/v2/auth",tokenUrl:e.tokenUrl??"https://oauth2.googleapis.com/token",refreshTokenUrl:e.tokenUrl,scope:e.scope,personalAccessToken:e.personalAccessToken,bodyEncoding:e.bodyEncoding??"url-encoded",onAuthorize:e.onAuthorize,tokenRefreshResponseParser:e.tokenRefreshResponseParser,tokenResponseParser:e.tokenResponseParser});p1.googleService=Mn;var kn=e=>new ge.OAuthService({client:new s1.OAuth.PKCEClient({redirectMethod:s1.OAuth.RedirectMethod.Web,providerName:"Jira",providerIcon:we.jira,providerId:"jira",description:"Connect your Jira account"}),clientId:e.clientId,authorizeUrl:e.authorizeUrl??"https://auth.atlassian.com/authorize",tokenUrl:e.tokenUrl??"https://auth.atlassian.com/oauth/token",refreshTokenUrl:e.refreshTokenUrl,scope:e.scope,personalAccessToken:e.personalAccessToken,onAuthorize:e.onAuthorize,bodyEncoding:e.bodyEncoding,tokenRefreshResponseParser:e.tokenRefreshResponseParser,tokenResponseParser:e.tokenResponseParser});p1.jiraService=kn;var On=e=>new ge.OAuthService({client:new s1.OAuth.PKCEClient({redirectMethod:s1.OAuth.RedirectMethod.Web,providerName:"Linear",providerIcon:we.linear,providerId:"linear",description:"Connect your Linear account"}),clientId:e.clientId??D2.linear,authorizeUrl:e.authorizeUrl??"https://linear.oauth.raycast.com/authorize",tokenUrl:e.tokenUrl??"https://linear.oauth.raycast.com/token",refreshTokenUrl:e.refreshTokenUrl??"https://linear.oauth.raycast.com/refresh-token",scope:e.scope,extraParameters:{actor:"user"},onAuthorize:e.onAuthorize,bodyEncoding:e.bodyEncoding,tokenRefreshResponseParser:e.tokenRefreshResponseParser,tokenResponseParser:e.tokenResponseParser});p1.linearService=On;var Rn=e=>new ge.OAuthService({client:new s1.OAuth.PKCEClient({redirectMethod:s1.OAuth.RedirectMethod.Web,providerName:"Slack",providerIcon:we.slack,providerId:"slack",description:"Connect your Slack account"}),clientId:e.clientId??D2.slack,authorizeUrl:e.authorizeUrl??"https://slack.oauth.raycast.com/authorize",tokenUrl:e.tokenUrl??"https://slack.oauth.raycast.com/token",refreshTokenUrl:e.tokenUrl??"https://slack.oauth.raycast.com/refresh-token",scope:"",extraParameters:{user_scope:e.scope},personalAccessToken:e.personalAccessToken,bodyEncoding:e.tokenUrl?e.bodyEncoding??"url-encoded":"json",onAuthorize:e.onAuthorize,tokenRefreshResponseParser:e.tokenRefreshResponseParser,tokenResponseParser:e.tokenResponseParser??(a=>({access_token:a.authed_user.access_token,scope:a.authed_user.scope}))});p1.slackService=Rn;var qn=e=>new ge.OAuthService({client:new s1.OAuth.PKCEClient({redirectMethod:s1.OAuth.RedirectMethod.Web,providerName:"Zoom",providerIcon:we.zoom,providerId:"zoom",description:"Connect your Zoom account"}),clientId:e.clientId,authorizeUrl:e.authorizeUrl??"https://zoom.us/oauth/authorize",tokenUrl:e.tokenUrl??"https://zoom.us/oauth/token",refreshTokenUrl:e.refreshTokenUrl,scope:e.scope,personalAccessToken:e.personalAccessToken,bodyEncoding:e.bodyEncoding??"url-encoded",onAuthorize:e.onAuthorize,tokenRefreshResponseParser:e.tokenRefreshResponseParser,tokenResponseParser:e.tokenResponseParser});p1.zoomService=qn});var Yp=u(Ue=>{"use strict";var Ln=Ue&&Ue.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(Ue,"__esModule",{value:!0});Ue.OAuthService=void 0;var A6=Ln(i2()),_e=C6(),k1=class{constructor(a){this.clientId=a.clientId,this.scope=Array.isArray(a.scope)?a.scope.join(" "):a.scope,this.personalAccessToken=a.personalAccessToken,this.bodyEncoding=a.bodyEncoding,this.client=a.client,this.extraParameters=a.extraParameters,this.authorizeUrl=a.authorizeUrl,this.tokenUrl=a.tokenUrl,this.refreshTokenUrl=a.refreshTokenUrl,this.onAuthorize=a.onAuthorize,this.tokenResponseParser=a.tokenResponseParser??(p=>p),this.tokenRefreshResponseParser=a.tokenRefreshResponseParser??(p=>p),this.authorize=this.authorize.bind(this)}async authorize(){let a=await this.client.getTokens();if(a?.accessToken){if(a.refreshToken&&a.isExpired()){let r=await this.refreshTokens({token:a.refreshToken});if(r)return await this.client.setTokens(r),r.access_token}return a.accessToken}let p=await this.client.authorizationRequest({endpoint:this.authorizeUrl,clientId:this.clientId,scope:this.scope,extraParameters:this.extraParameters}),{authorizationCode:t}=await this.client.authorize(p),d=await this.fetchTokens({authRequest:p,authorizationCode:t});return await this.client.setTokens(d),d.access_token}async fetchTokens({authRequest:a,authorizationCode:p}){let t;if(this.bodyEncoding==="url-encoded"){let i=new URLSearchParams;i.append("client_id",this.clientId),i.append("code",p),i.append("code_verifier",a.codeVerifier),i.append("grant_type","authorization_code"),i.append("redirect_uri",a.redirectURI),t={body:i}}else t={body:JSON.stringify({client_id:this.clientId,code:p,code_verifier:a.codeVerifier,grant_type:"authorization_code",redirect_uri:a.redirectURI}),headers:{"Content-Type":"application/json"}};let d=await(0,A6.default)(this.tokenUrl,{method:"POST",...t});if(!d.ok){let i=await d.text();throw console.error("fetch tokens error:",i),new Error(`Error while fetching tokens: ${d.status} (${d.statusText})
${i}`)}let r=this.tokenResponseParser(await d.json());return Array.isArray(r.scope)?{...r,scope:r.scope.join(" ")}:r}async refreshTokens({token:a}){let p;if(this.bodyEncoding==="url-encoded"){let d=new URLSearchParams;d.append("client_id",this.clientId),d.append("refresh_token",a),d.append("grant_type","refresh_token"),p={body:d}}else p={body:JSON.stringify({client_id:this.clientId,refresh_token:a,grant_type:"refresh_token"}),headers:{"Content-Type":"application/json"}};let t=await(0,A6.default)(this.refreshTokenUrl??this.tokenUrl,{method:"POST",...p});if(t.ok){let d=this.tokenRefreshResponseParser(await t.json());return d.refresh_token=d.refresh_token??a,d}else{let d=await t.text();console.error("refresh tokens error:",d),this.client.description=`${this.client.providerName} needs you to sign-in again. Press \u23CE or click the button below to continue.`,await this.client.removeTokens(),await this.authorize()}}};Ue.OAuthService=k1;k1.asana=_e.asanaService;k1.github=_e.githubService;k1.google=_e.googleService;k1.jira=_e.jiraService;k1.linear=_e.linearService;k1.slack=_e.slackService;k1.zoom=_e.zoomService});var V6=u($e=>{"use strict";Object.defineProperty($e,"__esModule",{value:!0});$e.getAccessToken=$e.withAccessToken=void 0;var In=require("react/jsx-runtime"),Fn=require("@raycast/api"),ee=null,be=null,Xp=null,Qp=null,e0=null;function Bn(e){return Fn.environment.commandMode==="no-view"?a=>async t=>{if(!ee){ee=e.personalAccessToken??await e.authorize(),be=e.personalAccessToken?"personal":"oauth";let d=(await e.client?.getTokens())?.idToken;e.onAuthorize&&await Promise.resolve(e.onAuthorize({token:ee,type:be,idToken:d}))}return a(t)}:a=>{let p=t=>{e.personalAccessToken?(ee=e.personalAccessToken,be="personal"):(Xp||(Xp=a0(e.authorize())),ee=Xp.read(),be="oauth");let d;return e.client&&(Qp||(Qp=a0(e.client.getTokens())),d=Qp.read()?.idToken),!e0&&e.onAuthorize&&(e0=a0(Promise.resolve(e.onAuthorize({token:ee,type:be,idToken:d})))),e0?.read(),(0,In.jsx)(a,{...t})};return p.displayName=`withAccessToken(${a.displayName||a.name})`,p}}$e.withAccessToken=Bn;function jn(){if(!ee||!be)throw new Error("getAccessToken must be used when authenticated (eg. used inside `withAccessToken`)");return{token:ee,type:be}}$e.getAccessToken=jn;function a0(e){let a="pending",p,t=e.then(r=>{a="success",p=r},r=>{a="error",p=r});return{read:()=>{switch(a){case"pending":throw t;case"error":throw p;default:return p}}}}});var P6=u(ae=>{"use strict";var zn=ae&&ae.__createBinding||(Object.create?function(e,a,p,t){t===void 0&&(t=p);var d=Object.getOwnPropertyDescriptor(a,p);(!d||("get"in d?!a.__esModule:d.writable||d.configurable))&&(d={enumerable:!0,get:function(){return a[p]}}),Object.defineProperty(e,t,d)}:function(e,a,p,t){t===void 0&&(t=p),e[t]=a[p]}),E6=ae&&ae.__exportStar||function(e,a){for(var p in e)p!=="default"&&!Object.prototype.hasOwnProperty.call(a,p)&&zn(a,e,p)};Object.defineProperty(ae,"__esModule",{value:!0});E6(Yp(),ae);E6(V6(),ae)});var M6=u(He=>{"use strict";var Un=He&&He.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(He,"__esModule",{value:!0});He.runAppleScript=void 0;var $n=Un(require("node:child_process")),Ca=c2();async function Hn(e,a,p){let{humanReadableOutput:t,language:d,timeout:r,...i}=Array.isArray(a)?p||{}:a||{},n=t!==!1?[]:["-ss"];d==="JavaScript"&&n.push("-l","JavaScript"),Array.isArray(a)&&n.push("-",...a);let s=$n.default.spawn("osascript",n,{...i,env:{PATH:"/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"}}),l=(0,Ca.getSpawnedPromise)(s,{timeout:r||1e4});s.stdin.end(e);let[{error:o,exitCode:m,signal:c,timedOut:v},f,h]=await(0,Ca.getSpawnedResult)(s,{encoding:"utf8"},l),g=(0,Ca.handleOutput)({stripFinalNewline:!0},f),_=(0,Ca.handleOutput)({stripFinalNewline:!0},h);return(0,Ca.defaultParsing)({stdout:g,stderr:_,error:o,exitCode:m,signal:c,timedOut:v,command:"osascript",options:p,parentError:new Error})}He.runAppleScript=Hn});var L6=u(y1=>{"use strict";var k6=y1&&y1.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(y1,"__esModule",{value:!0});y1.createDeeplink=y1.createExtensionDeeplink=y1.createScriptCommandDeeplink=y1.DeeplinkType=void 0;var t0=require("@raycast/api"),Gn=k6(require("node:fs")),Kn=k6(require("node:path")),p0;(function(e){e.ScriptCommand="script-command",e.Extension="extension"})(p0||(y1.DeeplinkType=p0={}));function O6(){return t0.environment.raycastVersion.includes("alpha")?"raycastinternal://":"raycast://"}function Jn(){let e=JSON.parse(Gn.default.readFileSync(Kn.default.join(t0.environment.assetsPath,"..","package.json"),"utf8"));return e.owner||e.author}function R6(e){let a=`${O6()}script-commands/${e.command}`;if(e.arguments){let p="";for(let t of e.arguments)p+="&arguments="+encodeURIComponent(t);a+="?"+p.substring(1)}return a}y1.createScriptCommandDeeplink=R6;function q6(e){let a=Jn(),p=t0.environment.extensionName;"ownerOrAuthorName"in e&&"extensionName"in e&&(a=e.ownerOrAuthorName,p=e.extensionName);let t=`${O6()}extensions/${a}/${p}/${e.command}`,d="";return e.launchType&&(d+="&launchType="+encodeURIComponent(e.launchType)),e.arguments&&(d+="&arguments="+encodeURIComponent(JSON.stringify(e.arguments))),e.context&&(d+="&context="+encodeURIComponent(JSON.stringify(e.context))),e.fallbackText&&(d+="&fallbackText="+encodeURIComponent(e.fallbackText)),d&&(t+="?"+d.substring(1)),t}y1.createExtensionDeeplink=q6;function Zn(e){return e.type===p0.ScriptCommand?R6(e):q6(e)}y1.createDeeplink=Zn});var d0=u(F=>{"use strict";var Wn=F&&F.__createBinding||(Object.create?function(e,a,p,t){t===void 0&&(t=p);var d=Object.getOwnPropertyDescriptor(a,p);(!d||("get"in d?!a.__esModule:d.writable||d.configurable))&&(d={enumerable:!0,get:function(){return a[p]}}),Object.defineProperty(e,t,d)}:function(e,a,p,t){t===void 0&&(t=p),e[t]=a[p]}),t1=F&&F.__exportStar||function(e,a){for(var p in e)p!=="default"&&!Object.prototype.hasOwnProperty.call(a,p)&&Wn(a,e,p)};Object.defineProperty(F,"__esModule",{value:!0});t1(Ce(),F);t1(Xa(),F);t1(fa(),F);t1(gd(),F);t1(Td(),F);t1(Yd(),F);t1(p6(),F);t1(d6(),F);t1(i6(),F);t1(l6(),F);t1(u6(),F);t1(D6(),F);t1(P6(),F);t1(M6(),F);t1(ma(),F);t1(L6(),F)});var _r=u((V_,wr)=>{function Zm(){this.__data__=[],this.size=0}wr.exports=Zm});var M0=u((E_,br)=>{function Wm(e,a){return e===a||e!==e&&a!==a}br.exports=Wm});var qa=u((P_,yr)=>{var Ym=M0();function Xm(e,a){for(var p=e.length;p--;)if(Ym(e[p][0],a))return p;return-1}yr.exports=Xm});var Nr=u((M_,Sr)=>{var Qm=qa(),eo=Array.prototype,ao=eo.splice;function po(e){var a=this.__data__,p=Qm(a,e);if(p<0)return!1;var t=a.length-1;return p==t?a.pop():ao.call(a,p,1),--this.size,!0}Sr.exports=po});var xr=u((k_,Tr)=>{var to=qa();function ro(e){var a=this.__data__,p=to(a,e);return p<0?void 0:a[p][1]}Tr.exports=ro});var Cr=u((O_,Dr)=>{var io=qa();function so(e){return io(this.__data__,e)>-1}Dr.exports=so});var Vr=u((R_,Ar)=>{var no=qa();function lo(e,a){var p=this.__data__,t=no(p,e);return t<0?(++this.size,p.push([e,a])):p[t][1]=a,this}Ar.exports=lo});var La=u((q_,Er)=>{var mo=_r(),oo=Nr(),uo=xr(),co=Cr(),fo=Vr();function ea(e){var a=-1,p=e==null?0:e.length;for(this.clear();++a<p;){var t=e[a];this.set(t[0],t[1])}}ea.prototype.clear=mo;ea.prototype.delete=oo;ea.prototype.get=uo;ea.prototype.has=co;ea.prototype.set=fo;Er.exports=ea});var Mr=u((L_,Pr)=>{var ho=La();function vo(){this.__data__=new ho,this.size=0}Pr.exports=vo});var Or=u((I_,kr)=>{function go(e){var a=this.__data__,p=a.delete(e);return this.size=a.size,p}kr.exports=go});var qr=u((F_,Rr)=>{function wo(e){return this.__data__.get(e)}Rr.exports=wo});var Ir=u((B_,Lr)=>{function _o(e){return this.__data__.has(e)}Lr.exports=_o});var k0=u((j_,Fr)=>{var bo=typeof global=="object"&&global&&global.Object===Object&&global;Fr.exports=bo});var q1=u((z_,Br)=>{var yo=k0(),So=typeof self=="object"&&self&&self.Object===Object&&self,No=yo||So||Function("return this")();Br.exports=No});var Ia=u((U_,jr)=>{var To=q1(),xo=To.Symbol;jr.exports=xo});var Hr=u(($_,$r)=>{var zr=Ia(),Ur=Object.prototype,Do=Ur.hasOwnProperty,Co=Ur.toString,Fa=zr?zr.toStringTag:void 0;function Ao(e){var a=Do.call(e,Fa),p=e[Fa];try{e[Fa]=void 0;var t=!0}catch{}var d=Co.call(e);return t&&(a?e[Fa]=p:delete e[Fa]),d}$r.exports=Ao});var Kr=u((H_,Gr)=>{var Vo=Object.prototype,Eo=Vo.toString;function Po(e){return Eo.call(e)}Gr.exports=Po});var aa=u((G_,Wr)=>{var Jr=Ia(),Mo=Hr(),ko=Kr(),Oo="[object Null]",Ro="[object Undefined]",Zr=Jr?Jr.toStringTag:void 0;function qo(e){return e==null?e===void 0?Ro:Oo:Zr&&Zr in Object(e)?Mo(e):ko(e)}Wr.exports=qo});var $2=u((K_,Yr)=>{function Lo(e){var a=typeof e;return e!=null&&(a=="object"||a=="function")}Yr.exports=Lo});var O0=u((J_,Xr)=>{var Io=aa(),Fo=$2(),Bo="[object AsyncFunction]",jo="[object Function]",zo="[object GeneratorFunction]",Uo="[object Proxy]";function $o(e){if(!Fo(e))return!1;var a=Io(e);return a==jo||a==zo||a==Bo||a==Uo}Xr.exports=$o});var e5=u((Z_,Qr)=>{var Ho=q1(),Go=Ho["__core-js_shared__"];Qr.exports=Go});var t5=u((W_,p5)=>{var R0=e5(),a5=function(){var e=/[^.]+$/.exec(R0&&R0.keys&&R0.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}();function Ko(e){return!!a5&&a5 in e}p5.exports=Ko});var q0=u((Y_,d5)=>{var Jo=Function.prototype,Zo=Jo.toString;function Wo(e){if(e!=null){try{return Zo.call(e)}catch{}try{return e+""}catch{}}return""}d5.exports=Wo});var i5=u((X_,r5)=>{var Yo=O0(),Xo=t5(),Qo=$2(),eu=q0(),au=/[\\^$.*+?()[\]{}|]/g,pu=/^\[object .+?Constructor\]$/,tu=Function.prototype,du=Object.prototype,ru=tu.toString,iu=du.hasOwnProperty,su=RegExp("^"+ru.call(iu).replace(au,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function nu(e){if(!Qo(e)||Xo(e))return!1;var a=Yo(e)?su:pu;return a.test(eu(e))}r5.exports=nu});var n5=u((Q_,s5)=>{function lu(e,a){return e?.[a]}s5.exports=lu});var Ne=u((eb,l5)=>{var mu=i5(),ou=n5();function uu(e,a){var p=ou(e,a);return mu(p)?p:void 0}l5.exports=uu});var H2=u((ab,m5)=>{var cu=Ne(),fu=q1(),hu=cu(fu,"Map");m5.exports=hu});var Ba=u((pb,o5)=>{var vu=Ne(),gu=vu(Object,"create");o5.exports=gu});var f5=u((tb,c5)=>{var u5=Ba();function wu(){this.__data__=u5?u5(null):{},this.size=0}c5.exports=wu});var v5=u((db,h5)=>{function _u(e){var a=this.has(e)&&delete this.__data__[e];return this.size-=a?1:0,a}h5.exports=_u});var w5=u((rb,g5)=>{var bu=Ba(),yu="__lodash_hash_undefined__",Su=Object.prototype,Nu=Su.hasOwnProperty;function Tu(e){var a=this.__data__;if(bu){var p=a[e];return p===yu?void 0:p}return Nu.call(a,e)?a[e]:void 0}g5.exports=Tu});var b5=u((ib,_5)=>{var xu=Ba(),Du=Object.prototype,Cu=Du.hasOwnProperty;function Au(e){var a=this.__data__;return xu?a[e]!==void 0:Cu.call(a,e)}_5.exports=Au});var S5=u((sb,y5)=>{var Vu=Ba(),Eu="__lodash_hash_undefined__";function Pu(e,a){var p=this.__data__;return this.size+=this.has(e)?0:1,p[e]=Vu&&a===void 0?Eu:a,this}y5.exports=Pu});var T5=u((nb,N5)=>{var Mu=f5(),ku=v5(),Ou=w5(),Ru=b5(),qu=S5();function pa(e){var a=-1,p=e==null?0:e.length;for(this.clear();++a<p;){var t=e[a];this.set(t[0],t[1])}}pa.prototype.clear=Mu;pa.prototype.delete=ku;pa.prototype.get=Ou;pa.prototype.has=Ru;pa.prototype.set=qu;N5.exports=pa});var C5=u((lb,D5)=>{var x5=T5(),Lu=La(),Iu=H2();function Fu(){this.size=0,this.__data__={hash:new x5,map:new(Iu||Lu),string:new x5}}D5.exports=Fu});var V5=u((mb,A5)=>{function Bu(e){var a=typeof e;return a=="string"||a=="number"||a=="symbol"||a=="boolean"?e!=="__proto__":e===null}A5.exports=Bu});var ja=u((ob,E5)=>{var ju=V5();function zu(e,a){var p=e.__data__;return ju(a)?p[typeof a=="string"?"string":"hash"]:p.map}E5.exports=zu});var M5=u((ub,P5)=>{var Uu=ja();function $u(e){var a=Uu(this,e).delete(e);return this.size-=a?1:0,a}P5.exports=$u});var O5=u((cb,k5)=>{var Hu=ja();function Gu(e){return Hu(this,e).get(e)}k5.exports=Gu});var q5=u((fb,R5)=>{var Ku=ja();function Ju(e){return Ku(this,e).has(e)}R5.exports=Ju});var I5=u((hb,L5)=>{var Zu=ja();function Wu(e,a){var p=Zu(this,e),t=p.size;return p.set(e,a),this.size+=p.size==t?0:1,this}L5.exports=Wu});var G2=u((vb,F5)=>{var Yu=C5(),Xu=M5(),Qu=O5(),ec=q5(),ac=I5();function ta(e){var a=-1,p=e==null?0:e.length;for(this.clear();++a<p;){var t=e[a];this.set(t[0],t[1])}}ta.prototype.clear=Yu;ta.prototype.delete=Xu;ta.prototype.get=Qu;ta.prototype.has=ec;ta.prototype.set=ac;F5.exports=ta});var j5=u((gb,B5)=>{var pc=La(),tc=H2(),dc=G2(),rc=200;function ic(e,a){var p=this.__data__;if(p instanceof pc){var t=p.__data__;if(!tc||t.length<rc-1)return t.push([e,a]),this.size=++p.size,this;p=this.__data__=new dc(t)}return p.set(e,a),this.size=p.size,this}B5.exports=ic});var L0=u((wb,z5)=>{var sc=La(),nc=Mr(),lc=Or(),mc=qr(),oc=Ir(),uc=j5();function da(e){var a=this.__data__=new sc(e);this.size=a.size}da.prototype.clear=nc;da.prototype.delete=lc;da.prototype.get=mc;da.prototype.has=oc;da.prototype.set=uc;z5.exports=da});var $5=u((_b,U5)=>{var cc="__lodash_hash_undefined__";function fc(e){return this.__data__.set(e,cc),this}U5.exports=fc});var G5=u((bb,H5)=>{function hc(e){return this.__data__.has(e)}H5.exports=hc});var I0=u((yb,K5)=>{var vc=G2(),gc=$5(),wc=G5();function K2(e){var a=-1,p=e==null?0:e.length;for(this.__data__=new vc;++a<p;)this.add(e[a])}K2.prototype.add=K2.prototype.push=gc;K2.prototype.has=wc;K5.exports=K2});var Z5=u((Sb,J5)=>{function _c(e,a){for(var p=-1,t=e==null?0:e.length;++p<t;)if(a(e[p],p,e))return!0;return!1}J5.exports=_c});var F0=u((Nb,W5)=>{function bc(e,a){return e.has(a)}W5.exports=bc});var B0=u((Tb,Y5)=>{var yc=I0(),Sc=Z5(),Nc=F0(),Tc=1,xc=2;function Dc(e,a,p,t,d,r){var i=p&Tc,n=e.length,s=a.length;if(n!=s&&!(i&&s>n))return!1;var l=r.get(e),o=r.get(a);if(l&&o)return l==a&&o==e;var m=-1,c=!0,v=p&xc?new yc:void 0;for(r.set(e,a),r.set(a,e);++m<n;){var f=e[m],h=a[m];if(t)var g=i?t(h,f,m,a,e,r):t(f,h,m,e,a,r);if(g!==void 0){if(g)continue;c=!1;break}if(v){if(!Sc(a,function(_,w){if(!Nc(v,w)&&(f===_||d(f,_,p,t,r)))return v.push(w)})){c=!1;break}}else if(!(f===h||d(f,h,p,t,r))){c=!1;break}}return r.delete(e),r.delete(a),c}Y5.exports=Dc});var Q5=u((xb,X5)=>{var Cc=q1(),Ac=Cc.Uint8Array;X5.exports=Ac});var a9=u((Db,e9)=>{function Vc(e){var a=-1,p=Array(e.size);return e.forEach(function(t,d){p[++a]=[d,t]}),p}e9.exports=Vc});var J2=u((Cb,p9)=>{function Ec(e){var a=-1,p=Array(e.size);return e.forEach(function(t){p[++a]=t}),p}p9.exports=Ec});var s9=u((Ab,i9)=>{var t9=Ia(),d9=Q5(),Pc=M0(),Mc=B0(),kc=a9(),Oc=J2(),Rc=1,qc=2,Lc="[object Boolean]",Ic="[object Date]",Fc="[object Error]",Bc="[object Map]",jc="[object Number]",zc="[object RegExp]",Uc="[object Set]",$c="[object String]",Hc="[object Symbol]",Gc="[object ArrayBuffer]",Kc="[object DataView]",r9=t9?t9.prototype:void 0,j0=r9?r9.valueOf:void 0;function Jc(e,a,p,t,d,r,i){switch(p){case Kc:if(e.byteLength!=a.byteLength||e.byteOffset!=a.byteOffset)return!1;e=e.buffer,a=a.buffer;case Gc:return!(e.byteLength!=a.byteLength||!r(new d9(e),new d9(a)));case Lc:case Ic:case jc:return Pc(+e,+a);case Fc:return e.name==a.name&&e.message==a.message;case zc:case $c:return e==a+"";case Bc:var n=kc;case Uc:var s=t&Rc;if(n||(n=Oc),e.size!=a.size&&!s)return!1;var l=i.get(e);if(l)return l==a;t|=qc,i.set(e,a);var o=Mc(n(e),n(a),t,d,r,i);return i.delete(e),o;case Hc:if(j0)return j0.call(e)==j0.call(a)}return!1}i9.exports=Jc});var l9=u((Vb,n9)=>{function Zc(e,a){for(var p=-1,t=a.length,d=e.length;++p<t;)e[d+p]=a[p];return e}n9.exports=Zc});var G1=u((Eb,m9)=>{var Wc=Array.isArray;m9.exports=Wc});var u9=u((Pb,o9)=>{var Yc=l9(),Xc=G1();function Qc(e,a,p){var t=a(e);return Xc(e)?t:Yc(t,p(e))}o9.exports=Qc});var f9=u((Mb,c9)=>{function ef(e,a){for(var p=-1,t=e==null?0:e.length,d=0,r=[];++p<t;){var i=e[p];a(i,p,e)&&(r[d++]=i)}return r}c9.exports=ef});var v9=u((kb,h9)=>{function af(){return[]}h9.exports=af});var _9=u((Ob,w9)=>{var pf=f9(),tf=v9(),df=Object.prototype,rf=df.propertyIsEnumerable,g9=Object.getOwnPropertySymbols,sf=g9?function(e){return e==null?[]:(e=Object(e),pf(g9(e),function(a){return rf.call(e,a)}))}:tf;w9.exports=sf});var y9=u((Rb,b9)=>{function nf(e,a){for(var p=-1,t=Array(e);++p<e;)t[p]=a(p);return t}b9.exports=nf});var ra=u((qb,S9)=>{function lf(e){return e!=null&&typeof e=="object"}S9.exports=lf});var T9=u((Lb,N9)=>{var mf=aa(),of=ra(),uf="[object Arguments]";function cf(e){return of(e)&&mf(e)==uf}N9.exports=cf});var z0=u((Ib,C9)=>{var x9=T9(),ff=ra(),D9=Object.prototype,hf=D9.hasOwnProperty,vf=D9.propertyIsEnumerable,gf=x9(function(){return arguments}())?x9:function(e){return ff(e)&&hf.call(e,"callee")&&!vf.call(e,"callee")};C9.exports=gf});var V9=u((Fb,A9)=>{function wf(){return!1}A9.exports=wf});var U0=u((za,ia)=>{var _f=q1(),bf=V9(),M9=typeof za=="object"&&za&&!za.nodeType&&za,E9=M9&&typeof ia=="object"&&ia&&!ia.nodeType&&ia,yf=E9&&E9.exports===M9,P9=yf?_f.Buffer:void 0,Sf=P9?P9.isBuffer:void 0,Nf=Sf||bf;ia.exports=Nf});var $0=u((Bb,k9)=>{var Tf=9007199254740991,xf=/^(?:0|[1-9]\d*)$/;function Df(e,a){var p=typeof e;return a=a??Tf,!!a&&(p=="number"||p!="symbol"&&xf.test(e))&&e>-1&&e%1==0&&e<a}k9.exports=Df});var Z2=u((jb,O9)=>{var Cf=9007199254740991;function Af(e){return typeof e=="number"&&e>-1&&e%1==0&&e<=Cf}O9.exports=Af});var q9=u((zb,R9)=>{var Vf=aa(),Ef=Z2(),Pf=ra(),Mf="[object Arguments]",kf="[object Array]",Of="[object Boolean]",Rf="[object Date]",qf="[object Error]",Lf="[object Function]",If="[object Map]",Ff="[object Number]",Bf="[object Object]",jf="[object RegExp]",zf="[object Set]",Uf="[object String]",$f="[object WeakMap]",Hf="[object ArrayBuffer]",Gf="[object DataView]",Kf="[object Float32Array]",Jf="[object Float64Array]",Zf="[object Int8Array]",Wf="[object Int16Array]",Yf="[object Int32Array]",Xf="[object Uint8Array]",Qf="[object Uint8ClampedArray]",eh="[object Uint16Array]",ah="[object Uint32Array]",P={};P[Kf]=P[Jf]=P[Zf]=P[Wf]=P[Yf]=P[Xf]=P[Qf]=P[eh]=P[ah]=!0;P[Mf]=P[kf]=P[Hf]=P[Of]=P[Gf]=P[Rf]=P[qf]=P[Lf]=P[If]=P[Ff]=P[Bf]=P[jf]=P[zf]=P[Uf]=P[$f]=!1;function ph(e){return Pf(e)&&Ef(e.length)&&!!P[Vf(e)]}R9.exports=ph});var I9=u((Ub,L9)=>{function th(e){return function(a){return e(a)}}L9.exports=th});var B9=u((Ua,sa)=>{var dh=k0(),F9=typeof Ua=="object"&&Ua&&!Ua.nodeType&&Ua,$a=F9&&typeof sa=="object"&&sa&&!sa.nodeType&&sa,rh=$a&&$a.exports===F9,H0=rh&&dh.process,ih=function(){try{var e=$a&&$a.require&&$a.require("util").types;return e||H0&&H0.binding&&H0.binding("util")}catch{}}();sa.exports=ih});var G0=u(($b,U9)=>{var sh=q9(),nh=I9(),j9=B9(),z9=j9&&j9.isTypedArray,lh=z9?nh(z9):sh;U9.exports=lh});var H9=u((Hb,$9)=>{var mh=y9(),oh=z0(),uh=G1(),ch=U0(),fh=$0(),hh=G0(),vh=Object.prototype,gh=vh.hasOwnProperty;function wh(e,a){var p=uh(e),t=!p&&oh(e),d=!p&&!t&&ch(e),r=!p&&!t&&!d&&hh(e),i=p||t||d||r,n=i?mh(e.length,String):[],s=n.length;for(var l in e)(a||gh.call(e,l))&&!(i&&(l=="length"||d&&(l=="offset"||l=="parent")||r&&(l=="buffer"||l=="byteLength"||l=="byteOffset")||fh(l,s)))&&n.push(l);return n}$9.exports=wh});var K9=u((Gb,G9)=>{var _h=Object.prototype;function bh(e){var a=e&&e.constructor,p=typeof a=="function"&&a.prototype||_h;return e===p}G9.exports=bh});var Z9=u((Kb,J9)=>{function yh(e,a){return function(p){return e(a(p))}}J9.exports=yh});var Y9=u((Jb,W9)=>{var Sh=Z9(),Nh=Sh(Object.keys,Object);W9.exports=Nh});var Q9=u((Zb,X9)=>{var Th=K9(),xh=Y9(),Dh=Object.prototype,Ch=Dh.hasOwnProperty;function Ah(e){if(!Th(e))return xh(e);var a=[];for(var p in Object(e))Ch.call(e,p)&&p!="constructor"&&a.push(p);return a}X9.exports=Ah});var ai=u((Wb,ei)=>{var Vh=O0(),Eh=Z2();function Ph(e){return e!=null&&Eh(e.length)&&!Vh(e)}ei.exports=Ph});var K0=u((Yb,pi)=>{var Mh=H9(),kh=Q9(),Oh=ai();function Rh(e){return Oh(e)?Mh(e):kh(e)}pi.exports=Rh});var di=u((Xb,ti)=>{var qh=u9(),Lh=_9(),Ih=K0();function Fh(e){return qh(e,Ih,Lh)}ti.exports=Fh});var si=u((Qb,ii)=>{var ri=di(),Bh=1,jh=Object.prototype,zh=jh.hasOwnProperty;function Uh(e,a,p,t,d,r){var i=p&Bh,n=ri(e),s=n.length,l=ri(a),o=l.length;if(s!=o&&!i)return!1;for(var m=s;m--;){var c=n[m];if(!(i?c in a:zh.call(a,c)))return!1}var v=r.get(e),f=r.get(a);if(v&&f)return v==a&&f==e;var h=!0;r.set(e,a),r.set(a,e);for(var g=i;++m<s;){c=n[m];var _=e[c],w=a[c];if(t)var b=i?t(w,_,c,a,e,r):t(_,w,c,e,a,r);if(!(b===void 0?_===w||d(_,w,p,t,r):b)){h=!1;break}g||(g=c=="constructor")}if(h&&!g){var y=e.constructor,N=a.constructor;y!=N&&"constructor"in e&&"constructor"in a&&!(typeof y=="function"&&y instanceof y&&typeof N=="function"&&N instanceof N)&&(h=!1)}return r.delete(e),r.delete(a),h}ii.exports=Uh});var li=u((ey,ni)=>{var $h=Ne(),Hh=q1(),Gh=$h(Hh,"DataView");ni.exports=Gh});var oi=u((ay,mi)=>{var Kh=Ne(),Jh=q1(),Zh=Kh(Jh,"Promise");mi.exports=Zh});var J0=u((py,ui)=>{var Wh=Ne(),Yh=q1(),Xh=Wh(Yh,"Set");ui.exports=Xh});var fi=u((ty,ci)=>{var Qh=Ne(),ev=q1(),av=Qh(ev,"WeakMap");ci.exports=av});var Si=u((dy,yi)=>{var Z0=li(),W0=H2(),Y0=oi(),X0=J0(),Q0=fi(),bi=aa(),na=q0(),hi="[object Map]",pv="[object Object]",vi="[object Promise]",gi="[object Set]",wi="[object WeakMap]",_i="[object DataView]",tv=na(Z0),dv=na(W0),rv=na(Y0),iv=na(X0),sv=na(Q0),Te=bi;(Z0&&Te(new Z0(new ArrayBuffer(1)))!=_i||W0&&Te(new W0)!=hi||Y0&&Te(Y0.resolve())!=vi||X0&&Te(new X0)!=gi||Q0&&Te(new Q0)!=wi)&&(Te=function(e){var a=bi(e),p=a==pv?e.constructor:void 0,t=p?na(p):"";if(t)switch(t){case tv:return _i;case dv:return hi;case rv:return vi;case iv:return gi;case sv:return wi}return a});yi.exports=Te});var Ei=u((ry,Vi)=>{var et=L0(),nv=B0(),lv=s9(),mv=si(),Ni=Si(),Ti=G1(),xi=U0(),ov=G0(),uv=1,Di="[object Arguments]",Ci="[object Array]",W2="[object Object]",cv=Object.prototype,Ai=cv.hasOwnProperty;function fv(e,a,p,t,d,r){var i=Ti(e),n=Ti(a),s=i?Ci:Ni(e),l=n?Ci:Ni(a);s=s==Di?W2:s,l=l==Di?W2:l;var o=s==W2,m=l==W2,c=s==l;if(c&&xi(e)){if(!xi(a))return!1;i=!0,o=!1}if(c&&!o)return r||(r=new et),i||ov(e)?nv(e,a,p,t,d,r):lv(e,a,s,p,t,d,r);if(!(p&uv)){var v=o&&Ai.call(e,"__wrapped__"),f=m&&Ai.call(a,"__wrapped__");if(v||f){var h=v?e.value():e,g=f?a.value():a;return r||(r=new et),d(h,g,p,t,r)}}return c?(r||(r=new et),mv(e,a,p,t,d,r)):!1}Vi.exports=fv});var at=u((iy,ki)=>{var hv=Ei(),Pi=ra();function Mi(e,a,p,t,d){return e===a?!0:e==null||a==null||!Pi(e)&&!Pi(a)?e!==e&&a!==a:hv(e,a,p,t,Mi,d)}ki.exports=Mi});var Ri=u((sy,Oi)=>{var vv=L0(),gv=at(),wv=1,_v=2;function bv(e,a,p,t){var d=p.length,r=d,i=!t;if(e==null)return!r;for(e=Object(e);d--;){var n=p[d];if(i&&n[2]?n[1]!==e[n[0]]:!(n[0]in e))return!1}for(;++d<r;){n=p[d];var s=n[0],l=e[s],o=n[1];if(i&&n[2]){if(l===void 0&&!(s in e))return!1}else{var m=new vv;if(t)var c=t(l,o,s,e,a,m);if(!(c===void 0?gv(o,l,wv|_v,t,m):c))return!1}}return!0}Oi.exports=bv});var pt=u((ny,qi)=>{var yv=$2();function Sv(e){return e===e&&!yv(e)}qi.exports=Sv});var Ii=u((ly,Li)=>{var Nv=pt(),Tv=K0();function xv(e){for(var a=Tv(e),p=a.length;p--;){var t=a[p],d=e[t];a[p]=[t,d,Nv(d)]}return a}Li.exports=xv});var tt=u((my,Fi)=>{function Dv(e,a){return function(p){return p==null?!1:p[e]===a&&(a!==void 0||e in Object(p))}}Fi.exports=Dv});var ji=u((oy,Bi)=>{var Cv=Ri(),Av=Ii(),Vv=tt();function Ev(e){var a=Av(e);return a.length==1&&a[0][2]?Vv(a[0][0],a[0][1]):function(p){return p===e||Cv(p,e,a)}}Bi.exports=Ev});var Y2=u((uy,zi)=>{var Pv=aa(),Mv=ra(),kv="[object Symbol]";function Ov(e){return typeof e=="symbol"||Mv(e)&&Pv(e)==kv}zi.exports=Ov});var X2=u((cy,Ui)=>{var Rv=G1(),qv=Y2(),Lv=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,Iv=/^\w*$/;function Fv(e,a){if(Rv(e))return!1;var p=typeof e;return p=="number"||p=="symbol"||p=="boolean"||e==null||qv(e)?!0:Iv.test(e)||!Lv.test(e)||a!=null&&e in Object(a)}Ui.exports=Fv});var Gi=u((fy,Hi)=>{var $i=G2(),Bv="Expected a function";function dt(e,a){if(typeof e!="function"||a!=null&&typeof a!="function")throw new TypeError(Bv);var p=function(){var t=arguments,d=a?a.apply(this,t):t[0],r=p.cache;if(r.has(d))return r.get(d);var i=e.apply(this,t);return p.cache=r.set(d,i)||r,i};return p.cache=new(dt.Cache||$i),p}dt.Cache=$i;Hi.exports=dt});var Ji=u((hy,Ki)=>{var jv=Gi(),zv=500;function Uv(e){var a=jv(e,function(t){return p.size===zv&&p.clear(),t}),p=a.cache;return a}Ki.exports=Uv});var Wi=u((vy,Zi)=>{var $v=Ji(),Hv=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Gv=/\\(\\)?/g,Kv=$v(function(e){var a=[];return e.charCodeAt(0)===46&&a.push(""),e.replace(Hv,function(p,t,d,r){a.push(d?r.replace(Gv,"$1"):t||p)}),a});Zi.exports=Kv});var Xi=u((gy,Yi)=>{function Jv(e,a){for(var p=-1,t=e==null?0:e.length,d=Array(t);++p<t;)d[p]=a(e[p],p,e);return d}Yi.exports=Jv});var d3=u((wy,t3)=>{var Qi=Ia(),Zv=Xi(),Wv=G1(),Yv=Y2(),Xv=1/0,e3=Qi?Qi.prototype:void 0,a3=e3?e3.toString:void 0;function p3(e){if(typeof e=="string")return e;if(Wv(e))return Zv(e,p3)+"";if(Yv(e))return a3?a3.call(e):"";var a=e+"";return a=="0"&&1/e==-Xv?"-0":a}t3.exports=p3});var i3=u((_y,r3)=>{var Qv=d3();function eg(e){return e==null?"":Qv(e)}r3.exports=eg});var rt=u((by,s3)=>{var ag=G1(),pg=X2(),tg=Wi(),dg=i3();function rg(e,a){return ag(e)?e:pg(e,a)?[e]:tg(dg(e))}s3.exports=rg});var Ha=u((yy,n3)=>{var ig=Y2(),sg=1/0;function ng(e){if(typeof e=="string"||ig(e))return e;var a=e+"";return a=="0"&&1/e==-sg?"-0":a}n3.exports=ng});var it=u((Sy,l3)=>{var lg=rt(),mg=Ha();function og(e,a){a=lg(a,e);for(var p=0,t=a.length;e!=null&&p<t;)e=e[mg(a[p++])];return p&&p==t?e:void 0}l3.exports=og});var o3=u((Ny,m3)=>{var ug=it();function cg(e,a,p){var t=e==null?void 0:ug(e,a);return t===void 0?p:t}m3.exports=cg});var c3=u((Ty,u3)=>{function fg(e,a){return e!=null&&a in Object(e)}u3.exports=fg});var h3=u((xy,f3)=>{var hg=rt(),vg=z0(),gg=G1(),wg=$0(),_g=Z2(),bg=Ha();function yg(e,a,p){a=hg(a,e);for(var t=-1,d=a.length,r=!1;++t<d;){var i=bg(a[t]);if(!(r=e!=null&&p(e,i)))break;e=e[i]}return r||++t!=d?r:(d=e==null?0:e.length,!!d&&_g(d)&&wg(i,d)&&(gg(e)||vg(e)))}f3.exports=yg});var g3=u((Dy,v3)=>{var Sg=c3(),Ng=h3();function Tg(e,a){return e!=null&&Ng(e,a,Sg)}v3.exports=Tg});var _3=u((Cy,w3)=>{var xg=at(),Dg=o3(),Cg=g3(),Ag=X2(),Vg=pt(),Eg=tt(),Pg=Ha(),Mg=1,kg=2;function Og(e,a){return Ag(e)&&Vg(a)?Eg(Pg(e),a):function(p){var t=Dg(p,e);return t===void 0&&t===a?Cg(p,e):xg(a,t,Mg|kg)}}w3.exports=Og});var y3=u((Ay,b3)=>{function Rg(e){return e}b3.exports=Rg});var N3=u((Vy,S3)=>{function qg(e){return function(a){return a?.[e]}}S3.exports=qg});var x3=u((Ey,T3)=>{var Lg=it();function Ig(e){return function(a){return Lg(a,e)}}T3.exports=Ig});var C3=u((Py,D3)=>{var Fg=N3(),Bg=x3(),jg=X2(),zg=Ha();function Ug(e){return jg(e)?Fg(zg(e)):Bg(e)}D3.exports=Ug});var V3=u((My,A3)=>{var $g=ji(),Hg=_3(),Gg=y3(),Kg=G1(),Jg=C3();function Zg(e){return typeof e=="function"?e:e==null?Gg:typeof e=="object"?Kg(e)?Hg(e[0],e[1]):$g(e):Jg(e)}A3.exports=Zg});var P3=u((ky,E3)=>{function Wg(e,a,p,t){for(var d=e.length,r=p+(t?1:-1);t?r--:++r<d;)if(a(e[r],r,e))return r;return-1}E3.exports=Wg});var k3=u((Oy,M3)=>{function Yg(e){return e!==e}M3.exports=Yg});var R3=u((Ry,O3)=>{function Xg(e,a,p){for(var t=p-1,d=e.length;++t<d;)if(e[t]===a)return t;return-1}O3.exports=Xg});var L3=u((qy,q3)=>{var Qg=P3(),ew=k3(),aw=R3();function pw(e,a,p){return a===a?aw(e,a,p):Qg(e,ew,p)}q3.exports=pw});var F3=u((Ly,I3)=>{var tw=L3();function dw(e,a){var p=e==null?0:e.length;return!!p&&tw(e,a,0)>-1}I3.exports=dw});var j3=u((Iy,B3)=>{function rw(e,a,p){for(var t=-1,d=e==null?0:e.length;++t<d;)if(p(a,e[t]))return!0;return!1}B3.exports=rw});var U3=u((Fy,z3)=>{function iw(){}z3.exports=iw});var H3=u((By,$3)=>{var st=J0(),sw=U3(),nw=J2(),lw=1/0,mw=st&&1/nw(new st([,-0]))[1]==lw?function(e){return new st(e)}:sw;$3.exports=mw});var K3=u((jy,G3)=>{var ow=I0(),uw=F3(),cw=j3(),fw=F0(),hw=H3(),vw=J2(),gw=200;function ww(e,a,p){var t=-1,d=uw,r=e.length,i=!0,n=[],s=n;if(p)i=!1,d=cw;else if(r>=gw){var l=a?null:hw(e);if(l)return vw(l);i=!1,d=fw,s=new ow}else s=a?[]:n;e:for(;++t<r;){var o=e[t],m=a?a(o):o;if(o=p||o!==0?o:0,i&&m===m){for(var c=s.length;c--;)if(s[c]===m)continue e;a&&s.push(m),n.push(o)}else d(s,m,p)||(s!==n&&s.push(m),n.push(o))}return n}G3.exports=ww});var Z3=u((zy,J3)=>{var _w=V3(),bw=K3();function yw(e,a){return e&&e.length?bw(e,_w(a,2)):[]}J3.exports=yw});var Dw={};n8(Dw,{default:()=>Q3});module.exports=l8(Dw);var L1=require("@raycast/api"),ep=pp(d0());var G=require("@raycast/api");var nt=require("@raycast/api");function O(e,a){let p=e.length;Array.isArray(e[0])||(e=[e]),Array.isArray(a[0])||(a=a.map(i=>[i]));let t=a[0].length,d=a[0].map((i,n)=>a.map(s=>s[n])),r=e.map(i=>d.map(n=>{let s=0;if(!Array.isArray(i)){for(let l of n)s+=i*l;return s}for(let l=0;l<i.length;l++)s+=i[l]*(n[l]||0);return s}));return p===1&&(r=r[0]),t===1?r.map(i=>i[0]):r}function ka(e){return pe(e)==="string"}function pe(e){return(Object.prototype.toString.call(e).match(/^\[object\s+(.*?)\]$/)[1]||"").toLowerCase()}function q2(e,{precision:a,unit:p}){return te(e)?"none":R4(e,a)+(p??"")}function te(e){return Number.isNaN(e)||e instanceof Number&&e?.none}function z(e){return te(e)?0:e}function R4(e,a){if(e===0)return 0;let p=~~e,t=0;p&&a&&(t=~~Math.log10(Math.abs(p))+1);let d=10**(a-t);return Math.floor(e*d+.5)/d}var Yn={deg:1,grad:.9,rad:180/Math.PI,turn:360};function q4(e){if(!e)return;e=e.trim();let a=/^([a-z]+)\((.+?)\)$/i,p=/^-?[\d.]+$/,t=/%|deg|g?rad|turn$/,d=/\/?\s*(none|[-\w.]+(?:%|deg|g?rad|turn)?)/g,r=e.match(a);if(r){let i=[];return r[2].replace(d,(n,s)=>{let l=s.match(t),o=s;if(l){let m=l[0],c=o.slice(0,-m.length);m==="%"?(o=new Number(c/100),o.type="<percentage>"):(o=new Number(c*Yn[m]),o.type="<angle>",o.unit=m)}else p.test(o)?(o=new Number(o),o.type="<number>"):o==="none"&&(o=new Number(NaN),o.none=!0);n.startsWith("/")&&(o=o instanceof Number?o:new Number(o),o.alpha=!0),typeof o=="object"&&o instanceof Number&&(o.raw=s),i.push(o)}),{name:r[1].toLowerCase(),rawName:r[1],rawArgs:r[2],args:i}}}function L4(e){return e[e.length-1]}function Ea(e,a,p){return isNaN(e)?a:isNaN(a)?e:e+(a-e)*p}function I4(e,a,p){return(p-e)/(a-e)}function T0(e,a,p){return Ea(a[0],a[1],I4(e[0],e[1],p))}function F4(e){return e.map(a=>a.split("|").map(p=>{p=p.trim();let t=p.match(/^(<[a-z]+>)\[(-?[.\d]+),\s*(-?[.\d]+)\]?$/);if(t){let d=new String(t[1]);return d.range=[+t[2],+t[3]],d}return p}))}function B4(e,a,p){return Math.max(Math.min(p,a),e)}function B2(e,a){return Math.sign(e)===Math.sign(a)?e:-e}function O1(e,a){return B2(Math.abs(e)**a,e)}function x0(e,a){return a===0?0:e/a}function j4(e,a,p=0,t=e.length){for(;p<t;){let d=p+t>>1;e[d]<a?p=d+1:t=d}return p}var Xn=Object.freeze({__proto__:null,bisectLeft:j4,clamp:B4,copySign:B2,interpolate:Ea,interpolateInv:I4,isNone:te,isString:ka,last:L4,mapRange:T0,multiplyMatrices:O,parseCoordGrammar:F4,parseFunction:q4,serializeNumber:q2,skipNone:z,spow:O1,toPrecision:R4,type:pe,zdiv:x0}),h0=class{add(a,p,t){if(typeof arguments[0]!="string"){for(var a in arguments[0])this.add(a,arguments[0][a],arguments[1]);return}(Array.isArray(a)?a:[a]).forEach(function(d){this[d]=this[d]||[],p&&this[d][t?"unshift":"push"](p)},this)}run(a,p){this[a]=this[a]||[],this[a].forEach(function(t){t.call(p&&p.context?p.context:p,p)})}},de=new h0,h1={gamut_mapping:"css",precision:5,deltaE:"76",verbose:globalThis?.process?.env?.NODE_ENV?.toLowerCase()!=="test",warn:function(a){this.verbose&&globalThis?.console?.warn?.(a)}},n1={D50:[.3457/.3585,1,(1-.3457-.3585)/.3585],D65:[.3127/.329,1,(1-.3127-.329)/.329]};function v0(e){return Array.isArray(e)?e:n1[e]}function L2(e,a,p,t={}){if(e=v0(e),a=v0(a),!e||!a)throw new TypeError(`Missing white point to convert ${e?"":"from"}${!e&&!a?"/":""}${a?"":"to"}`);if(e===a)return p;let d={W1:e,W2:a,XYZ:p,options:t};if(de.run("chromatic-adaptation-start",d),d.M||(d.W1===n1.D65&&d.W2===n1.D50?d.M=[[1.0479297925449969,.022946870601609652,-.05019226628920524],[.02962780877005599,.9904344267538799,-.017073799063418826],[-.009243040646204504,.015055191490298152,.7518742814281371]]:d.W1===n1.D50&&d.W2===n1.D65&&(d.M=[[.955473421488075,-.02309845494876471,.06325924320057072],[-.0283697093338637,1.0099953980813041,.021041441191917323],[.012314014864481998,-.020507649298898964,1.330365926242124]])),de.run("chromatic-adaptation-end",d),d.M)return O(d.M,d.XYZ);throw new TypeError("Only Bradford CAT with white points D50 and D65 supported for now.")}var Qn=new Set(["<number>","<percentage>","<angle>"]);function I6(e,a,p,t){return Object.entries(e.coords).map(([r,i],n)=>{let s=a.coordGrammar[n],l=t[n],o=l?.type,m;if(l.none?m=s.find(f=>Qn.has(f)):m=s.find(f=>f==o),!m){let f=i.name||r;throw new TypeError(`${o??l.raw} not allowed for ${f} in ${p}()`)}let c=m.range;o==="<percentage>"&&(c||=[0,1]);let v=i.range||i.refRange;return c&&v&&(t[n]=T0(c,v,t[n])),m})}function z4(e,{meta:a}={}){let p={str:String(e)?.trim()};if(de.run("parse-start",p),p.color)return p.color;if(p.parsed=q4(p.str),p.parsed){let t=p.parsed.name;if(t==="color"){let d=p.parsed.args.shift(),r=d.startsWith("--")?d.substring(2):`--${d}`,i=[d,r],n=p.parsed.rawArgs.indexOf("/")>0?p.parsed.args.pop():1;for(let o of S.all){let m=o.getFormat("color");if(m&&(i.includes(m.id)||m.ids?.filter(c=>i.includes(c)).length)){let c=Object.keys(o.coords).map((f,h)=>p.parsed.args[h]||0),v;return m.coordGrammar&&(v=I6(o,m,"color",c)),a&&Object.assign(a,{formatId:"color",types:v}),m.id.startsWith("--")&&!d.startsWith("--")&&h1.warn(`${o.name} is a non-standard space and not currently supported in the CSS spec. Use prefixed color(${m.id}) instead of color(${d}).`),d.startsWith("--")&&!m.id.startsWith("--")&&h1.warn(`${o.name} is a standard space and supported in the CSS spec. Use color(${m.id}) instead of prefixed color(${d}).`),{spaceId:o.id,coords:c,alpha:n}}}let s="",l=d in S.registry?d:r;if(l in S.registry){let o=S.registry[l].formats?.color?.id;o&&(s=`Did you mean color(${o})?`)}throw new TypeError(`Cannot parse color(${d}). `+(s||"Missing a plugin?"))}else for(let d of S.all){let r=d.getFormat(t);if(r&&r.type==="function"){let i=1;(r.lastAlpha||L4(p.parsed.args).alpha)&&(i=p.parsed.args.pop());let n=p.parsed.args,s;return r.coordGrammar&&(s=I6(d,r,t,n)),a&&Object.assign(a,{formatId:r.name,types:s}),{spaceId:d.id,coords:n,alpha:i}}}}else for(let t of S.all)for(let d in t.formats){let r=t.formats[d];if(r.type!=="custom"||r.test&&!r.test(p.str))continue;let i=r.parse(p.str);if(i)return i.alpha??=1,a&&(a.formatId=d),i}throw new TypeError(`Could not parse ${e} as a color. Missing a plugin?`)}function T(e){if(Array.isArray(e))return e.map(T);if(!e)throw new TypeError("Empty color reference");ka(e)&&(e=z4(e));let a=e.space||e.spaceId;return a instanceof S||(e.space=S.get(a)),e.alpha===void 0&&(e.alpha=1),e}var el=75e-6,S=class e{constructor(a){this.id=a.id,this.name=a.name,this.base=a.base?e.get(a.base):null,this.aliases=a.aliases,this.base&&(this.fromBase=a.fromBase,this.toBase=a.toBase);let p=a.coords??this.base.coords;for(let d in p)"name"in p[d]||(p[d].name=d);this.coords=p;let t=a.white??this.base.white??"D65";this.white=v0(t),this.formats=a.formats??{};for(let d in this.formats){let r=this.formats[d];r.type||="function",r.name||=d}this.formats.color?.id||(this.formats.color={...this.formats.color??{},id:a.cssId||this.id}),a.gamutSpace?this.gamutSpace=a.gamutSpace==="self"?this:e.get(a.gamutSpace):this.isPolar?this.gamutSpace=this.base:this.gamutSpace=this,this.gamutSpace.isUnbounded&&(this.inGamut=(d,r)=>!0),this.referred=a.referred,Object.defineProperty(this,"path",{value:al(this).reverse(),writable:!1,enumerable:!0,configurable:!0}),de.run("colorspace-init-end",this)}inGamut(a,{epsilon:p=el}={}){if(!this.equals(this.gamutSpace))return a=this.to(this.gamutSpace,a),this.gamutSpace.inGamut(a,{epsilon:p});let t=Object.values(this.coords);return a.every((d,r)=>{let i=t[r];if(i.type!=="angle"&&i.range){if(Number.isNaN(d))return!0;let[n,s]=i.range;return(n===void 0||d>=n-p)&&(s===void 0||d<=s+p)}return!0})}get isUnbounded(){return Object.values(this.coords).every(a=>!("range"in a))}get cssId(){return this.formats?.color?.id||this.id}get isPolar(){for(let a in this.coords)if(this.coords[a].type==="angle")return!0;return!1}getFormat(a){if(typeof a=="object")return a=F6(a,this),a;let p;return a==="default"?p=Object.values(this.formats)[0]:p=this.formats[a],p?(p=F6(p,this),p):null}equals(a){return a?this===a||this.id===a||this.id===a.id:!1}to(a,p){if(arguments.length===1){let n=T(a);[a,p]=[n.space,n.coords]}if(a=e.get(a),this.equals(a))return p;p=p.map(n=>Number.isNaN(n)?0:n);let t=this.path,d=a.path,r,i;for(let n=0;n<t.length&&t[n].equals(d[n]);n++)r=t[n],i=n;if(!r)throw new Error(`Cannot convert between color spaces ${this} and ${a}: no connection space was found`);for(let n=t.length-1;n>i;n--)p=t[n].toBase(p);for(let n=i+1;n<d.length;n++)p=d[n].fromBase(p);return p}from(a,p){if(arguments.length===1){let t=T(a);[a,p]=[t.space,t.coords]}return a=e.get(a),a.to(this,p)}toString(){return`${this.name} (${this.id})`}getMinCoords(){let a=[];for(let p in this.coords){let t=this.coords[p],d=t.range||t.refRange;a.push(d?.min??0)}return a}static registry={};static get all(){return[...new Set(Object.values(e.registry))]}static register(a,p){if(arguments.length===1&&(p=arguments[0],a=p.id),p=this.get(p),this.registry[a]&&this.registry[a]!==p)throw new Error(`Duplicate color space registration: '${a}'`);if(this.registry[a]=p,arguments.length===1&&p.aliases)for(let t of p.aliases)this.register(t,p);return p}static get(a,...p){if(!a||a instanceof e)return a;if(pe(a)==="string"){let d=e.registry[a.toLowerCase()];if(!d)throw new TypeError(`No color space found with id = "${a}"`);return d}if(p.length)return e.get(...p);throw new TypeError(`${a} is not a valid color space`)}static resolveCoord(a,p){let t=pe(a),d,r;if(t==="string"?a.includes(".")?[d,r]=a.split("."):[d,r]=[,a]:Array.isArray(a)?[d,r]=a:(d=a.space,r=a.coordId),d=e.get(d),d||(d=p),!d)throw new TypeError(`Cannot resolve coordinate reference ${a}: No color space specified and relative references are not allowed here`);if(t=pe(r),t==="number"||t==="string"&&r>=0){let s=Object.entries(d.coords)[r];if(s)return{space:d,id:s[0],index:r,...s[1]}}d=e.get(d);let i=r.toLowerCase(),n=0;for(let s in d.coords){let l=d.coords[s];if(s.toLowerCase()===i||l.name?.toLowerCase()===i)return{space:d,id:s,index:n,...l};n++}throw new TypeError(`No "${r}" coordinate found in ${d.name}. Its coordinates are: ${Object.keys(d.coords).join(", ")}`)}static DEFAULT_FORMAT={type:"functions",name:"color"}};function al(e){let a=[e];for(let p=e;p=p.base;)a.push(p);return a}function F6(e,{coords:a}={}){if(e.coords&&!e.coordGrammar){e.type||="function",e.name||="color",e.coordGrammar=F4(e.coords);let p=Object.entries(a).map(([t,d],r)=>{let i=e.coordGrammar[r][0],n=d.range||d.refRange,s=i.range,l="";return i=="<percentage>"?(s=[0,100],l="%"):i=="<angle>"&&(l="deg"),{fromRange:n,toRange:s,suffix:l}});e.serializeCoords=(t,d)=>t.map((r,i)=>{let{fromRange:n,toRange:s,suffix:l}=p[i];return n&&s&&(r=T0(n,s,r)),r=q2(r,{precision:d,unit:l}),r})}return e}var e1=new S({id:"xyz-d65",name:"XYZ D65",coords:{x:{name:"X"},y:{name:"Y"},z:{name:"Z"}},white:"D65",formats:{color:{ids:["xyz-d65","xyz"]}},aliases:["xyz"]}),d1=class extends S{constructor(a){a.coords||(a.coords={r:{range:[0,1],name:"Red"},g:{range:[0,1],name:"Green"},b:{range:[0,1],name:"Blue"}}),a.base||(a.base=e1),a.toXYZ_M&&a.fromXYZ_M&&(a.toBase??=p=>{let t=O(a.toXYZ_M,p);return this.white!==this.base.white&&(t=L2(this.white,this.base.white,t)),t},a.fromBase??=p=>(p=L2(this.base.white,this.white,p),O(a.fromXYZ_M,p))),a.referred??="display",super(a)}};function Oa(e,a){return e=T(e),!a||e.space.equals(a)?e.coords.slice():(a=S.get(a),a.from(e))}function c1(e,a){e=T(e);let{space:p,index:t}=S.resolveCoord(a,e.space);return Oa(e,p)[t]}function D0(e,a,p){return e=T(e),a=S.get(a),e.coords=a.to(e.space,p),e}D0.returns="color";function H1(e,a,p){if(e=T(e),arguments.length===2&&pe(arguments[1])==="object"){let t=arguments[1];for(let d in t)H1(e,d,t[d])}else{typeof p=="function"&&(p=p(c1(e,a)));let{space:t,index:d}=S.resolveCoord(a,e.space),r=Oa(e,t);r[d]=p,D0(e,t,r)}return e}H1.returns="color";var C0=new S({id:"xyz-d50",name:"XYZ D50",white:"D50",base:e1,fromBase:e=>L2(e1.white,"D50",e),toBase:e=>L2("D50",e1.white,e)}),pl=216/24389,B6=24/116,C2=24389/27,r0=n1.D50,f1=new S({id:"lab",name:"Lab",coords:{l:{refRange:[0,100],name:"Lightness"},a:{refRange:[-125,125]},b:{refRange:[-125,125]}},white:r0,base:C0,fromBase(e){let p=e.map((t,d)=>t/r0[d]).map(t=>t>pl?Math.cbrt(t):(C2*t+16)/116);return[116*p[1]-16,500*(p[0]-p[1]),200*(p[1]-p[2])]},toBase(e){let a=[];return a[1]=(e[0]+16)/116,a[0]=e[1]/500+a[1],a[2]=a[1]-e[2]/200,[a[0]>B6?Math.pow(a[0],3):(116*a[0]-16)/C2,e[0]>8?Math.pow((e[0]+16)/116,3):e[0]/C2,a[2]>B6?Math.pow(a[2],3):(116*a[2]-16)/C2].map((t,d)=>t*r0[d])},formats:{lab:{coords:["<number> | <percentage>","<number> | <percentage>[-1,1]","<number> | <percentage>[-1,1]"]}}});function R1(e){return(e%360+360)%360}function tl(e,a){if(e==="raw")return a;let[p,t]=a.map(R1),d=t-p;return e==="increasing"?d<0&&(t+=360):e==="decreasing"?d>0&&(p+=360):e==="longer"?-180<d&&d<180&&(d>0?p+=360:t+=360):e==="shorter"&&(d>180?p+=360:d<-180&&(t+=360)),[p,t]}var Pa=new S({id:"lch",name:"LCH",coords:{l:{refRange:[0,100],name:"Lightness"},c:{refRange:[0,150],name:"Chroma"},h:{refRange:[0,360],type:"angle",name:"Hue"}},base:f1,fromBase(e){let[a,p,t]=e,d,r=.02;return Math.abs(p)<r&&Math.abs(t)<r?d=NaN:d=Math.atan2(t,p)*180/Math.PI,[a,Math.sqrt(p**2+t**2),R1(d)]},toBase(e){let[a,p,t]=e;return p<0&&(p=0),isNaN(t)&&(t=0),[a,p*Math.cos(t*Math.PI/180),p*Math.sin(t*Math.PI/180)]},formats:{lch:{coords:["<number> | <percentage>","<number> | <percentage>","<number> | <angle>"]}}}),j6=25**7,I2=Math.PI,z6=180/I2,Ge=I2/180;function U6(e){let a=e*e;return a*a*a*e}function U4(e,a,{kL:p=1,kC:t=1,kH:d=1}={}){[e,a]=T([e,a]);let[r,i,n]=f1.from(e),s=Pa.from(f1,[r,i,n])[1],[l,o,m]=f1.from(a),c=Pa.from(f1,[l,o,m])[1];s<0&&(s=0),c<0&&(c=0);let v=(s+c)/2,f=U6(v),h=.5*(1-Math.sqrt(f/(f+j6))),g=(1+h)*i,_=(1+h)*o,w=Math.sqrt(g**2+n**2),b=Math.sqrt(_**2+m**2),y=g===0&&n===0?0:Math.atan2(n,g),N=_===0&&m===0?0:Math.atan2(m,_);y<0&&(y+=2*I2),N<0&&(N+=2*I2),y*=z6,N*=z6;let D=l-r,R=b-w,V=N-y,X=y+N,K=Math.abs(V),M;w*b===0?M=0:K<=180?M=V:V>180?M=V-360:V<-180?M=V+360:h1.warn("the unthinkable has happened");let m1=2*Math.sqrt(b*w)*Math.sin(M*Ge/2),v1=(r+l)/2,C=(w+b)/2,a1=U6(C),r1;w*b===0?r1=X:K<=180?r1=X/2:X<360?r1=(X+360)/2:r1=(X-360)/2;let xe=(v1-50)**2,ap=1+.015*xe/Math.sqrt(20+xe),mt=1+.045*C,la=1;la-=.17*Math.cos((r1-30)*Ge),la+=.24*Math.cos(2*r1*Ge),la+=.32*Math.cos((3*r1+6)*Ge),la-=.2*Math.cos((4*r1-63)*Ge);let ot=1+.015*C*la,e8=30*Math.exp(-1*((r1-275)/25)**2),a8=2*Math.sqrt(a1/(a1+j6)),p8=-1*Math.sin(2*e8*Ge)*a8,Ga=(D/(p*ap))**2;return Ga+=(R/(t*mt))**2,Ga+=(m1/(d*ot))**2,Ga+=p8*(R/(t*mt))*(m1/(d*ot)),Math.sqrt(Ga)}var dl=[[.819022437996703,.3619062600528904,-.1288737815209879],[.0329836539323885,.9292868615863434,.0361446663506424],[.0481771893596242,.2642395317527308,.6335478284694309]],rl=[[1.2268798758459243,-.5578149944602171,.2813910456659647],[-.0405757452148008,1.112286803280317,-.0717110580655164],[-.0763729366746601,-.4214933324022432,1.5869240198367816]],il=[[.210454268309314,.7936177747023054,-.0040720430116193],[1.9779985324311684,-2.42859224204858,.450593709617411],[.0259040424655478,.7827717124575296,-.8086757549230774]],sl=[[1,.3963377773761749,.2158037573099136],[1,-.1055613458156586,-.0638541728258133],[1,-.0894841775298119,-1.2914855480194092]],We=new S({id:"oklab",name:"Oklab",coords:{l:{refRange:[0,1],name:"Lightness"},a:{refRange:[-.4,.4]},b:{refRange:[-.4,.4]}},white:"D65",base:e1,fromBase(e){let p=O(dl,e).map(t=>Math.cbrt(t));return O(il,p)},toBase(e){let p=O(sl,e).map(t=>t**3);return O(rl,p)},formats:{oklab:{coords:["<percentage> | <number>","<number> | <percentage>[-1,1]","<number> | <percentage>[-1,1]"]}}});function g0(e,a){[e,a]=T([e,a]);let[p,t,d]=We.from(e),[r,i,n]=We.from(a),s=p-r,l=t-i,o=d-n;return Math.sqrt(s**2+l**2+o**2)}var nl=75e-6;function Se(e,a,{epsilon:p=nl}={}){e=T(e),a||(a=e.space),a=S.get(a);let t=e.coords;return a!==e.space&&(t=a.from(e)),a.inGamut(t,{epsilon:p})}function Ye(e){return{space:e.space,coords:e.coords.slice(),alpha:e.alpha}}function $4(e,a,p="lab"){p=S.get(p);let t=p.from(e),d=p.from(a);return Math.sqrt(t.reduce((r,i,n)=>{let s=d[n];return isNaN(i)||isNaN(s)?r:r+(s-i)**2},0))}function ll(e,a){return $4(e,a,"lab")}var ml=Math.PI,$6=ml/180;function ol(e,a,{l:p=2,c:t=1}={}){[e,a]=T([e,a]);let[d,r,i]=f1.from(e),[,n,s]=Pa.from(f1,[d,r,i]),[l,o,m]=f1.from(a),c=Pa.from(f1,[l,o,m])[1];n<0&&(n=0),c<0&&(c=0);let v=d-l,f=n-c,h=r-o,g=i-m,_=h**2+g**2-f**2,w=.511;d>=16&&(w=.040975*d/(1+.01765*d));let b=.0638*n/(1+.0131*n)+.638,y;Number.isNaN(s)&&(s=0),s>=164&&s<=345?y=.56+Math.abs(.2*Math.cos((s+168)*$6)):y=.36+Math.abs(.4*Math.cos((s+35)*$6));let N=Math.pow(n,4),D=Math.sqrt(N/(N+1900)),R=b*(D*y+1-D),V=(v/(p*w))**2;return V+=(f/(t*b))**2,V+=_/R**2,Math.sqrt(V)}var H6=203,A0=new S({id:"xyz-abs-d65",cssId:"--xyz-abs-d65",name:"Absolute XYZ D65",coords:{x:{refRange:[0,9504.7],name:"Xa"},y:{refRange:[0,1e4],name:"Ya"},z:{refRange:[0,10888.3],name:"Za"}},base:e1,fromBase(e){return e.map(a=>Math.max(a*H6,0))},toBase(e){return e.map(a=>Math.max(a/H6,0))}}),A2=1.15,V2=.66,G6=2610/2**14,ul=2**14/2610,K6=3424/2**12,J6=2413/2**7,Z6=2392/2**7,cl=1.7*2523/2**5,W6=2**5/(1.7*2523),E2=-.56,i0=16295499532821565e-27,fl=[[.41478972,.579999,.014648],[-.20151,1.120649,.0531008],[-.0166008,.2648,.6684799]],hl=[[1.9242264357876067,-1.0047923125953657,.037651404030618],[.35031676209499907,.7264811939316552,-.06538442294808501],[-.09098281098284752,-.3127282905230739,1.5227665613052603]],vl=[[.5,.5,0],[3.524,-4.066708,.542708],[.199076,1.096799,-1.295875]],gl=[[1,.1386050432715393,.05804731615611886],[.9999999999999999,-.1386050432715393,-.05804731615611886],[.9999999999999998,-.09601924202631895,-.8118918960560388]],H4=new S({id:"jzazbz",name:"Jzazbz",coords:{jz:{refRange:[0,1],name:"Jz"},az:{refRange:[-.5,.5]},bz:{refRange:[-.5,.5]}},base:A0,fromBase(e){let[a,p,t]=e,d=A2*a-(A2-1)*t,r=V2*p-(V2-1)*a,n=O(fl,[d,r,t]).map(function(c){let v=K6+J6*(c/1e4)**G6,f=1+Z6*(c/1e4)**G6;return(v/f)**cl}),[s,l,o]=O(vl,n);return[(1+E2)*s/(1+E2*s)-i0,l,o]},toBase(e){let[a,p,t]=e,d=(a+i0)/(1+E2-E2*(a+i0)),i=O(gl,[d,p,t]).map(function(c){let v=K6-c**W6,f=Z6*c**W6-J6;return 1e4*(v/f)**ul}),[n,s,l]=O(hl,i),o=(n+(A2-1)*l)/A2,m=(s+(V2-1)*o)/V2;return[o,m,l]},formats:{color:{coords:["<number> | <percentage>","<number> | <percentage>[-1,1]","<number> | <percentage>[-1,1]"]}}}),w0=new S({id:"jzczhz",name:"JzCzHz",coords:{jz:{refRange:[0,1],name:"Jz"},cz:{refRange:[0,1],name:"Chroma"},hz:{refRange:[0,360],type:"angle",name:"Hue"}},base:H4,fromBase(e){let[a,p,t]=e,d,r=2e-4;return Math.abs(p)<r&&Math.abs(t)<r?d=NaN:d=Math.atan2(t,p)*180/Math.PI,[a,Math.sqrt(p**2+t**2),R1(d)]},toBase(e){return[e[0],e[1]*Math.cos(e[2]*Math.PI/180),e[1]*Math.sin(e[2]*Math.PI/180)]}});function wl(e,a){[e,a]=T([e,a]);let[p,t,d]=w0.from(e),[r,i,n]=w0.from(a),s=p-r,l=t-i;Number.isNaN(d)&&Number.isNaN(n)?(d=0,n=0):Number.isNaN(d)?d=n:Number.isNaN(n)&&(n=d);let o=d-n,m=2*Math.sqrt(t*i)*Math.sin(o/2*(Math.PI/180));return Math.sqrt(s**2+l**2+m**2)}var G4=3424/4096,K4=2413/128,J4=2392/128,Y6=2610/16384,_l=2523/32,bl=16384/2610,X6=32/2523,yl=[[.3592832590121217,.6976051147779502,-.035891593232029],[-.1920808463704993,1.100476797037432,.0753748658519118],[.0070797844607479,.0748396662186362,.8433265453898765]],Sl=[[2048/4096,2048/4096,0],[6610/4096,-13613/4096,7003/4096],[17933/4096,-17390/4096,-543/4096]],Nl=[[.9999999999999998,.0086090370379328,.111029625003026],[.9999999999999998,-.0086090370379328,-.1110296250030259],[.9999999999999998,.5600313357106791,-.3206271749873188]],Tl=[[2.0701522183894223,-1.3263473389671563,.2066510476294053],[.3647385209748072,.6805660249472273,-.0453045459220347],[-.0497472075358123,-.0492609666966131,1.1880659249923042]],_0=new S({id:"ictcp",name:"ICTCP",coords:{i:{refRange:[0,1],name:"I"},ct:{refRange:[-.5,.5],name:"CT"},cp:{refRange:[-.5,.5],name:"CP"}},base:A0,fromBase(e){let a=O(yl,e);return xl(a)},toBase(e){let a=Dl(e);return O(Tl,a)}});function xl(e){let a=e.map(function(p){let t=G4+K4*(p/1e4)**Y6,d=1+J4*(p/1e4)**Y6;return(t/d)**_l});return O(Sl,a)}function Dl(e){return O(Nl,e).map(function(t){let d=Math.max(t**X6-G4,0),r=K4-J4*t**X6;return 1e4*(d/r)**bl})}function Cl(e,a){[e,a]=T([e,a]);let[p,t,d]=_0.from(e),[r,i,n]=_0.from(a);return 720*Math.sqrt((p-r)**2+.25*(t-i)**2+(d-n)**2)}var Al=n1.D65,Z4=.42,Q6=1/Z4,s0=2*Math.PI,W4=[[.401288,.650173,-.051461],[-.250268,1.204414,.045854],[-.002079,.048952,.953127]],Vl=[[1.8620678550872327,-1.0112546305316843,.14918677544445175],[.38752654323613717,.6214474419314753,-.008973985167612518],[-.015841498849333856,-.03412293802851557,1.0499644368778496]],El=[[460,451,288],[460,-891,-261],[460,-220,-6300]],Pl={dark:[.8,.525,.8],dim:[.9,.59,.9],average:[1,.69,1]},ye={h:[20.14,90,164.25,237.53,380.14],e:[.8,.7,1,1.2,.8],H:[0,100,200,300,400]},Ml=180/Math.PI,e4=Math.PI/180;function Y4(e,a){return e.map(t=>{let d=O1(a*Math.abs(t)*.01,Z4);return 400*B2(d,t)/(d+27.13)})}function kl(e,a){let p=100/a*27.13**Q6;return e.map(t=>{let d=Math.abs(t);return B2(p*O1(d/(400-d),Q6),t)})}function Ol(e){let a=R1(e);a<=ye.h[0]&&(a+=360);let p=j4(ye.h,a)-1,[t,d]=ye.h.slice(p,p+2),[r,i]=ye.e.slice(p,p+2),n=ye.H[p],s=(a-t)/r;return n+100*s/(s+(d-a)/i)}function Rl(e){let a=(e%400+400)%400,p=Math.floor(.01*a);a=a%100;let[t,d]=ye.h.slice(p,p+2),[r,i]=ye.e.slice(p,p+2);return R1((a*(i*t-r*d)-100*t*i)/(a*(i-r)-100*i))}function X4(e,a,p,t,d){let r={};r.discounting=d,r.refWhite=e,r.surround=t;let i=e.map(h=>h*100);r.la=a,r.yb=p;let n=i[1],s=O(W4,i);t=Pl[r.surround];let l=t[0];r.c=t[1],r.nc=t[2];let m=(1/(5*r.la+1))**4;r.fl=m*r.la+.1*(1-m)*(1-m)*Math.cbrt(5*r.la),r.flRoot=r.fl**.25,r.n=r.yb/n,r.z=1.48+Math.sqrt(r.n),r.nbb=.725*r.n**-.2,r.ncb=r.nbb;let c=d?1:Math.max(Math.min(l*(1-1/3.6*Math.exp((-r.la-42)/92)),1),0);r.dRgb=s.map(h=>Ea(1,n/h,c)),r.dRgbInv=r.dRgb.map(h=>1/h);let v=s.map((h,g)=>h*r.dRgb[g]),f=Y4(v,r.fl);return r.aW=r.nbb*(2*f[0]+f[1]+.05*f[2]),r}var a4=X4(Al,64/Math.PI*.2,20,"average",!1);function b0(e,a){if(!(e.J!==void 0^e.Q!==void 0))throw new Error("Conversion requires one and only one: 'J' or 'Q'");if(!(e.C!==void 0^e.M!==void 0^e.s!==void 0))throw new Error("Conversion requires one and only one: 'C', 'M' or 's'");if(!(e.h!==void 0^e.H!==void 0))throw new Error("Conversion requires one and only one: 'h' or 'H'");if(e.J===0||e.Q===0)return[0,0,0];let p=0;e.h!==void 0?p=R1(e.h)*e4:p=Rl(e.H)*e4;let t=Math.cos(p),d=Math.sin(p),r=0;e.J!==void 0?r=O1(e.J,1/2)*.1:e.Q!==void 0&&(r=.25*a.c*e.Q/((a.aW+4)*a.flRoot));let i=0;e.C!==void 0?i=e.C/r:e.M!==void 0?i=e.M/a.flRoot/r:e.s!==void 0&&(i=4e-4*e.s**2*(a.aW+4)/a.c);let n=O1(i*Math.pow(1.64-Math.pow(.29,a.n),-.73),10/9),s=.25*(Math.cos(p+2)+3.8),l=a.aW*O1(r,2/a.c/a.z),o=5e4/13*a.nc*a.ncb*s,m=l/a.nbb,c=23*(m+.305)*x0(n,23*o+n*(11*t+108*d)),v=c*t,f=c*d,h=kl(O(El,[m,v,f]).map(g=>g*1/1403),a.fl);return O(Vl,h.map((g,_)=>g*a.dRgbInv[_])).map(g=>g/100)}function Q4(e,a){let p=e.map(b=>b*100),t=Y4(O(W4,p).map((b,y)=>b*a.dRgb[y]),a.fl),d=t[0]+(-12*t[1]+t[2])/11,r=(t[0]+t[1]-2*t[2])/9,i=(Math.atan2(r,d)%s0+s0)%s0,n=.25*(Math.cos(i+2)+3.8),s=5e4/13*a.nc*a.ncb*x0(n*Math.sqrt(d**2+r**2),t[0]+t[1]+1.05*t[2]+.305),l=O1(s,.9)*Math.pow(1.64-Math.pow(.29,a.n),.73),o=a.nbb*(2*t[0]+t[1]+.05*t[2]),m=O1(o/a.aW,.5*a.c*a.z),c=100*O1(m,2),v=4/a.c*m*(a.aW+4)*a.flRoot,f=l*m,h=f*a.flRoot,g=R1(i*Ml),_=Ol(g),w=50*O1(a.c*l/(a.aW+4),1/2);return{J:c,C:f,h:g,s:w,Q:v,M:h,H:_}}var ql=new S({id:"cam16-jmh",cssId:"--cam16-jmh",name:"CAM16-JMh",coords:{j:{refRange:[0,100],name:"J"},m:{refRange:[0,105],name:"Colorfulness"},h:{refRange:[0,360],type:"angle",name:"Hue"}},base:e1,fromBase(e){let a=Q4(e,a4);return[a.J,a.M,a.h]},toBase(e){return b0({J:e[0],M:e[1],h:e[2]},a4)}}),Ll=n1.D65,Il=216/24389,er=24389/27;function Fl(e){return 116*(e>Il?Math.cbrt(e):(er*e+16)/116)-16}function y0(e){return e>8?Math.pow((e+16)/116,3):e/er}function Bl(e,a){let[p,t,d]=e,r=[],i=0;if(d===0)return[0,0,0];let n=y0(d);d>0?i=.00379058511492914*d**2+.608983189401032*d+.9155088574762233:i=9514440756550361e-21*d**2+.08693057439788597*d-21.928975842194614;let s=2e-12,l=15,o=0,m=1/0;for(;o<=l;){r=b0({J:i,C:t,h:p},a);let c=Math.abs(r[1]-n);if(c<m){if(c<=s)return r;m=c}i=i-(r[1]-n)*i/(2*r[1]),o+=1}return b0({J:i,C:t,h:p},a)}function jl(e,a){let p=Fl(e[1]);if(p===0)return[0,0,0];let t=Q4(e,V0);return[R1(t.h),t.C,p]}var V0=X4(Ll,200/Math.PI*y0(50),y0(50)*100,"average",!1),Ma=new S({id:"hct",name:"HCT",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},c:{refRange:[0,145],name:"Colorfulness"},t:{refRange:[0,100],name:"Tone"}},base:e1,fromBase(e){return jl(e)},toBase(e){return Bl(e,V0)},formats:{color:{id:"--hct",coords:["<number> | <angle>","<percentage> | <number>","<percentage> | <number>"]}}}),zl=Math.PI/180,p4=[1,.007,.0228];function t4(e){e[1]<0&&(e=Ma.fromBase(Ma.toBase(e)));let a=Math.log(Math.max(1+p4[2]*e[1]*V0.flRoot,1))/p4[2],p=e[0]*zl,t=a*Math.cos(p),d=a*Math.sin(p);return[e[2],t,d]}function Ul(e,a){[e,a]=T([e,a]);let[p,t,d]=t4(Ma.from(e)),[r,i,n]=t4(Ma.from(a));return Math.sqrt((p-r)**2+(t-i)**2+(d-n)**2)}var Xe={deltaE76:ll,deltaECMC:ol,deltaE2000:U4,deltaEJz:wl,deltaEITP:Cl,deltaEOK:g0,deltaEHCT:Ul};function $l(e){let a=e?Math.floor(Math.log10(Math.abs(e))):0;return Math.max(parseFloat(`1e${a-2}`),1e-6)}var d4={hct:{method:"hct.c",jnd:2,deltaEMethod:"hct",blackWhiteClamp:{}},"hct-tonal":{method:"hct.c",jnd:0,deltaEMethod:"hct",blackWhiteClamp:{channel:"hct.t",min:0,max:100}}};function re(e,{method:a=h1.gamut_mapping,space:p=void 0,deltaEMethod:t="",jnd:d=2,blackWhiteClamp:r={}}={}){if(e=T(e),ka(arguments[1])?p=arguments[1]:p||(p=e.space),p=S.get(p),Se(e,p,{epsilon:0}))return e;let i;if(a==="css")i=Hl(e,{space:p});else{if(a!=="clip"&&!Se(e,p)){Object.prototype.hasOwnProperty.call(d4,a)&&({method:a,jnd:d,deltaEMethod:t,blackWhiteClamp:r}=d4[a]);let n=U4;if(t!==""){for(let l in Xe)if("deltae"+t.toLowerCase()===l.toLowerCase()){n=Xe[l];break}}let s=re(k(e,p),{method:"clip",space:p});if(n(e,s)>d){if(Object.keys(r).length===3){let w=S.resolveCoord(r.channel),b=c1(k(e,w.space),w.id);if(te(b)&&(b=0),b>=r.max)return k({space:"xyz-d65",coords:n1.D65},e.space);if(b<=r.min)return k({space:"xyz-d65",coords:[0,0,0]},e.space)}let l=S.resolveCoord(a),o=l.space,m=l.id,c=k(e,o);c.coords.forEach((w,b)=>{te(w)&&(c.coords[b]=0)});let f=(l.range||l.refRange)[0],h=$l(d),g=f,_=c1(c,m);for(;_-g>h;){let w=Ye(c);w=re(w,{space:p,method:"clip"}),n(c,w)-d<h?g=c1(c,m):_=c1(c,m),H1(c,m,(g+_)/2)}i=k(c,p)}else i=s}else i=k(e,p);if(a==="clip"||!Se(i,p,{epsilon:0})){let n=Object.values(p.coords).map(s=>s.range||[]);i.coords=i.coords.map((s,l)=>{let[o,m]=n[l];return o!==void 0&&(s=Math.max(o,s)),m!==void 0&&(s=Math.min(s,m)),s})}}return p!==e.space&&(i=k(i,e.space)),e.coords=i.coords,e}re.returns="color";var r4={WHITE:{space:We,coords:[1,0,0]},BLACK:{space:We,coords:[0,0,0]}};function Hl(e,{space:a}={}){e=T(e),a||(a=e.space),a=S.get(a);let d=S.get("oklch");if(a.isUnbounded)return k(e,a);let r=k(e,d),i=r.coords[0];if(i>=1){let f=k(r4.WHITE,a);return f.alpha=e.alpha,k(f,a)}if(i<=0){let f=k(r4.BLACK,a);return f.alpha=e.alpha,k(f,a)}if(Se(r,a,{epsilon:0}))return k(r,a);function n(f){let h=k(f,a),g=Object.values(a.coords);return h.coords=h.coords.map((_,w)=>{if("range"in g[w]){let[b,y]=g[w].range;return B4(b,_,y)}return _}),h}let s=0,l=r.coords[1],o=!0,m=Ye(r),c=n(m),v=g0(c,m);if(v<.02)return c;for(;l-s>1e-4;){let f=(s+l)/2;if(m.coords[1]=f,o&&Se(m,a,{epsilon:0}))s=f;else if(c=n(m),v=g0(c,m),v<.02){if(.02-v<1e-4)break;o=!1,s=f}else l=f}return c}function k(e,a,{inGamut:p}={}){e=T(e),a=S.get(a);let t=a.from(e),d={space:a,coords:t,alpha:e.alpha};return p&&(d=re(d,p===!0?void 0:p)),d}k.returns="color";function Va(e,{precision:a=h1.precision,format:p="default",inGamut:t=!0,...d}={}){let r;e=T(e);let i=p;p=e.space.getFormat(p)??e.space.getFormat("default")??S.DEFAULT_FORMAT;let n=e.coords.slice();if(t||=p.toGamut,t&&!Se(e)&&(n=re(Ye(e),t===!0?void 0:t).coords),p.type==="custom")if(d.precision=a,p.serialize)r=p.serialize(n,e.alpha,d);else throw new TypeError(`format ${i} can only be used to parse colors, not for serialization`);else{let s=p.name||"color";p.serializeCoords?n=p.serializeCoords(n,a):a!==null&&(n=n.map(c=>q2(c,{precision:a})));let l=[...n];if(s==="color"){let c=p.id||p.ids?.[0]||e.space.id;l.unshift(c)}let o=e.alpha;a!==null&&(o=q2(o,{precision:a}));let m=e.alpha>=1||p.noAlpha?"":`${p.commas?",":" /"} ${o}`;r=`${s}(${l.join(p.commas?", ":" ")}${m})`}return r}var Gl=[[.6369580483012914,.14461690358620832,.1688809751641721],[.2627002120112671,.6779980715188708,.05930171646986196],[0,.028072693049087428,1.060985057710791]],Kl=[[1.716651187971268,-.355670783776392,-.25336628137366],[-.666684351832489,1.616481236634939,.0157685458139111],[.017639857445311,-.042770613257809,.942103121235474]],j2=new d1({id:"rec2020-linear",cssId:"--rec2020-linear",name:"Linear REC.2020",white:"D65",toXYZ_M:Gl,fromXYZ_M:Kl}),P2=1.09929682680944,i4=.018053968510807,ar=new d1({id:"rec2020",name:"REC.2020",base:j2,toBase(e){return e.map(function(a){return a<i4*4.5?a/4.5:Math.pow((a+P2-1)/P2,1/.45)})},fromBase(e){return e.map(function(a){return a>=i4?P2*Math.pow(a,.45)-(P2-1):4.5*a})}}),Jl=[[.4865709486482162,.26566769316909306,.1982172852343625],[.2289745640697488,.6917385218365064,.079286914093745],[0,.04511338185890264,1.043944368900976]],Zl=[[2.493496911941425,-.9313836179191239,-.40271078445071684],[-.8294889695615747,1.7626640603183463,.023624685841943577],[.03584583024378447,-.07617238926804182,.9568845240076872]],pr=new d1({id:"p3-linear",cssId:"--display-p3-linear",name:"Linear P3",white:"D65",toXYZ_M:Jl,fromXYZ_M:Zl}),Wl=[[.41239079926595934,.357584339383878,.1804807884018343],[.21263900587151027,.715168678767756,.07219231536073371],[.01933081871559182,.11919477979462598,.9505321522496607]],$=[[3.2409699419045226,-1.537383177570094,-.4986107602930034],[-.9692436362808796,1.8759675015077202,.04155505740717559],[.05563007969699366,-.20397695888897652,1.0569715142428786]],tr=new d1({id:"srgb-linear",name:"Linear sRGB",white:"D65",toXYZ_M:Wl,fromXYZ_M:$}),s4={aliceblue:[240/255,248/255,1],antiquewhite:[250/255,235/255,215/255],aqua:[0,1,1],aquamarine:[127/255,1,212/255],azure:[240/255,1,1],beige:[245/255,245/255,220/255],bisque:[1,228/255,196/255],black:[0,0,0],blanchedalmond:[1,235/255,205/255],blue:[0,0,1],blueviolet:[138/255,43/255,226/255],brown:[165/255,42/255,42/255],burlywood:[222/255,184/255,135/255],cadetblue:[95/255,158/255,160/255],chartreuse:[127/255,1,0],chocolate:[210/255,105/255,30/255],coral:[1,127/255,80/255],cornflowerblue:[100/255,149/255,237/255],cornsilk:[1,248/255,220/255],crimson:[220/255,20/255,60/255],cyan:[0,1,1],darkblue:[0,0,139/255],darkcyan:[0,139/255,139/255],darkgoldenrod:[184/255,134/255,11/255],darkgray:[169/255,169/255,169/255],darkgreen:[0,100/255,0],darkgrey:[169/255,169/255,169/255],darkkhaki:[189/255,183/255,107/255],darkmagenta:[139/255,0,139/255],darkolivegreen:[85/255,107/255,47/255],darkorange:[1,140/255,0],darkorchid:[153/255,50/255,204/255],darkred:[139/255,0,0],darksalmon:[233/255,150/255,122/255],darkseagreen:[143/255,188/255,143/255],darkslateblue:[72/255,61/255,139/255],darkslategray:[47/255,79/255,79/255],darkslategrey:[47/255,79/255,79/255],darkturquoise:[0,206/255,209/255],darkviolet:[148/255,0,211/255],deeppink:[1,20/255,147/255],deepskyblue:[0,191/255,1],dimgray:[105/255,105/255,105/255],dimgrey:[105/255,105/255,105/255],dodgerblue:[30/255,144/255,1],firebrick:[178/255,34/255,34/255],floralwhite:[1,250/255,240/255],forestgreen:[34/255,139/255,34/255],fuchsia:[1,0,1],gainsboro:[220/255,220/255,220/255],ghostwhite:[248/255,248/255,1],gold:[1,215/255,0],goldenrod:[218/255,165/255,32/255],gray:[128/255,128/255,128/255],green:[0,128/255,0],greenyellow:[173/255,1,47/255],grey:[128/255,128/255,128/255],honeydew:[240/255,1,240/255],hotpink:[1,105/255,180/255],indianred:[205/255,92/255,92/255],indigo:[75/255,0,130/255],ivory:[1,1,240/255],khaki:[240/255,230/255,140/255],lavender:[230/255,230/255,250/255],lavenderblush:[1,240/255,245/255],lawngreen:[124/255,252/255,0],lemonchiffon:[1,250/255,205/255],lightblue:[173/255,216/255,230/255],lightcoral:[240/255,128/255,128/255],lightcyan:[224/255,1,1],lightgoldenrodyellow:[250/255,250/255,210/255],lightgray:[211/255,211/255,211/255],lightgreen:[144/255,238/255,144/255],lightgrey:[211/255,211/255,211/255],lightpink:[1,182/255,193/255],lightsalmon:[1,160/255,122/255],lightseagreen:[32/255,178/255,170/255],lightskyblue:[135/255,206/255,250/255],lightslategray:[119/255,136/255,153/255],lightslategrey:[119/255,136/255,153/255],lightsteelblue:[176/255,196/255,222/255],lightyellow:[1,1,224/255],lime:[0,1,0],limegreen:[50/255,205/255,50/255],linen:[250/255,240/255,230/255],magenta:[1,0,1],maroon:[128/255,0,0],mediumaquamarine:[102/255,205/255,170/255],mediumblue:[0,0,205/255],mediumorchid:[186/255,85/255,211/255],mediumpurple:[147/255,112/255,219/255],mediumseagreen:[60/255,179/255,113/255],mediumslateblue:[123/255,104/255,238/255],mediumspringgreen:[0,250/255,154/255],mediumturquoise:[72/255,209/255,204/255],mediumvioletred:[199/255,21/255,133/255],midnightblue:[25/255,25/255,112/255],mintcream:[245/255,1,250/255],mistyrose:[1,228/255,225/255],moccasin:[1,228/255,181/255],navajowhite:[1,222/255,173/255],navy:[0,0,128/255],oldlace:[253/255,245/255,230/255],olive:[128/255,128/255,0],olivedrab:[107/255,142/255,35/255],orange:[1,165/255,0],orangered:[1,69/255,0],orchid:[218/255,112/255,214/255],palegoldenrod:[238/255,232/255,170/255],palegreen:[152/255,251/255,152/255],paleturquoise:[175/255,238/255,238/255],palevioletred:[219/255,112/255,147/255],papayawhip:[1,239/255,213/255],peachpuff:[1,218/255,185/255],peru:[205/255,133/255,63/255],pink:[1,192/255,203/255],plum:[221/255,160/255,221/255],powderblue:[176/255,224/255,230/255],purple:[128/255,0,128/255],rebeccapurple:[102/255,51/255,153/255],red:[1,0,0],rosybrown:[188/255,143/255,143/255],royalblue:[65/255,105/255,225/255],saddlebrown:[139/255,69/255,19/255],salmon:[250/255,128/255,114/255],sandybrown:[244/255,164/255,96/255],seagreen:[46/255,139/255,87/255],seashell:[1,245/255,238/255],sienna:[160/255,82/255,45/255],silver:[192/255,192/255,192/255],skyblue:[135/255,206/255,235/255],slateblue:[106/255,90/255,205/255],slategray:[112/255,128/255,144/255],slategrey:[112/255,128/255,144/255],snow:[1,250/255,250/255],springgreen:[0,1,127/255],steelblue:[70/255,130/255,180/255],tan:[210/255,180/255,140/255],teal:[0,128/255,128/255],thistle:[216/255,191/255,216/255],tomato:[1,99/255,71/255],turquoise:[64/255,224/255,208/255],violet:[238/255,130/255,238/255],wheat:[245/255,222/255,179/255],white:[1,1,1],whitesmoke:[245/255,245/255,245/255],yellow:[1,1,0],yellowgreen:[154/255,205/255,50/255]},n4=Array(3).fill("<percentage> | <number>[0, 255]"),l4=Array(3).fill("<number>[0, 255]"),Qe=new d1({id:"srgb",name:"sRGB",base:tr,fromBase:e=>e.map(a=>{let p=a<0?-1:1,t=a*p;return t>.0031308?p*(1.055*t**(1/2.4)-.055):12.92*a}),toBase:e=>e.map(a=>{let p=a<0?-1:1,t=a*p;return t<=.04045?a/12.92:p*((t+.055)/1.055)**2.4}),formats:{rgb:{coords:n4},rgb_number:{name:"rgb",commas:!0,coords:l4,noAlpha:!0},color:{},rgba:{coords:n4,commas:!0,lastAlpha:!0},rgba_number:{name:"rgba",commas:!0,coords:l4},hex:{type:"custom",toGamut:!0,test:e=>/^#([a-f0-9]{3,4}){1,2}$/i.test(e),parse(e){e.length<=5&&(e=e.replace(/[a-f0-9]/gi,"$&$&"));let a=[];return e.replace(/[a-f0-9]{2}/gi,p=>{a.push(parseInt(p,16)/255)}),{spaceId:"srgb",coords:a.slice(0,3),alpha:a.slice(3)[0]}},serialize:(e,a,{collapse:p=!0}={})=>{a<1&&e.push(a),e=e.map(r=>Math.round(r*255));let t=p&&e.every(r=>r%17===0);return"#"+e.map(r=>t?(r/17).toString(16):r.toString(16).padStart(2,"0")).join("")}},keyword:{type:"custom",test:e=>/^[a-z]+$/i.test(e),parse(e){e=e.toLowerCase();let a={spaceId:"srgb",coords:null,alpha:1};if(e==="transparent"?(a.coords=s4.black,a.alpha=0):a.coords=s4[e],a.coords)return a}}}}),dr=new d1({id:"p3",cssId:"display-p3",name:"P3",base:pr,fromBase:Qe.fromBase,toBase:Qe.toBase});h1.display_space=Qe;var Yl;if(typeof CSS<"u"&&CSS.supports)for(let e of[f1,ar,dr]){let a=e.getMinCoords(),t=Va({space:e,coords:a,alpha:1});if(CSS.supports("color",t)){h1.display_space=e;break}}function Xl(e,{space:a=h1.display_space,...p}={}){let t=Va(e,p);if(typeof CSS>"u"||CSS.supports("color",t)||!h1.display_space)t=new String(t),t.color=e;else{let d=e;if((e.coords.some(te)||te(e.alpha))&&!(Yl??=CSS.supports("color","hsl(none 50% 50%)"))&&(d=Ye(e),d.coords=d.coords.map(z),d.alpha=z(d.alpha),t=Va(d,p),CSS.supports("color",t)))return t=new String(t),t.color=d,t;d=k(d,a),t=new String(Va(d,p)),t.color=d}return t}function Ql(e,a){return e=T(e),a=T(a),e.space===a.space&&e.alpha===a.alpha&&e.coords.every((p,t)=>p===a.coords[t])}function ie(e){return c1(e,[e1,"y"])}function rr(e,a){H1(e,[e1,"y"],a)}function em(e){Object.defineProperty(e.prototype,"luminance",{get(){return ie(this)},set(a){rr(this,a)}})}var am=Object.freeze({__proto__:null,getLuminance:ie,register:em,setLuminance:rr});function pm(e,a){e=T(e),a=T(a);let p=Math.max(ie(e),0),t=Math.max(ie(a),0);return t>p&&([p,t]=[t,p]),(p+.05)/(t+.05)}var tm=.56,dm=.57,rm=.62,im=.65,m4=.022,sm=1.414,nm=.1,lm=5e-4,mm=1.14,o4=.027,om=1.14;function u4(e){return e>=m4?e:e+(m4-e)**sm}function Ke(e){let a=e<0?-1:1,p=Math.abs(e);return a*Math.pow(p,2.4)}function um(e,a){a=T(a),e=T(e);let p,t,d,r,i,n;a=k(a,"srgb"),[r,i,n]=a.coords;let s=Ke(r)*.2126729+Ke(i)*.7151522+Ke(n)*.072175;e=k(e,"srgb"),[r,i,n]=e.coords;let l=Ke(r)*.2126729+Ke(i)*.7151522+Ke(n)*.072175,o=u4(s),m=u4(l),c=m>o;return Math.abs(m-o)<lm?t=0:c?(p=m**tm-o**dm,t=p*mm):(p=m**im-o**rm,t=p*om),Math.abs(t)<nm?d=0:t>0?d=t-o4:d=t+o4,d*100}function cm(e,a){e=T(e),a=T(a);let p=Math.max(ie(e),0),t=Math.max(ie(a),0);t>p&&([p,t]=[t,p]);let d=p+t;return d===0?0:(p-t)/d}var fm=5e4;function hm(e,a){e=T(e),a=T(a);let p=Math.max(ie(e),0),t=Math.max(ie(a),0);return t>p&&([p,t]=[t,p]),t===0?fm:(p-t)/t}function vm(e,a){e=T(e),a=T(a);let p=c1(e,[f1,"l"]),t=c1(a,[f1,"l"]);return Math.abs(p-t)}var gm=216/24389,c4=24/116,M2=24389/27,n0=n1.D65,S0=new S({id:"lab-d65",name:"Lab D65",coords:{l:{refRange:[0,100],name:"Lightness"},a:{refRange:[-125,125]},b:{refRange:[-125,125]}},white:n0,base:e1,fromBase(e){let p=e.map((t,d)=>t/n0[d]).map(t=>t>gm?Math.cbrt(t):(M2*t+16)/116);return[116*p[1]-16,500*(p[0]-p[1]),200*(p[1]-p[2])]},toBase(e){let a=[];return a[1]=(e[0]+16)/116,a[0]=e[1]/500+a[1],a[2]=a[1]-e[2]/200,[a[0]>c4?Math.pow(a[0],3):(116*a[0]-16)/M2,e[0]>8?Math.pow((e[0]+16)/116,3):e[0]/M2,a[2]>c4?Math.pow(a[2],3):(116*a[2]-16)/M2].map((t,d)=>t*n0[d])},formats:{"lab-d65":{coords:["<number> | <percentage>","<number> | <percentage>[-1,1]","<number> | <percentage>[-1,1]"]}}}),l0=Math.pow(5,.5)*.5+.5;function wm(e,a){e=T(e),a=T(a);let p=c1(e,[S0,"l"]),t=c1(a,[S0,"l"]),d=Math.abs(Math.pow(p,l0)-Math.pow(t,l0)),r=Math.pow(d,1/l0)*Math.SQRT2-40;return r<7.5?0:r}var R2=Object.freeze({__proto__:null,contrastAPCA:um,contrastDeltaPhi:wm,contrastLstar:vm,contrastMichelson:cm,contrastWCAG21:pm,contrastWeber:hm});function _m(e,a,p={}){ka(p)&&(p={algorithm:p});let{algorithm:t,...d}=p;if(!t){let r=Object.keys(R2).map(i=>i.replace(/^contrast/,"")).join(", ");throw new TypeError(`contrast() function needs a contrast algorithm. Please specify one of: ${r}`)}e=T(e),a=T(a);for(let r in R2)if("contrast"+t.toLowerCase()===r.toLowerCase())return R2[r](e,a,d);throw new TypeError(`Unknown contrast algorithm: ${t}`)}function z2(e){let[a,p,t]=Oa(e,e1),d=a+15*p+3*t;return[4*a/d,9*p/d]}function ir(e){let[a,p,t]=Oa(e,e1),d=a+p+t;return[a/d,p/d]}function bm(e){Object.defineProperty(e.prototype,"uv",{get(){return z2(this)}}),Object.defineProperty(e.prototype,"xy",{get(){return ir(this)}})}var ym=Object.freeze({__proto__:null,register:bm,uv:z2,xy:ir});function Aa(e,a,p={}){ka(p)&&(p={method:p});let{method:t=h1.deltaE,...d}=p;for(let r in Xe)if("deltae"+t.toLowerCase()===r.toLowerCase())return Xe[r](e,a,d);throw new TypeError(`Unknown deltaE method: ${t}`)}function Sm(e,a=.25){let t=[S.get("oklch","lch"),"l"];return H1(e,t,d=>d*(1+a))}function Nm(e,a=.25){let t=[S.get("oklch","lch"),"l"];return H1(e,t,d=>d*(1-a))}var Tm=Object.freeze({__proto__:null,darken:Nm,lighten:Sm});function sr(e,a,p=.5,t={}){return[e,a]=[T(e),T(a)],pe(p)==="object"&&([p,t]=[.5,p]),Ra(e,a,t)(p)}function nr(e,a,p={}){let t;E0(e)&&([t,p]=[e,a],[e,a]=t.rangeArgs.colors);let{maxDeltaE:d,deltaEMethod:r,steps:i=2,maxSteps:n=1e3,...s}=p;t||([e,a]=[T(e),T(a)],t=Ra(e,a,s));let l=Aa(e,a),o=d>0?Math.max(i,Math.ceil(l/d)+1):i,m=[];if(n!==void 0&&(o=Math.min(o,n)),o===1)m=[{p:.5,color:t(.5)}];else{let c=1/(o-1);m=Array.from({length:o},(v,f)=>{let h=f*c;return{p:h,color:t(h)}})}if(d>0){let c=m.reduce((v,f,h)=>{if(h===0)return 0;let g=Aa(f.color,m[h-1].color,r);return Math.max(v,g)},0);for(;c>d;){c=0;for(let v=1;v<m.length&&m.length<n;v++){let f=m[v-1],h=m[v],g=(h.p+f.p)/2,_=t(g);c=Math.max(c,Aa(_,f.color),Aa(_,h.color)),m.splice(v,0,{p:g,color:t(g)}),v++}}}return m=m.map(c=>c.color),m}function Ra(e,a,p={}){if(E0(e)){let[s,l]=[e,a];return Ra(...s.rangeArgs.colors,{...s.rangeArgs.options,...l})}let{space:t,outputSpace:d,progression:r,premultiplied:i}=p;e=T(e),a=T(a),e=Ye(e),a=Ye(a);let n={colors:[e,a],options:p};if(t?t=S.get(t):t=S.registry[h1.interpolationSpace]||e.space,d=d?S.get(d):t,e=k(e,t),a=k(a,t),e=re(e),a=re(a),t.coords.h&&t.coords.h.type==="angle"){let s=p.hue=p.hue||"shorter",l=[t,"h"],[o,m]=[c1(e,l),c1(a,l)];isNaN(o)&&!isNaN(m)?o=m:isNaN(m)&&!isNaN(o)&&(m=o),[o,m]=tl(s,[o,m]),H1(e,l,o),H1(a,l,m)}return i&&(e.coords=e.coords.map(s=>s*e.alpha),a.coords=a.coords.map(s=>s*a.alpha)),Object.assign(s=>{s=r?r(s):s;let l=e.coords.map((c,v)=>{let f=a.coords[v];return Ea(c,f,s)}),o=Ea(e.alpha,a.alpha,s),m={space:t,coords:l,alpha:o};return i&&(m.coords=m.coords.map(c=>c/o)),d!==t&&(m=k(m,d)),m},{rangeArgs:n})}function E0(e){return pe(e)==="function"&&!!e.rangeArgs}h1.interpolationSpace="lab";function xm(e){e.defineFunction("mix",sr,{returns:"color"}),e.defineFunction("range",Ra,{returns:"function<color>"}),e.defineFunction("steps",nr,{returns:"array<color>"})}var Dm=Object.freeze({__proto__:null,isRange:E0,mix:sr,range:Ra,register:xm,steps:nr}),lr=new S({id:"hsl",name:"HSL",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},s:{range:[0,100],name:"Saturation"},l:{range:[0,100],name:"Lightness"}},base:Qe,fromBase:e=>{let a=Math.max(...e),p=Math.min(...e),[t,d,r]=e,[i,n,s]=[NaN,0,(p+a)/2],l=a-p;if(l!==0){switch(n=s===0||s===1?0:(a-s)/Math.min(s,1-s),a){case t:i=(d-r)/l+(d<r?6:0);break;case d:i=(r-t)/l+2;break;case r:i=(t-d)/l+4}i=i*60}return n<0&&(i+=180,n=Math.abs(n)),i>=360&&(i-=360),[i,n*100,s*100]},toBase:e=>{let[a,p,t]=e;a=a%360,a<0&&(a+=360),p/=100,t/=100;function d(r){let i=(r+a/30)%12,n=p*Math.min(t,1-t);return t-n*Math.max(-1,Math.min(i-3,9-i,1))}return[d(0),d(8),d(4)]},formats:{hsl:{coords:["<number> | <angle>","<percentage>","<percentage>"]},hsla:{coords:["<number> | <angle>","<percentage>","<percentage>"],commas:!0,lastAlpha:!0}}}),mr=new S({id:"hsv",name:"HSV",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},s:{range:[0,100],name:"Saturation"},v:{range:[0,100],name:"Value"}},base:lr,fromBase(e){let[a,p,t]=e;p/=100,t/=100;let d=t+p*Math.min(t,1-t);return[a,d===0?0:200*(1-t/d),100*d]},toBase(e){let[a,p,t]=e;p/=100,t/=100;let d=t*(1-p/2);return[a,d===0||d===1?0:(t-d)/Math.min(d,1-d)*100,d*100]},formats:{color:{id:"--hsv",coords:["<number> | <angle>","<percentage> | <number>","<percentage> | <number>"]}}}),Cm=new S({id:"hwb",name:"HWB",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},w:{range:[0,100],name:"Whiteness"},b:{range:[0,100],name:"Blackness"}},base:mr,fromBase(e){let[a,p,t]=e;return[a,t*(100-p)/100,100-t]},toBase(e){let[a,p,t]=e;p/=100,t/=100;let d=p+t;if(d>=1){let n=p/d;return[a,0,n*100]}let r=1-t,i=r===0?0:1-p/r;return[a,i*100,r*100]},formats:{hwb:{coords:["<number> | <angle>","<percentage> | <number>","<percentage> | <number>"]}}}),Am=[[.5766690429101305,.1855582379065463,.1882286462349947],[.29734497525053605,.6273635662554661,.07529145849399788],[.02703136138641234,.07068885253582723,.9913375368376388]],Vm=[[2.0415879038107465,-.5650069742788596,-.34473135077832956],[-.9692436362808795,1.8759675015077202,.04155505740717557],[.013444280632031142,-.11836239223101838,1.0151749943912054]],or=new d1({id:"a98rgb-linear",cssId:"--a98-rgb-linear",name:"Linear Adobe\xAE 98 RGB compatible",white:"D65",toXYZ_M:Am,fromXYZ_M:Vm}),Em=new d1({id:"a98rgb",cssId:"a98-rgb",name:"Adobe\xAE 98 RGB compatible",base:or,toBase:e=>e.map(a=>Math.pow(Math.abs(a),563/256)*Math.sign(a)),fromBase:e=>e.map(a=>Math.pow(Math.abs(a),256/563)*Math.sign(a))}),Pm=[[.7977666449006423,.13518129740053308,.0313477341283922],[.2880748288194013,.711835234241873,8993693872564e-17],[0,0,.8251046025104602]],Mm=[[1.3457868816471583,-.25557208737979464,-.05110186497554526],[-.5446307051249019,1.5082477428451468,.02052744743642139],[0,0,1.2119675456389452]],ur=new d1({id:"prophoto-linear",cssId:"--prophoto-rgb-linear",name:"Linear ProPhoto",white:"D50",base:C0,toXYZ_M:Pm,fromXYZ_M:Mm}),km=1/512,Om=16/512,Rm=new d1({id:"prophoto",cssId:"prophoto-rgb",name:"ProPhoto",base:ur,toBase(e){return e.map(a=>a<Om?a/16:a**1.8)},fromBase(e){return e.map(a=>a>=km?a**(1/1.8):16*a)}}),qm=new S({id:"oklch",name:"Oklch",coords:{l:{refRange:[0,1],name:"Lightness"},c:{refRange:[0,.4],name:"Chroma"},h:{refRange:[0,360],type:"angle",name:"Hue"}},white:"D65",base:We,fromBase(e){let[a,p,t]=e,d,r=2e-4;return Math.abs(p)<r&&Math.abs(t)<r?d=NaN:d=Math.atan2(t,p)*180/Math.PI,[a,Math.sqrt(p**2+t**2),R1(d)]},toBase(e){let[a,p,t]=e,d,r;return isNaN(t)?(d=0,r=0):(d=p*Math.cos(t*Math.PI/180),r=p*Math.sin(t*Math.PI/180)),[a,d,r]},formats:{oklch:{coords:["<percentage> | <number>","<number> | <percentage>[0,1]","<number> | <angle>"]}}}),cr=n1.D65,Lm=216/24389,f4=24389/27,[h4,v4]=z2({space:e1,coords:cr}),fr=new S({id:"luv",name:"Luv",coords:{l:{refRange:[0,100],name:"Lightness"},u:{refRange:[-215,215]},v:{refRange:[-215,215]}},white:cr,base:e1,fromBase(e){let a=[z(e[0]),z(e[1]),z(e[2])],p=a[1],[t,d]=z2({space:e1,coords:a});if(!Number.isFinite(t)||!Number.isFinite(d))return[0,0,0];let r=p<=Lm?f4*p:116*Math.cbrt(p)-16;return[r,13*r*(t-h4),13*r*(d-v4)]},toBase(e){let[a,p,t]=e;if(a===0||te(a))return[0,0,0];p=z(p),t=z(t);let d=p/(13*a)+h4,r=t/(13*a)+v4,i=a<=8?a/f4:Math.pow((a+16)/116,3);return[i*(9*d/(4*r)),i,i*((12-3*d-20*r)/(4*r))]},formats:{color:{id:"--luv",coords:["<number> | <percentage>","<number> | <percentage>[-1,1]","<number> | <percentage>[-1,1]"]}}}),P0=new S({id:"lchuv",name:"LChuv",coords:{l:{refRange:[0,100],name:"Lightness"},c:{refRange:[0,220],name:"Chroma"},h:{refRange:[0,360],type:"angle",name:"Hue"}},base:fr,fromBase(e){let[a,p,t]=e,d,r=.02;return Math.abs(p)<r&&Math.abs(t)<r?d=NaN:d=Math.atan2(t,p)*180/Math.PI,[a,Math.sqrt(p**2+t**2),R1(d)]},toBase(e){let[a,p,t]=e;return p<0&&(p=0),isNaN(t)&&(t=0),[a,p*Math.cos(t*Math.PI/180),p*Math.sin(t*Math.PI/180)]},formats:{color:{id:"--lchuv",coords:["<number> | <percentage>","<number> | <percentage>","<number> | <angle>"]}}}),Im=216/24389,Fm=24389/27,g4=$[0][0],w4=$[0][1],m0=$[0][2],_4=$[1][0],b4=$[1][1],o0=$[1][2],y4=$[2][0],S4=$[2][1],u0=$[2][2];function Je(e,a,p){let t=a/(Math.sin(p)-e*Math.cos(p));return t<0?1/0:t}function F2(e){let a=Math.pow(e+16,3)/1560896,p=a>Im?a:e/Fm,t=p*(284517*g4-94839*m0),d=p*(838422*m0+769860*w4+731718*g4),r=p*(632260*m0-126452*w4),i=p*(284517*_4-94839*o0),n=p*(838422*o0+769860*b4+731718*_4),s=p*(632260*o0-126452*b4),l=p*(284517*y4-94839*u0),o=p*(838422*u0+769860*S4+731718*y4),m=p*(632260*u0-126452*S4);return{r0s:t/r,r0i:d*e/r,r1s:t/(r+126452),r1i:(d-769860)*e/(r+126452),g0s:i/s,g0i:n*e/s,g1s:i/(s+126452),g1i:(n-769860)*e/(s+126452),b0s:l/m,b0i:o*e/m,b1s:l/(m+126452),b1i:(o-769860)*e/(m+126452)}}function N4(e,a){let p=a/360*Math.PI*2,t=Je(e.r0s,e.r0i,p),d=Je(e.r1s,e.r1i,p),r=Je(e.g0s,e.g0i,p),i=Je(e.g1s,e.g1i,p),n=Je(e.b0s,e.b0i,p),s=Je(e.b1s,e.b1i,p);return Math.min(t,d,r,i,n,s)}var Bm=new S({id:"hsluv",name:"HSLuv",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},s:{range:[0,100],name:"Saturation"},l:{range:[0,100],name:"Lightness"}},base:P0,gamutSpace:Qe,fromBase(e){let[a,p,t]=[z(e[0]),z(e[1]),z(e[2])],d;if(a>99.9999999)d=0,a=100;else if(a<1e-8)d=0,a=0;else{let r=F2(a),i=N4(r,t);d=p/i*100}return[t,d,a]},toBase(e){let[a,p,t]=[z(e[0]),z(e[1]),z(e[2])],d;if(t>99.9999999)t=100,d=0;else if(t<1e-8)t=0,d=0;else{let r=F2(t);d=N4(r,a)/100*p}return[t,d,a]},formats:{color:{id:"--hsluv",coords:["<number> | <angle>","<percentage> | <number>","<percentage> | <number>"]}}});$[0][0];$[0][1];$[0][2];$[1][0];$[1][1];$[1][2];$[2][0];$[2][1];$[2][2];function Ze(e,a){return Math.abs(a)/Math.sqrt(Math.pow(e,2)+1)}function T4(e){let a=Ze(e.r0s,e.r0i),p=Ze(e.r1s,e.r1i),t=Ze(e.g0s,e.g0i),d=Ze(e.g1s,e.g1i),r=Ze(e.b0s,e.b0i),i=Ze(e.b1s,e.b1i);return Math.min(a,p,t,d,r,i)}var jm=new S({id:"hpluv",name:"HPLuv",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},s:{range:[0,100],name:"Saturation"},l:{range:[0,100],name:"Lightness"}},base:P0,gamutSpace:"self",fromBase(e){let[a,p,t]=[z(e[0]),z(e[1]),z(e[2])],d;if(a>99.9999999)d=0,a=100;else if(a<1e-8)d=0,a=0;else{let r=F2(a),i=T4(r);d=p/i*100}return[t,d,a]},toBase(e){let[a,p,t]=[z(e[0]),z(e[1]),z(e[2])],d;if(t>99.9999999)t=100,d=0;else if(t<1e-8)t=0,d=0;else{let r=F2(t);d=T4(r)/100*p}return[t,d,a]},formats:{color:{id:"--hpluv",coords:["<number> | <angle>","<percentage> | <number>","<percentage> | <number>"]}}}),x4=203,D4=2610/2**14,zm=2**14/2610,Um=2523/2**5,C4=2**5/2523,A4=3424/2**12,V4=2413/2**7,E4=2392/2**7,$m=new d1({id:"rec2100pq",cssId:"rec2100-pq",name:"REC.2100-PQ",base:j2,toBase(e){return e.map(function(a){return(Math.max(a**C4-A4,0)/(V4-E4*a**C4))**zm*1e4/x4})},fromBase(e){return e.map(function(a){let p=Math.max(a*x4/1e4,0),t=A4+V4*p**D4,d=1+E4*p**D4;return(t/d)**Um})}}),P4=.17883277,M4=.28466892,k4=.55991073,c0=3.7743,Hm=new d1({id:"rec2100hlg",cssId:"rec2100-hlg",name:"REC.2100-HLG",referred:"scene",base:j2,toBase(e){return e.map(function(a){return a<=.5?a**2/3*c0:(Math.exp((a-k4)/P4)+M4)/12*c0})},fromBase(e){return e.map(function(a){return a/=c0,a<=1/12?Math.sqrt(3*a):P4*Math.log(12*a-M4)+k4})}}),hr={};de.add("chromatic-adaptation-start",e=>{e.options.method&&(e.M=vr(e.W1,e.W2,e.options.method))});de.add("chromatic-adaptation-end",e=>{e.M||(e.M=vr(e.W1,e.W2,e.options.method))});function U2({id:e,toCone_M:a,fromCone_M:p}){hr[e]=arguments[0]}function vr(e,a,p="Bradford"){let t=hr[p],[d,r,i]=O(t.toCone_M,e),[n,s,l]=O(t.toCone_M,a),o=[[n/d,0,0],[0,s/r,0],[0,0,l/i]],m=O(o,t.toCone_M);return O(t.fromCone_M,m)}U2({id:"von Kries",toCone_M:[[.40024,.7076,-.08081],[-.2263,1.16532,.0457],[0,0,.91822]],fromCone_M:[[1.8599363874558397,-1.1293816185800916,.21989740959619328],[.3611914362417676,.6388124632850422,-6370596838649899e-21],[0,0,1.0890636230968613]]});U2({id:"Bradford",toCone_M:[[.8951,.2664,-.1614],[-.7502,1.7135,.0367],[.0389,-.0685,1.0296]],fromCone_M:[[.9869929054667121,-.14705425642099013,.15996265166373122],[.4323052697233945,.5183602715367774,.049291228212855594],[-.00852866457517732,.04004282165408486,.96848669578755]]});U2({id:"CAT02",toCone_M:[[.7328,.4296,-.1624],[-.7036,1.6975,.0061],[.003,.0136,.9834]],fromCone_M:[[1.0961238208355142,-.27886900021828726,.18274517938277307],[.4543690419753592,.4735331543074117,.07209780371722911],[-.009627608738429355,-.00569803121611342,1.0153256399545427]]});U2({id:"CAT16",toCone_M:[[.401288,.650173,-.051461],[-.250268,1.204414,.045854],[-.002079,.048952,.953127]],fromCone_M:[[1.862067855087233,-1.0112546305316845,.14918677544445172],[.3875265432361372,.6214474419314753,-.008973985167612521],[-.01584149884933386,-.03412293802851557,1.0499644368778496]]});Object.assign(n1,{A:[1.0985,1,.35585],C:[.98074,1,1.18232],D55:[.95682,1,.92149],D75:[.94972,1,1.22638],E:[1,1,1],F2:[.99186,1,.67393],F7:[.95041,1,1.08747],F11:[1.00962,1,.6435]});n1.ACES=[.32168/.33767,1,(1-.32168-.33767)/.33767];var Gm=[[.6624541811085053,.13400420645643313,.1561876870049078],[.27222871678091454,.6740817658111484,.05368951740793705],[-.005574649490394108,.004060733528982826,1.0103391003129971]],Km=[[1.6410233796943257,-.32480329418479,-.23642469523761225],[-.6636628587229829,1.6153315916573379,.016756347685530137],[.011721894328375376,-.008284441996237409,.9883948585390215]],gr=new d1({id:"acescg",cssId:"--acescg",name:"ACEScg",coords:{r:{range:[0,65504],name:"Red"},g:{range:[0,65504],name:"Green"},b:{range:[0,65504],name:"Blue"}},referred:"scene",white:n1.ACES,toXYZ_M:Gm,fromXYZ_M:Km}),k2=2**-16,f0=-.35828683,O2=(Math.log2(65504)+9.72)/17.52,Jm=new d1({id:"acescc",cssId:"--acescc",name:"ACEScc",coords:{r:{range:[f0,O2],name:"Red"},g:{range:[f0,O2],name:"Green"},b:{range:[f0,O2],name:"Blue"}},referred:"scene",base:gr,toBase(e){let a=-.3013698630136986;return e.map(function(p){return p<=a?(2**(p*17.52-9.72)-k2)*2:p<O2?2**(p*17.52-9.72):65504})},fromBase(e){return e.map(function(a){return a<=0?(Math.log2(k2)+9.72)/17.52:a<k2?(Math.log2(k2+a*.5)+9.72)/17.52:(Math.log2(a)+9.72)/17.52})}}),O4=Object.freeze({__proto__:null,A98RGB:Em,A98RGB_Linear:or,ACEScc:Jm,ACEScg:gr,CAM16_JMh:ql,HCT:Ma,HPLuv:jm,HSL:lr,HSLuv:Bm,HSV:mr,HWB:Cm,ICTCP:_0,JzCzHz:w0,Jzazbz:H4,LCH:Pa,LCHuv:P0,Lab:f1,Lab_D65:S0,Luv:fr,OKLCH:qm,OKLab:We,P3:dr,P3_Linear:pr,ProPhoto:Rm,ProPhoto_Linear:ur,REC_2020:ar,REC_2020_Linear:j2,REC_2100_HLG:Hm,REC_2100_PQ:$m,XYZ_ABS_D65:A0,XYZ_D50:C0,XYZ_D65:e1,sRGB:Qe,sRGB_Linear:tr}),Y=class e{constructor(...a){let p;a.length===1&&(p=T(a[0]));let t,d,r;p?(t=p.space||p.spaceId,d=p.coords,r=p.alpha):[t,d,r]=a,Object.defineProperty(this,"space",{value:S.get(t),writable:!1,enumerable:!0,configurable:!0}),this.coords=d?d.slice():[0,0,0],this.alpha=r>1||r===void 0?1:r<0?0:r;for(let i=0;i<this.coords.length;i++)this.coords[i]==="NaN"&&(this.coords[i]=NaN);for(let i in this.space.coords)Object.defineProperty(this,i,{get:()=>this.get(i),set:n=>this.set(i,n)})}get spaceId(){return this.space.id}clone(){return new e(this.space,this.coords,this.alpha)}toJSON(){return{spaceId:this.spaceId,coords:this.coords,alpha:this.alpha}}display(...a){let p=Xl(this,...a);return p.color=new e(p.color),p}static get(a,...p){return a instanceof e?a:new e(a,...p)}static defineFunction(a,p,t=p){let{instance:d=!0,returns:r}=t,i=function(...n){let s=p(...n);if(r==="color")s=e.get(s);else if(r==="function<color>"){let l=s;s=function(...o){let m=l(...o);return e.get(m)},Object.assign(s,l)}else r==="array<color>"&&(s=s.map(l=>e.get(l)));return s};a in e||(e[a]=i),d&&(e.prototype[a]=function(...n){return i(this,...n)})}static defineFunctions(a){for(let p in a)e.defineFunction(p,a[p],a[p])}static extend(a){if(a.register)a.register(e);else for(let p in a)e.defineFunction(p,a[p])}};Y.defineFunctions({get:c1,getAll:Oa,set:H1,setAll:D0,to:k,equals:Ql,inGamut:Se,toGamut:re,distance:$4,toString:Va});Object.assign(Y,{util:Xn,hooks:de,WHITES:n1,Space:S,spaces:S.registry,parse:z4,defaults:h1});for(let e of Object.keys(O4))S.register(O4[e]);for(let e in S.registry)N0(e,S.registry[e]);de.add("colorspace-init-end",e=>{N0(e.id,e),e.aliases?.forEach(a=>{N0(a,e)})});function N0(e,a){let p=e.replace(/-/g,"_");Object.defineProperty(Y.prototype,p,{get(){let t=this.getAll(e);return typeof Proxy>"u"?t:new Proxy(t,{has:(d,r)=>{try{return S.resolveCoord([a,r]),!0}catch{}return Reflect.has(d,r)},get:(d,r,i)=>{if(r&&typeof r!="symbol"&&!(r in d)){let{index:n}=S.resolveCoord([a,r]);if(n>=0)return d[n]}return Reflect.get(d,r,i)},set:(d,r,i,n)=>{if(r&&typeof r!="symbol"&&!(r in d)||r>=0){let{index:s}=S.resolveCoord([a,r]);if(s>=0)return d[s]=i,this.setAll(e,d),!0}return Reflect.set(d,r,i,n)}})},set(t){this.setAll(e,t)},configurable:!0,enumerable:!0})}Y.extend(Xe);Y.extend({deltaE:Aa});Object.assign(Y,{deltaEMethods:Xe});Y.extend(Tm);Y.extend({contrast:_m});Y.extend(ym);Y.extend(am);Y.extend(Dm);Y.extend(R2);var Sw=pp(Z3()),W3=(0,nt.getPreferenceValues)();function H(e,a){let p;switch(typeof e=="string"?p=new Y(e):"colorSpace"in e?p=new Y(e.colorSpace,[e.red,e.green,e.blue],e.alpha):p=new Y("srgb",[e.red/255,e.green/255,e.blue/255],e.alpha),a||W3.colorFormat){default:case"hex":return p.to("srgb").toString({format:"hex"}).toUpperCase();case"hex-lower-case":return p.to("srgb").toString({format:"hex"}).toLowerCase();case"hex-no-prefix":return p.to("srgb").toString({format:"hex"}).replace("#","");case"rgb":return p.to("srgb").toString({format:"rgb_number"});case"rgb-percentage":return p.to("srgb").toString({format:"rgb"});case"rgba":return p.to("srgb").toString({format:"rgba_number"});case"rgba-percentage":return p.to("srgb").toString({format:"rgba"});case"hsla":return p.to("hsl").toString({format:"hsla"});case"hsva":return p.to("hsv").toString({format:"color"});case"oklch":{let t=p.to("oklch"),[d,r,i]=t.coords;return`oklch(${(d*100).toFixed(2)}% ${r} ${i})`}case"lch":{let t=p.to("lch"),[d,r,i]=t.coords;return`lch(${d.toFixed(2)}% ${r} ${i})`}case"p3":return p.to("p3").toString({format:"p3"})}}var Nw=["p3","rgb","rgb-percentage"];function Y3(e){return H(e,Nw.includes(W3.colorFormat)?"oklch":void 0)}var l1=require("react/jsx-runtime");function lt({color:e,onCopy:a}){return(0,l1.jsxs)(G.ActionPanel.Submenu,{title:"Copy As",icon:G.Icon.Clipboard,shortcut:G.Keyboard.Shortcut.Common.Copy,children:[(0,l1.jsx)(G.Action.CopyToClipboard,{title:"HEX",content:H(e,"hex"),onCopy:a}),(0,l1.jsx)(G.Action.CopyToClipboard,{title:"Lowercased HEX",content:H(e,"hex-lower-case"),onCopy:a}),(0,l1.jsx)(G.Action.CopyToClipboard,{title:"HEX Without #",content:H(e,"hex-no-prefix"),onCopy:a}),(0,l1.jsx)(G.Action.CopyToClipboard,{title:"RGB",content:H(e,"rgb"),onCopy:a}),(0,l1.jsx)(G.Action.CopyToClipboard,{title:"RGB Percentage",content:H(e,"rgb-percentage"),onCopy:a}),(0,l1.jsx)(G.Action.CopyToClipboard,{title:"RGBA",content:H(e,"rgba"),onCopy:a}),(0,l1.jsx)(G.Action.CopyToClipboard,{title:"RGBA Percentage",content:H(e,"rgba-percentage"),onCopy:a}),(0,l1.jsx)(G.Action.CopyToClipboard,{title:"HSL",content:H(e,"hsla"),onCopy:a}),(0,l1.jsx)(G.Action.CopyToClipboard,{title:"HSV",content:H(e,"hsva"),onCopy:a}),(0,l1.jsx)(G.Action.CopyToClipboard,{title:"OKLCH",content:H(e,"oklch"),onCopy:a}),(0,l1.jsx)(G.Action.CopyToClipboard,{title:"LCH",content:H(e,"lch"),onCopy:a}),(0,l1.jsx)(G.Action.CopyToClipboard,{title:"P3",content:H(e,"p3"),onCopy:a})]})}var X3=require("@raycast/api"),Tw=pp(d0());var xw=200;function Q2(e){let a=new X3.Cache,p=a.get("history"),t=p?JSON.parse(p):[],r=[{date:new Date().toISOString(),color:e},...t.filter(i=>H(i.color)!==H(e))].slice(0,xw);a.set("history",JSON.stringify(r))}var se=require("react/jsx-runtime");function Q3(e){let{data:a,isLoading:p}=(0,ep.useAI)(`Generate colors based on a prompt.

Please follow these rules:
- You MUST return an JSON array of HEX colors without any other characters. It should be PARSABLE and MINIFIED.
- Return an empty JSON array if it's not possible to generate colors.

Examples:
- ["#66D3BB","#7EDDC6","#96E7D1","#AEEFDB","#C6F9E6"]
- ["#0000CD","#0000FF","#1E90FF"]
- ["#FF0000","#FF6347","#FF7F50","#FF8C00","#FFA07A","#FFA500","#FFD700","#FFDEAD","#FFE4B5","#FFE4C4"]

Prompt: ${e.arguments.prompt}
JSON colors:`,{model:L1.AI.Model.OpenAI_GPT4o,stream:!1}),t=[];try{t=a?JSON.parse(a):[]}catch(d){(0,ep.showFailureToast)(d,{title:"Could not generate colors, please try again."})}return(0,se.jsx)(L1.Grid,{columns:5,isLoading:p,children:t.map((d,r)=>{let i=H(d),n=Y3(d),s={light:n,dark:n,adjustContrast:!1};return(0,se.jsx)(L1.Grid.Item,{content:{color:s},title:i,actions:(0,se.jsxs)(L1.ActionPanel,{children:[(0,se.jsx)(L1.Action.CopyToClipboard,{content:i,onCopy:()=>Q2(i)}),(0,se.jsx)(L1.Action.Paste,{content:i,onPaste:()=>Q2(i)}),(0,se.jsx)(lt,{color:i,onCopy:()=>Q2(i)})]})},r)})})}
